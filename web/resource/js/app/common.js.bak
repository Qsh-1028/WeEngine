/**
 * 刷新视窗
 */
function resizeView() {
    var clientHeight = document.documentElement.clientHeight
        , footerHeight = $(".footer").length > 0 ? $(".footer").css("height") : 0
        , leftMenuContentHeight = $(".left-menu-content").length > 0 ? $(".left-menu-content").css("height") : 0
        , footerWidth = $(".footer").length > 0 ? $(".footer").width() : 0
        , rightContentWidth = $(".right-content").length > 0 ? $(".right-content").width() : 0;
    if (2 == $(".left-menu, .right-content").length && footerWidth != rightContentWidth - 1) {
        $(".footer").length > 0 ? $(".footer").hide() : $(".footer").show();
    }
    ;
    $(".main-panel-body,.panel-cut").css("min-height", clientHeight - 100);
    $(".caret-wxapp .panel-app").css("min-height", clientHeight - 95);
    parseInt(leftMenuContentHeight) > clientHeight - 50 ? $(".skin-black .right-content>.content").css("min-height", parseInt(leftMenuContentHeight) - parseInt(footerHeight) - 30 + "px") : $(".skin-black .right-content>.content").css("min-height", clientHeight - parseInt(footerHeight) - 93 + "px");
    $(".link-group").each(function () {
        var e = $(this).children("a").length;
        $(this).css("min-width", 100 * e + 10)
    });
}

function we7ResourceMusicFormController($scope) {
    var that = this;
    that.music = {
        title: "",
        HQUrl: "",
        url: "",
        description: ""
    };

    that.$onInit = function () {
        that.music.url = that.musicurl
    };

    that.$onChanges = function (e) {
        that.music.url = e.musicurl.currentValue
    };

    that.selectVoice = function () {
        that.doselect()
    };

    that.ok = function () {
        if ("" != that.music.title) {
            if ("" != that.music.url) {
                $scope.$emit("add_music", that.music);
            } else {
                util.message("请选择媒体文件");
            }
        } else {
            util.message("标题不能为空");
        }
    }
}

function UploadController($scope, $sce, uiUploader, $timeout) {
    // 异步修改变量值
    function setUploading(isUploading) {
        $timeout(function () {
            $scope.uploading = isUploading
        })
    }

    function startUpload(files) {
        if (!that.uploading) {
            var file = files[0];
            that.filename = file.name;
            that.filesize = parseInt(file.size / 1024);
            that.files = files;
            setUploading(true); // 正在上传
            var uploadUrl = that.uploadUrl;
            uiUploader.upload(files, uploadUrl, {
                onProgress: progress // 通过这里传入进度回调函数到XMLHttpRequest.upload.onprogress
            }).then(function (response) {
                var t = JSON.parse(response);
                setUploading(false); // 上传完成
                registerChangeEvent();
                if (t.message && "" != t.message) {
                    that.onUploadError({
                        mes: t.message
                    });
                } else {
                    that.onUploaded();
                }
            }, function (e) {
                registerChangeEvent();
                setUploading(false);
                that.onUploadError("");
            })
        }
    }

    /**
     * 传递给XMLHttpRequest.upload.onprogress的进度函数
     * @param file
     */
    function progress(file) {
        var progress = parseInt(file.loaded / file.total * 100);
        file.filename = file.name;
        file.filesize = parseInt(file.size / 1024);
        file.progress = progress;
        that.onProgress({ // 这里的onProgress是通过we7-uploader-btn组件属性绑定的函数
            file: file,
            progress: progress
        });
        // 异步修改变量值
        $timeout(function () {
            $scope.progress = progress;
        });
    }

    // 初始化控制器时就注册change事件
    function registerChangeEvent() {
        var dom = document.getElementById("we7resourceFile");
        dom.value = null;
        dom.addEventListener("change", function (event) {
            startUpload(event.target.files);
        });
    }

    var that = this; // UploadController对象
    that.currentFile = null;
    $scope.uploading = true;
    that.uploadProgress = 0;
    that.$onInit = function () {
    }
    if (document.addEventListener) {
        document.addEventListener("dragenter", function (event) {
            event.stopPropagation();
            event.preventDefault();
        }, false);
        document.addEventListener("dragover", function (event) {
            event.stopPropagation();
            event.preventDefault();
        }, false);
        document.getElementById("material-Modal").addEventListener("drop", function (event) {
            event.stopPropagation();
            event.preventDefault();
            startUpload(event.dataTransfer.files);
        });
    }
    registerChangeEvent();
}

function uiUploader($log, $q) {

    function addFiles(files) {
        for (var t = 0; t < files.length; t++)
            that.files.push(files[t])
    }

    function startUpload(options) {
        that.options = options;
        for (var headers = options.headers || {}, options = options.options || {}, n = 0; n < that.files.length && that.activeUploads != that.options.concurrency; n++)
            that.files[n].active || sendRequest(that.files[n], that.options.url, that.options.data, that.options.paramName, headers, options)
    }

    function removeFile(e) {
        that.files.splice(that.files.indexOf(e), 1)
    }

    function humanSize(fileSize) {
        var units = ["n/a", "bytes", "KiB", "MiB", "GiB", "TB", "PB", "EiB", "ZiB", "YiB"]
            , a = 0 === fileSize ? 0 : +Math.floor(Math.log(fileSize) / Math.log(1024));
        return (fileSize / Math.pow(1024, a)).toFixed(a ? 1 : 0) + " " + units[isNaN(fileSize) ? 0 : a + 1]
    }

    function sendRequest(uploadFileInfo, requestUrl, param, filedName, requestHeader, options) {
        var XMLHttpRequest, formData, name;
        param = param || {};
        filedName = filedName || "file";
        that.activeUploads += 1;
        uploadFileInfo.active = true;
        XMLHttpRequest = new window.XMLHttpRequest;
        if (true === options.withCredentials) {
            XMLHttpRequest.withCredentials = true
        }
        formData = new window.FormData;
        XMLHttpRequest.open("POST", requestUrl);
        if (requestHeader) {
            for (var name in requestHeader) {
                if (requestHeader.hasOwnProperty(name)) {
                    XMLHttpRequest.setRequestHeader(name, requestHeader[name]);
                }
            }
        }
        // 上传开始
        XMLHttpRequest.upload.onloadstart = function () {
        };
        // 上传过程
        XMLHttpRequest.upload.onprogress = function (event) {
            if (event.lengthComputable) {
                uploadFileInfo.loaded = event.loaded;
                uploadFileInfo.total = event.total;
                uploadFileInfo.humanSize = humanSize(event.loaded);
                // 这里调用进度回调函数
                angular.isFunction(that.options.onProgress) && that.options.onProgress(uploadFileInfo);
            }
        };
        // 上传完成
        XMLHttpRequest.upload.onload = function () {
            angular.isFunction(that.options.onUploadSuccess) && that.options.onUploadSuccess(uploadFileInfo)
        };
        // 上传错误
        XMLHttpRequest.upload.onerror = function (e) {
            angular.isFunction(that.options.onError) && that.options.onError(e)
        };
        // 请求完成，当上传完成后也会调用该方法
        XMLHttpRequest.onload = function () {
            that.activeUploads -= 1;
            that.uploadedFiles += 1;
            startUpload(that.options);

            angular.isFunction(that.options.onCompleted) && that.options.onCompleted(uploadFileInfo, XMLHttpRequest.responseText, XMLHttpRequest.status);
            if (0 === that.activeUploads) {
                that.uploadedFiles = 0;
                angular.isFunction(that.options.onCompletedAll) && that.options.onCompletedAll(that.files);
            }
        };

        if (param) {
            for (name in param) {
                param.hasOwnProperty(name) && formData.append(name, param[name]);
            }
        }
        formData.append(filedName, uploadFileInfo, uploadFileInfo.name);
        XMLHttpRequest.send(formData);
        return XMLHttpRequest;
    }

    var that = this;
    that.files = [];
    that.options = {};
    that.activeUploads = 0; // 正在上传数量
    that.uploadedFiles = 0; // 已经上传数量

    return {
        addFiles: addFiles,
        getFiles: function () {
            return that.files
        },
        files: that.files,
        startUpload: startUpload,
        removeFile: removeFile,
        removeAll: function () {
            that.files.splice(0, that.files.length)
        },
        upload: function (files, uploadUrl, options) {
            var deferred = $q.defer();
            addFiles(files);
            startUpload({
                url: uploadUrl,
                oncurrency: 5,
                onProgress: function (uploadFileInfo) {
                    options.onProgress && options.onProgress(uploadFileInfo)
                },
                onCompleted: function (uploadFileInfo, responseText) {
                    removeFile(uploadFileInfo);
                    deferred.resolve(responseText);
                }
            });
            return deferred.promise;
        }
    }
}

function VoiceController(e, t, a, n) {
    function i() {
        a.getResources("voice", e.currentPage, 1 == e.index).then(function (e) {
            o.voices = e.items,
                o.pager = t.trustAsHtml(e.pager)
        })
    }

    function s() {
        e.uploadurl = 0 === e.index ? "./index.php?c=utility&a=file&do=wechat_upload&upload_type=audio&mode=perm&uniacid=" + e.uniacid : "./index.php?c=utility&a=file&do=upload&upload_type=audio&global=" + e.global + "&dest_dir=" + e.dest_dir + "&uniacid=" + e.uniacid
    }

    e.resourceType = "voice",
        n("we7resource-base-controller", {
            $scope: e
        }),
        e.uploadname = "上传语音",
        e.accept = "audio/amr,audio/mp3,audio/wma,audio/wmv,audio/amr";
    var o = this;
    o.$onInit = function () {
        o.multiple = false
    }
        ,
        o.itemClick = function (t) {
            if (!o.multiple)
                return e.needConvert() ? void util.message("当前资源无法选择") : t.selected ? void (t.selected = false) : (t.selected = true,
                    void e.$emit("selected_voice", t))
        }
        ,
        e.canConvert = function (e) {
            return false
        }
        ,
        e.loadData = function () {
            i()
        }
        ,
        e.onIndexChange = function (e) {
            i(),
                s()
        }
        ,
        s(),
        e.$on("voice_page_change", function (t, a) {
            e.setCurrentPage(a)
        }),
        o.timeToDate = function (e) {
            return new Date(1e3 * e)
        }
        ,
        o.getTitle = function (e) {
            return o.isWechat ? e.attachment : e.filename
        }
        ,
        i()
}

angular.module("we7app", ["ngAnimate", "ngSanitize", "ui.bootstrap", "angular-clipboard"]);

angular.module("we7app").run(["$rootScope", function (rootScope) {  //run方法初始化全局数据，只对全局作用域起作用
    rootScope.URL = "test"
}
]);

// http拦截器一般通过定义factory的方式实现
angular.module("we7app").factory("interceptors", [function () {
    return {
        request: function (config) {
            config.beforeSend && config.beforeSend();
            return config;
        },
        response: function (response) {
            response.config.complete && response.config.complete(response);
            return response;
        }
    }
}
]);

// config()方法对模块进行配置
angular.module("we7app").config(["$httpProvider", function ($httpProvider) {
    $httpProvider.interceptors.push("interceptors"); // 拦截器加入到$httpProvider.interceptors数组中
    $httpProvider.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded;charset=utf-8";
    $httpProvider.defaults.headers.common["X-Requested-With"] = "XMLHttpRequest";
    var dataHandler = function (postData) {
        var attr, value, name, item, object, index, queryString = "";
        for (attr in postData)
            if ((value = postData[attr]) instanceof Array)
                for (index = 0; index < value.length; ++index) {
                    item = value[index];
                    (object = {})[attr + "[" + index + "]"] = item;
                    queryString += dataHandler(object) + "&";
                }
            else if (value instanceof Object)
                for (name in value) {
                    item = value[name];
                    (object = {})[attr + "[" + name + "]"] = item;
                    queryString += dataHandler(object) + "&";
                }
            else { // 用void 0是为了防止undefined被重写而出现判断不准确的情况
                if (void 0 !== value && null !== value) {
                    queryString += encodeURIComponent(attr) + "=" + encodeURIComponent(value) + "&"
                }
            }
        return queryString.length ? queryString.substr(0, queryString.length - 1) : queryString
    };
    // 在请求发送前和响应还没有触发callback前对post data 做一些处理，post的时候如果data是对象将json化
    $httpProvider.defaults.transformRequest = [function (postData) {
        return angular.isObject(postData) && "[object File]" !== String(postData) ? dataHandler(postData) : postData
    }]
}
]);

$(function () {
    // 切换屏幕大小
    function changeScreen() {
        if (true == util.cookie.get("main-lg")) {
            $(".skin-default").addClass("main-lg-body");
            $(".js-big-main").text("正常");
        } else {
            $(".skin-default").removeClass("main-lg-body");
            $(".js-big-main").text("宽屏");
        }
    }

    // 显示message cookie中信息
    util.cookie_message();
    // 设置__lastvisit_ cookie来保存最后一次访问的页面
    window.sysinfo.uid && util.cookie.set("__lastvisit_" + window.sysinfo.uid, [window.sysinfo.uniacid, window.sysinfo.siteurl], 604800);

    // 复制到剪切板
    $(".js-clip").each(function () {
        util.clip(this, $(this).attr("data-url"))
    });

    /**
     * bootstrap提示工具（Tooltip）插件不像之前所讨论的下拉菜单及其他插件那样，它不是纯 CSS 插件。如需使用该插件，您必须使用 jquery 激活它（读取 javascript）。使用下面的脚本来启用页面中的所有的提示工具（tooltip）
     *
     * 弹出框（Popover）插件不像之前所讨论的下拉菜单及其他插件那样，它不是纯 CSS 插件。如需使用该插件，您必须使用 jquery 激活它（读取 javascript）。使用下面的脚本来启用页面中的所有的弹出框（popover）
     */
    if ($.fn.tooltip) {
        $('[data-toggle="tooltip"]').tooltip();
        $('[data-toggle="dropdown"]').dropdown();
        $('[data-toggle="popover"]').popover();
    }

    // 对于加载失败的图片，使用默认图片
    $("img").error(function () {
        if (!$(this).attr("onerror")) {
            var src = "resource/images/nopic-107.png";
            if ($(this).width() == $(this).height()) {
                src = "resource/images/nopic-107.png";
            } else if ($(this).width() < $(this).height()) {
                src = "resource/images/nopic-203.png";
            }
            $(this).attr("src", src);
        }
    });

    if (window.sysinfo.module && window.sysinfo.module.name) {
        if (null === util.cookie.get("module_status:" + window.sysinfo.module.name) || null === util.cookie.get("module_status:" + window.sysinfo.module.name)) {
            $.getJSON("./index.php?c=module&a=manage-account&do=check_status&module=" + window.sysinfo.module.name, function (response) {

                if (1 == response.message.errno || 2 == response.message.errno && 1 == window.sysinfo.isfounder) {
                    $(".head").after('<div class="system-tips we7-body-alert"><div class="container text-right"> <span class="alert-info"><a href="javascript:;">' + response.message.message + "</a></span></div></div>");
                }
            });
        } else {
            module_status = util.cookie.get("module_status:" + window.sysinfo.module.name);
            module_status = $.parseJSON(module_status);

            if (1 == module_status.ban) {
                $(".head").after('<div class="system-tips we7-body-alert"><div class="container text-right"> <span class="alert-info"><a href="javascript:;">您的站点存在盗版模块, 请删除文件后联系客服</a></span></div></div>');
            } else if (1 == module_status.upgrade.upgrade && 1 == window.sysinfo.isfounder) {
                $(".head").after('<div class="system-tips we7-body-alert"><div class="container text-right"> <span class="alert-info"><a href="javascript:;">【' + module_status.upgrade.name + "】检测最新版为" + module_status.upgrade.version + "，请尽快更新！</a></span></div></div>");
            }
        }
    }

    $(".js-big-main").click(function () {
        var t = $(".skin-default").hasClass("main-lg-body") ? "0" : "1";
        util.cookie.set("main-lg", t);
        changeScreen();
    });

    // 读取通知消息
    if (window.sysinfo.uid) {
        var dataObj = new Date;
        $.getJSON("./index.php?c=message&a=notice&do=event_notice", function (response) {
            var html = "";

            if (0 == response.message.errno && response.message.message.total) {
                html += '<a href="javascript:;" class="dropdown-toogle" data-toggle="dropdown"><span class="wi wi-bell"><span class="badge">' + response.message.message.total + "</span></span> </a>";
                html += '<div class="dropdown-menu"><div class="clearfix top">消息<a href="./index.php?c=message&a=notice" class="pull-right">查看更多</a><a href="./index.php?c=message&a=notice&do=all_read" class="pull-right" style="margin-right: 5px">全部已读</a></div><div class="msg-list-container"><div class="msg-list">';
                $.each(response.message.message.lists, function (e, notice) {
                    html += '<div class="item"><div class="info clearifx"><div class="pull-right date">' + notice.create_time + "</div>";
                    1 == notice.type && (html += "来自 <span>订单消息</span>");
                    2 != notice.type && 5 != notice.type || (html += "来自 <span>过期消息</span>");
                    4 == notice.type && (html += "来自 <span>注册消息</span>");
                    3 == notice.type && (html += "来自 <span>工单消息</span>");
                    8 == notice.type && (html += "来自 <span>小程序升级模块消息</span>");
                    html += '</div><div class="msg-content">';
                    html += "<a href=" + notice.url + ">" + notice.message + "</a>";
                    html += "</div></div>";
                });
                html += "</div></div></div>";
                $(".header-notice").html(html);
            }

            var currentTime = parseInt(dataObj.getTime() / 1e3)
                , expire = 21600 + Math.ceil(1800 * Math.random())
                , s = currentTime + expire;
            util.cookie.set("__notice", s, expire); //??什么鬼
        });
    }
});

window.UEDITOR_HOME_URL = "./resource/components/ueditor/";
$(function () {

    if (1 == $("[data-skin='black']").length) {
        resizeView();
    }

    if (3 == $(".menu-fixed, .left-menu, .right-content").length) {
        require(["slimscroll"], function () {
            $(".plugin-menu-sub").slimscroll({
                width: "210px",
                height: "100%",
                opacity: .4,
                color: "#aaa"
            })
        });
        var clientHeight = document.documentElement.clientHeight
            , $leftMenu = $(".left-menu")
            , top = $leftMenu.offset().top
            , position = $leftMenu.css("position")
            , footerHeight = $(".footer").length > 0 ? $(".footer").css("height") : 0;

        if ("default" == $(".skin-default").attr("data-skin")) {
            $(".left-menu, .skin-default .right-content").css("min-height", clientHeight - 174 - parseInt(footerHeight) + "px");
        } else if ("black" == $(".skin-black").attr("data-skin")) {
            $(".left-menu, .skin-default .right-content").css("min-height", clientHeight - 51 + "px");
        }

        $(window).scroll(function () {
            var footerTop = $(".footer").length > 0 && !$(".footer").is(":hidden") ? $(".footer").offset().top : 0
                , documentScrollTop = $(document).scrollTop()
                , o = footerTop ? footerTop - documentScrollTop : clientHeight;

            if ("default" == $(".skin-default").attr("data-skin")) {

                documentScrollTop > top ? $leftMenu.css({
                    position: "fixed",
                    height: "auto",
                    top: 0,
                    bottom: clientHeight > o ? clientHeight - o + 31 + "px" : "0"
                }) : $leftMenu.css({
                    position: position,
                    height: clientHeight
                });
                documentScrollTop > top ? $(".right-content").css({
                    marginLeft: $leftMenu.css("width")
                }) : $(".right-content").css({
                    marginLeft: 0,
                    minHeight: $leftMenu.height()
                });
            } else if ("black" == $(".skin-black").attr("data-skin")) {
                documentScrollTop > top ? $leftMenu.css({
                    position: "fixed",
                    top: 0,
                    bottom: 0
                }) : $leftMenu.css({
                    position: position,
                    top: documentScrollTop
                });
                documentScrollTop > top ? $(".right-content").css({
                    marginLeft: $leftMenu.css("width")
                }) : $(".right-content").css({
                    marginLeft: 0,
                    minHeight: $leftMenu.height()
                });
            }
        })
    }

    if (1 == $("[data-skin='classical']").length) {
        var e = document.documentElement.clientHeight
            , i = $(".footer").length > 0 ? $(".footer").css("height") : 0;
        2 == $(".left-menu, .right-content").length && $(".right-content>.content").css("min-height", e - parseInt(i) - 71),
        $(".panel-cut").length > 0 && $(".panel-cut").css("min-height", e - parseInt(i) - 71)
    }
});

angular.module("we7app").directive("we7Colorpicker", [function () {
    return {
        templateUrl: "resource/js/app/templates/directive-colorpicker-colorpicker.html",
        scope: {
            colorValue: "=we7MyColor",
            colorDefault: "=we7MyDefaultColor",
            colorFormName: "=we7FormName"
        },
        link: function (e, t, a) {

            if (!$(t).data("data-colorpicker-init")) {
                util.colorpicker(t, function (a) {
                    $(t).parent().parent().find(":text").val(a.toHexString());
                    e.colorValue = a.toHexString();
                    e.$apply("colorValue");
                    e.$watch("colorValue", function (a) {
                        $(t).spectrum("get") != a && ($(t).spectrum("set", a || e.colorDefault),
                            $(t).parent().parent().find(":text").val(a || e.colorDefault),
                            $(t).parent().parent().find(".input-group-addon").css("background-color", a || e.colorDefault))
                    });
                });
                $(t).find(".colorclean").click(function () {
                    return $(t).find(":text").val("rgba(0,0,0,0)"),
                        $(t).find(".input-group-addon").css("background-color", "rgba(0,0,0,0)"),
                        e.colorValue = e.colorDefault = "rgba(0,0,0,0)",
                        $(t).spectrum("set", e.colorDefault),
                        e.$apply("colorValue"),
                        false
                });
                $(t).data("data-colorpicker-init", true);
            }
        }
    }
}
]);

angular.module("we7app").directive("we7DatePicker", ["$http", "$parse", function () {
    return {
        transclude: true,
        template: "<span ng-transclude></span>",
        scope: {
            dateValue: "=we7DateValue"
        },
        link: function (e, t, a) {
            var n = {
                lang: "zh",
                step: "1",
                format: "Y-m-d H:i:s",
                closeOnDateSelect: true,
                onSelectDate: function (t, a) {
                    e.dateValue = t.dateFormat("Y-m-d H:i:s"),
                        e.$apply("dateValue")
                },
                onSelectTime: function (t, a) {
                    e.dateValue = t.dateFormat("Y-m-d H:i:s"),
                        e.$apply("dateValue")
                }
            };
            $(t).datetimepicker(n)
        }
    }
}
]);

angular.module("we7app").directive("we7DateRangePicker", ["$compile", "$parse", "$filter", function (e, t, a) {
    return {
        restrict: "A",
        require: "?ngModel",
        link: function (e, n, i, s) {
            require(["daterangepicker"], function () {
                function o(e) {
                    return moment.isMoment(e) ? e.toDate() : e
                }

                function r(e) {
                    return moment.isMoment(e) ? e : moment(e)
                }

                function l(e) {
                    return a("date")(o(e), u.format.replace(/Y/g, "y").replace(/D/g, "d"))
                }

                function c(e) {
                    return [l(e.startDate), l(e.endDate)].join(u.separator)
                }

                var u = {};
                u.format = i.format || "YYYY-MM-DD",
                    u.separator = i.separator || " - ",
                    u.minDate = i.minDate && moment(i.minDate),
                    u.maxDate = i.maxDate && moment(i.maxDate),
                    u.dateLimit = i.limit && moment.duration.apply(this, i.limit.split(" ").map(function (e, t) {
                        return 0 === t && parseInt(e, 10) || e
                    })),
                    u.ranges = i.ranges && t(i.ranges)(e),
                    u.locale = i.locale && t(i.locale)(e),
                    u.opens = i.opens || t(i.opens)(e),
                i.enabletimepicker && (u.timePicker = true,
                    angular.extend(u, t(i.enabletimepicker)(e))),
                    s.$render = function () {
                        s.$viewValue && s.$viewValue.startDate && n.val(c(s.$viewValue))
                    }
                    ,
                    e.$watch(function () {
                        return i.ngModel
                    }, function (t, a) {
                        e[t] && e[t].startDate ? a === t && (n.data("daterangepicker").startDate = r(e[t].startDate),
                            n.data("daterangepicker").endDate = r(e[t].endDate),
                            n.data("daterangepicker").updateView(),
                            n.data("daterangepicker").updateCalendars(),
                            n.data("daterangepicker").updateInputText()) : s.$setViewValue({
                            startDate: moment().startOf("day"),
                            endDate: moment().startOf("day")
                        })
                    }),
                    n.daterangepicker(u, function (t, a, n) {
                        var i = s.$viewValue;
                        angular.equals(t, i.startDate) && angular.equals(a, i.endDate) || e.$apply(function () {
                            s.$setViewValue({
                                startDate: moment.isMoment(i.startDate) ? t : t.toDate(),
                                endDate: moment.isMoment(i.endDate) ? a : a.toDate()
                            }),
                                s.$render()
                        })
                    })
            })
        }
    }
}
]);

angular.module("we7app").directive("we7Editor", function () {
    var e = {
        scope: {
            value: "=?we7MyValue",
            params: "=?we7MyParams"
        },
        template: '<textarea id="" rows="10" style="height:600px;width:100%"></textarea>',
        link: function (t, a, n) {
            if (!a.data("editor")) {
                a.find("textarea").attr("id", "editor" + (new Date).getTime());
                var i = {
                    autoClearinitialContent: false,
                    toolbars: [["fullscreen", "source", "preview", "|", "bold", "italic", "underline", "strikethrough", "forecolor", "backcolor", "|", "justifyleft", "justifycenter", "justifyright", "|", "insertorderedlist", "insertunorderedlist", "blockquote", "emotion", "link", "removeformat", "|", "rowspacingtop", "rowspacingbottom", "lineheight", "indent", "paragraph", "fontfamily", "fontsize", "|", "inserttable", "deletetable", "insertparagraphbeforetable", "insertrow", "deleterow", "insertcol", "deletecol", "mergecells", "mergeright", "mergedown", "splittocells", "splittorows", "splittocols", "|", "anchor", "map", "print", "drafts"]],
                    elementPathEnabled: false,
                    initialFrameHeight: 200,
                    focus: false,
                    maximumWords: 9999999999999,
                    autoFloatEnabled: false
                };
                e = UE.getEditor(a.find("textarea").attr("id"), i),
                    a.data("editor", e),
                    e.addListener("contentChange", function () {
                        t.value = e.getContent(),
                        t.value && (t.params = t.value.replace(/\&quot;/g, "#quot;")),
                        t.$root.$$phase || t.$apply("value")
                    }),
                    e.addListener("ready", function () {
                        !t.value && t.params && (t.value = t.params.replace(/\#quot;/g, "&quot;")),
                        t.value && e && e.getContent() != t.value && e.setContent(t.value),
                            t.$watch("value", function (t) {
                                e && e.getContent() != t && e.setContent(t || "")
                            })
                    })
            }
        }
    };
    return e
});

angular.module("we7app").directive("we7Iconer", ["$templateCache", function (e) {
    e.get("directive-iconer-nav-pills-inline.html"),
        e.get("directive-iconer-tab-content-inline.html");
    return {
        scope: {
            image: "=we7MyImage",
            icon: "=we7MyIcon",
            iconcolor: "=we7MyIconColor"
        },
        transclude: true,
        templateUrl: "resource/js/app/templates/directive-iconer-iconer.html",
        link: function (e, t, a) {
            e.selectIcon = function () {
                require(["fileUploader"], function (t) {
                    t.show(function (t) {
                        e.icon = {},
                            e.icon.name = t.name,
                            e.icon.color = t.color,
                            e.$apply("image"),
                            e.$apply("icon")
                    }, {
                        direct: true,
                        multiple: false,
                        type: "icon",
                        otherVal: e.iconcolor
                    })
                })
            }
                ,
                e.removeIcon = function () {
                    e.image = "",
                        e.icon = {}
                }
        }
    }
}
]);

angular.module("we7app").directive("we7InitialSearchbar", function () {
    return {
        templateUrl: "resource/js/app/templates/directive-initialsearchbar-searchbar.html",
        scope: {
            doSearch: "&we7SearchCallback"
        },
        link: function (e, t, a) {
            e.alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"],
                e.searchResult = function (t) {
                    e.activeLetter = t,
                        e.doSearch({
                            letter: t
                        })
                }
        }
    }
});

// 新建素材里面的选择链接
angular.module("we7app").directive("we7Linker", ["$http", "$templateCache", function ($http, $templateCache) {
    var a = $templateCache.get("directive-linker-cms-header-inline.html")
        , n = $templateCache.get("directive-linker-cms-content-inline.html")
        , s = $templateCache.get("directive-linker-cms-article-item-inline.html")
        , o = $templateCache.get("directive-linker-cms-cate-item-inline.html")
        , r = $templateCache.get("directive-linker-news-content-inline.html")
        , l = $templateCache.get("directive-linker-news-item-inline.html")
        , c = $templateCache.get("directive-linker-page-content-inline.html")
        , u = $templateCache.get("directive-linker-page-item-inline.html")
        , d = $templateCache.get("directive-linker-map-content-inline.html")
        , p = $templateCache.get("directive-linker-tel-content-inline.html");

    return {
        templateUrl: "resource/js/app/templates/directive-linker-linker.html",
        scope: {
            url: "=we7MyUrl",
            title: "=we7MyTitle"
        },
        link: function (t, m, f) {
            m.find(".input-group-btn").mouseover(function (e) {
                clearTimeout(t.timer),
                    m.find(".dropdown-menu").show()
            }).mouseout(function () {
                t.timer = setTimeout(function () {
                    m.find(".dropdown-menu").hide()
                }, 500)
            });

            m.find(".dropdown-menu").mouseover(function () {
                clearTimeout(t.timer),
                    m.find(".dropdown-menu").show()
            }).mouseout(function () {
                t.timer = setTimeout(function () {
                    m.find(".dropdown-menu").hide()
                }, 500)
            });

            t.addLink = function (e, a) {
                t.url = e,
                a && (t.title = a)
            };

            t.searchSystemLinker = function () {
                t.modalobj = util.dialog("请选择链接", ["./index.php?c=utility&a=link&callback=selectLinkComplete"], "", {
                    containerName: "link-search-system"
                }),
                    t.modalobj.modal({
                        keyboard: false
                    }),
                    t.modalobj.find(".modal-body").css({
                        height: "680px",
                        "overflow-y": "auto"
                    }),
                    t.modalobj.modal("show"),
                    window.selectLinkComplete = function (e, a) {
                        t.addLink(e, a),
                            t.$apply("url", "title"),
                            t.modalobj.modal("hide")
                    }
            };

            t.searchCmsLinker = function (r) {
                var l = {};
                l.header = a,
                    l.content = n,
                    l.footer = "",
                    l.articleitem = s,
                    l.cateitem = o,
                    $("#link-search-cms")[0] ? t.modalobj = $("#link-search-cms").data("modal") : (t.modalobj = util.dialog(l.header, l.content, l.footer, {
                        containerName: "link-search-cms"
                    }),
                        t.modalobj.find(".modal-body").css({
                            height: "680px",
                            "overflow-y": "auto"
                        }),
                        t.modalobj.modal("show"),
                        t.modalobj.on("hidden.bs.modal", function () {
                            t.modalobj.remove()
                        }),
                        $("#link-search-cms").data("modal", t.modalobj)),
                    r = r || 1;
                var c = $("#articlelist .article-list-input").val();
                $http.get("./index.php?c=utility&a=link&do=articlelist&page=" + r + "&keyword=" + c).success(function (e, a, n, s) {
                    var o = {
                        items: []
                    };
                    if (e.message = e.message.message,
                        e.message.list) {
                        for (i in e.message.list)
                            o.items.push({
                                title: e.message.list[i].title,
                                id: e.message.list[i].id,
                                uniacid: e.message.list[i].uniacid,
                                attachment: e.message.list[i].thumb_url,
                                createtime: e.message.list[i].createtime
                            });
                        t.modalobj.find("#articlelist tbody").html(_.template(l.articleitem)(o)),
                            t.modalobj.find("#pager").html(e.message.pager),
                            t.modalobj.find("#pager .pagination li[class!='active'] a").click(function () {
                                return t.searchCmsLinker($(this).attr("page")),
                                    false
                            }),
                            t.modalobj.find("#articlelist .input-group-btn").click(function () {
                                return t.searchCmsLinker(),
                                    false
                            }),
                            t.modalobj.find(".js-btn-select").click(function () {
                                t.addLink($(this).attr("js-url"), $(this).attr("js-title")),
                                    t.$apply("url", "title"),
                                    t.modalobj.modal("hide")
                            })
                    }
                });
                var u = $("#category .category-list-input").val();
                $http.get("./index.php?c=utility&a=link&do=catelist&page=" + r + "&keyword=" + u).success(function (e, a, n, s) {
                    var o = {
                        items: []
                    };
                    if (e.message = e.message.message,
                        e.message) {
                        for (i in e.message)
                            o.items.push({
                                id: e.message[i].id,
                                uniacid: e.message[i].uniacid,
                                name: e.message[i].name,
                                children: e.message[i].children
                            });
                        t.modalobj.find("#category tbody").html(_.template(l.cateitem)(o)),
                            t.modalobj.find("#category .input-group-btn").click(function () {
                                return t.searchCmsLinker(),
                                    false
                            }),
                            t.modalobj.find(".js-btn-select").click(function () {
                                t.addLink($(this).attr("js-url"), $(this).attr("js-title")),
                                    t.$apply("url", "title"),
                                    t.modalobj.modal("hide")
                            })
                    }
                })
            };

            t.searchNewsLinker = function (a) {
                var n = {};
                n.content = r,
                    n.footer = "",
                    n.newsitem = l,
                    $("#link-search-news")[0] ? t.modalobj = $("#link-search-news").data("modal") : (t.modalobj = util.dialog(n.header, n.content, n.footer, {
                        containerName: "link-search-news"
                    }),
                        t.modalobj.find(".modal-body").css({
                            height: "680px",
                            "overflow-y": "auto"
                        }),
                        t.modalobj.modal("show"),
                        t.modalobj.on("hidden.bs.modal", function () {
                            t.modalobj.remove()
                        }),
                        $("#link-search-news").data("modal", t.modalobj)),
                    a = a || 1;
                var s = $("#newslist .news-list-input").val();
                $http.get("./index.php?c=utility&a=link&do=newslist&page=" + a + "&keyword=" + s).success(function (e, a, s, o) {
                    var r = {
                        items: []
                    };
                    if (e.message = e.message.message,
                        e.message.list) {
                        for (i in e.message.list)
                            r.items.push({
                                title: e.message.list[i].title,
                                id: e.message.list[i].id,
                                uniacid: window.sysinfo.uniacid,
                                attachment: e.message.list[i].thumb_url,
                                createtime: e.message.list[i].createtime,
                                url: e.message.list[i].url
                            });
                        t.modalobj.find("#newslist tbody").html(_.template(n.newsitem)(r)),
                            t.modalobj.find("#pager").html(e.message.pager),
                            t.modalobj.find("#pager .pagination li[class!='active'] a").click(function () {
                                return t.searchNewsLinker($(this).attr("page")),
                                    false
                            }),
                            t.modalobj.find("#newslist .input-group-btn").click(function () {
                                return t.searchNewsLinker(),
                                    false
                            }),
                            t.modalobj.find(".js-btn-select").click(function () {
                                t.addLink($(this).attr("js-url"), $(this).attr("js-title")),
                                    t.$apply("url", "title"),
                                    t.modalobj.modal("hide")
                            })
                    }
                })
            };

            t.searchPageLinker = function (a) {
                var n = {};
                n.content = c,
                    n.footer = "",
                    n.pageItem = u,
                    $("#link-search-page")[0] ? t.modalobj = $("#link-search-page").data("modal") : (t.modalobj = util.dialog(n.header, n.content, n.footer, {
                        containerName: "link-search-page"
                    }),
                        t.modalobj.find(".modal-body").css({
                            height: "680px",
                            "overflow-y": "auto"
                        }),
                        t.modalobj.modal("show"),
                        t.modalobj.on("hidden.bs.modal", function () {
                            t.modalobj.remove()
                        }),
                        $("#link-search-page").data("modal", t.modalobj)),
                    a = a || 1;
                var s = $("#pageList .page-list-input").val();
                $http.get("./index.php?c=utility&a=link&do=pagelist&&page=" + a + "&keyword=" + s).success(function (e, a, s, o) {
                    var r = {
                        items: []
                    };
                    if (e.message = e.message.message,
                        e.message.list) {
                        for (i in e.message.list)
                            r.items.push({
                                title: e.message.list[i].title,
                                id: e.message.list[i].id,
                                uniacid: window.sysinfo.uniacid,
                                createtime: e.message.list[i].createtime
                            });
                        t.modalobj.find("#pageList tbody").html(_.template(n.pageItem)(r)),
                            t.modalobj.find("#pager").html(e.message.pager),
                            t.modalobj.find("#pager .pagination li[class!='active'] a").click(function () {
                                return t.searchPageLinker($(this).attr("page")),
                                    false
                            }),
                            t.modalobj.find("#pageList .input-group-btn").click(function () {
                                return t.searchPageLinker(),
                                    false
                            }),
                            t.modalobj.find(".js-btn-select").click(function () {
                                t.addLink($(this).attr("js-url"), $(this).attr("js-title")),
                                    t.$apply("url", "title"),
                                    t.modalobj.modal("hide")
                            })
                    }
                })
            };

            t.searchMapPosLinker = function () {
                var e = {};
                e.content = d,
                    t.modalobj = util.dialog(e.content),
                    t.modalobj.modal("show"),
                    t.modalobj.find("#getnav").click(function () {
                        t.addLink("https://api.map.baidu.com/marker?location=" + $("#navlat").val() + "," + $("#navlng").val() + "&title=" + $("#navtitle").val() + "&name=" + $("#navtitle").val() + "&output=html&src=we7", $("#navtitle").val()),
                            t.$apply("url", "title"),
                            t.modalobj.modal("hide")
                    })
            };

            t.addTelLinker = function () {
                var e = {};
                e.content = p,
                    t.modalobj = util.dialog("一键拨号", e.content),
                    t.modalobj.modal("show"),
                    t.modalobj.find(".btn-primary").click(function () {
                        t.addLink("tel:" + t.modalobj.find("#telphone").val(), ""),
                            t.$apply("url", "title"),
                            t.modalobj.modal("hide")
                    })
            }
        }
    }
}
]);

angular.module("we7app").directive("we7ResourcePicker", function () {
    return {
        scope: {
            type: "@type",
            isWechat: "@isWechat",
            multiple: "@mutiple",
            showType: "@showType",
            needType: "@needType",
            global: "@global",
            dest_dir: "@dest_dir",
            onSelect: "&onSelect"
        },
        link: function (e, t, a) {
            $(t).unbind("click").on("click", function () {
                e.show()
            }),
                $(window).unbind("resource_selected").on("resource_selected", function (t, a) {
                    e.finish(a.type, a.items)
                })
        },
        controller: function (e) {
            var t = function (e) {
                return "<div " + ("we7-resource-" + e + "-dialog") + ' class="uploader-modal modal fade ' + e + '" id="material-Modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel2"></div>'
            };
            e.show = function () {
                var a = {
                    type: e.type,
                    isWechat: "true" === e.isWechat,
                    multiple: "true" === e.multiple,
                    needType: e.needType <= 3 ? e.needType : 3,
                    global: "true" === e.global,
                    dest_dir: e.dest_dir
                };
                $("#material-Modal").remove();
                var n = t(e.type);
                $(document.body).prepend(n);
                var i = $("#material-Modal");
                i.modal("show");

                angular.module("we7resource").value("config", a);

                angular.bootstrap(i, ["we7resource"])
            }
                ,
                e.finish = function (t, a) {
                    e.onSelect({
                        type: t,
                        items: a
                    }),
                        $("#material-Modal").modal("hide")
                }
        }
    }
});

angular.module("we7app").run(["$templateCache", function (templateCache) {
    "use strict";

    templateCache.put("directive-iconer-nav-pills-inline.html", '<li id="li_icon" role="presentation"><a href="#icon" aria-controls="icon" role="tab" data-toggle="tab">图标</a></li>');

    templateCache.put("directive-iconer-tab-content-inline.html", '<div id="icon" class="tab-pane icon form-horizontal" role="tabpanel"><div class="form-group" style="border-bottom:1px solid #e5e5e5; padding:0 0 15px 0; margin:10px 0 0 0"><label class="col-xs-3 control-label">图标颜色</label><div class="col-xs-9"><input type="color" value="" class="form-control" id="iconcolor" onchange="$(this).parents(\'#icon\').attr(\'color\', this.value);$(this).parents(\'#icon\').find(\'i\').css(\'color\', this.value)"></div></div></div>');

    templateCache.put("directive-linker-cms-article-item-inline.html", '<%_.each(items, function(item) {%><tr><td><a href="#" data-cover-attachment-url="<%=item.attachment%>" title="<%=item.title%>"><%=item.title%></a></td><td><%=item.createtime%></td><td class="text-right"><button class="btn btn-default js-btn-select" js-url="./index.php?c=site&a=site&do=detail&id=<%=item.id%>&i=<%=item.uniacid%>" js-title="<%=item.title%>">选取</button></td></tr><%});%>');

    templateCache.put("directive-linker-cms-cate-item-inline.html", '<%_.each(items, function(item) {%><tr><td colspan="2"><a href="#"><%=item.name%></a></td><td class="text-right"><a class="btn btn-default js-btn-select" js-url="./index.php?c=site&a=site&cid=<%=item.id%>&i=<%=item.uniacid%>" js-title="<%=item.name%>">选取</a></td></tr><%_.each(item.children, function(child) {%><tr><td colspan="2" style="padding-left:50px;height:30px;line-height:30px;background-image:url(\\\'./resource/images/bg_repno.gif\\\'); background-repeat:no-repeat; background-position: -245px -540px"><a href="#"><%=child.name%></a></td><td class="text-right"><a class="btn btn-default js-btn-select" js-url="./index.php?c=site&a=site&cid=<%=child.id%>&i=<%=child.uniacid%>" js-title="<%=child.name%>">选取</a></td></tr><%});%><%});%>');

    templateCache.put("directive-linker-cms-content-inline.html", '<div class="tab-content"><div id="articlelist" class="tab-pane active" role="tabpanel"><table class="table table-hover"><thead class="navbar-inner"><tr><th style="width:40%">标题</th><th style="width:30%">创建时间</th><th style="width:30%; text-align:right"><div class="input-group input-group-sm"><input type="text" class="form-control article-list-input"> <span class="input-group-btn"><button class="btn btn-default" type="button"><i class="fa fa-search"></i></button></span></div></th></tr></thead><tbody></tbody></table><div id="pager" style="text-align:center"></div></div><div id="category" class="tab-pane" role="tabpanel"><table class="table table-hover"><thead class="navbar-inner"><tr><th style="width:40%">标题</th><th style="width:30%">创建时间</th><th style="width:30%; text-align:right"><div class="input-group input-group-sm"><input type="text" class="form-control category-list-input"> <span class="input-group-btn"><button class="btn btn-default" type="button"><i class="fa fa-search"></i></button></span></div></th></tr></thead><tbody></tbody></table><div id="pager" style="text-align:center"></div></div></div>');

    templateCache.put("directive-linker-cms-header-inline.html", '<ul role="tablist" class="nav nav-pills" style="font-size:14px; margin-top:-20px"><li role="presentation" class="active" id="li_goodslist"><a data-toggle="tab" role="tab" aria-controls="articlelist" href="#articlelist">文章</a></li><li role="presentation" class="" id="li_category"><a data-toggle="tab" role="tab" aria-controls="category" href="#category">分类</a></li></ul>');

    templateCache.put("directive-linker-map-content-inline.html", '<div class="model-dialog"><div class="model-content"><div class="modal-header"><h4 class="modal-title" id="myModalLabel">一键导航</h4></div><div class="modal-body"><form action="" class="form-horizontal" role="form" enctype="multipart/form-data"><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 col-lg-2 control-label"><span style="font-size:16px">标题</span></label><div class="col-sm-9 col-xs-12"><input type="text" id="navtitle" class="form-control" name="navtitle" value=""></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 col-lg-2 control-label"><span style="font-size:16px">地理位置</span></label><div class="col-sm-9 col-xs-12"><div class="row row-fix"><div class="col-xs-4 col-sm-4"><input type="text" name="navtitle[lng]" id="navlng" value="" placeholder="地理经度" class="form-control"></div><div class="col-xs-4 col-sm-4"><input type="text" name="navtitle[lat]" id="navlat" value="" placeholder="地理纬度" class="form-control"></div><div class="col-xs-4 col-sm-4"><button onclick="showCoordinate(this)" class="btn btn-default" type="button">选择坐标</button></div></div><script type="text/javascript">function showCoordinate(elm) {\r\n\t\t\t\t\tvar val = {};\r\n\t\t\t\t\tval.lng = parseFloat($(elm).parent().prev().prev().find(":text").val());\r\n\t\t\t\t\tval.lat = parseFloat($(elm).parent().prev().find(":text").val());\r\n\t\t\t\t\tutil.qqmap(val, function(r){\r\n\t\t\t\t\t\t$(elm).parent().prev().prev().find(":text").val(r.lng);\r\n\t\t\t\t\t\t$(elm).parent().prev().find(":text").val(r.lat);\r\n\t\t\t\t\t});\r\n\t\t\t\t};<\/script></div></div></form></div></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal" id="getnav">确定</button></div></div>');

    templateCache.put("directive-linker-news-content-inline.html", '<div id="newslist" class="tab-pane active" role="tabpanel"><table class="table table-hover"><thead class="navbar-inner"><tr><th style="width:40%">标题</th><th style="width:30%">创建时间</th><th style="width:30%; text-align:right"><div class="input-group input-group-sm"><input type="text" class="form-control news-list-input"> <span class="input-group-btn"><button class="btn btn-default" type="button"><i class="fa fa-search"></i></button></span></div></th></tr></thead><tbody></tbody></table><div id="pager" style="text-align:center"></div></div>');

    templateCache.put("directive-linker-news-item-inline.html", '<%_.each(items, function(item) {%><tr><td><a href="#" data-cover-attachment-url="<%=item.attachment%>" title="<%=item.title%>"><%=item.title%></a></td><td><%=item.createtime%></td><td class="text-right"><button class="btn btn-default js-btn-select" js-url="<%=item.url%>" js-title="<%=item.title%>">选取</button></td></tr><%});%>');

    templateCache.put("directive-linker-page-content-inline.html", '<div id="pageList" class="tab-pane active" role="tabpanel"><table class="table table-hover"><thead class="navbar-inner"><tr><th style="width:40%">名称</th><th style="width:30%">创建间</th><th style="width:30%; text-align:right"><div class="input-group input-group-sm"><input type="text" class="form-control page-list-input"> <span class="input-group-btn"><button class="btn btn-default" type="button"><i class="fa fa-search"></i></button></span></div></th></tr></thead><tbody></tbody></table><div id="pager" style="text-align:center"></div></div>');

    templateCache.put("directive-linker-page-item-inline.html", '<%_.each(items, function(item) {%><tr><td><a href="#" title="<%=item.title%>"><%=item.title%></a></td><td><%=item.createtime%></td><td class="text-right"><button class="btn btn-default js-btn-select" js-url="./index.php?i=<%=item.uniacid%>&c=home&a=page&id=<%=item.id%>" js-title="<%=item.title%>">选取</button></td></tr><%});%>');

    templateCache.put("directive-linker-tel-content-inline.html", '<div class="" id="telphone-modal"><div class="form-group list-group-item clearfix"><label style="margin-top:5px" class="col-xs-12 col-sm-2 col-md-2 control-label">号码</label><div class="col-sm-6"><input type="text" value="" id="telphone" name="telphone" class="form-control"></div><div class="col-sm-4"><a class="btn btn-primary" href="javascript:;">确定</a></div></div></div>');

    templateCache.put("fans-tag-selector.html", '<div style="text-align:left" class="modal fade {{modalClass}}" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4 class="modal-title" id="myModalLabel">勾选粉丝标签（每个粉丝最多3个标签）</h4></div><div class="modal-body row"><label class="checkbox-inline col-md-3" style="margin-left:0px" ng-repeat="tag in tags" ng-click="checkMaxNumb($event)"><input type="checkbox" value="{{tag.id}}" ng-model="selectTags[tag.id]"> {{tag.name}}</label></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">取消</button> <button type="button" class="btn btn-primary" ng-click="tagSubmit($event)" data-dismiss="modal">确定</button></div></div></div></div>');

    templateCache.put("widget-musicform-musicform.html", '<div class="modal-body material-content clearfix"><div id="music" class="material-body we7-form"><form action="" method="post" class="form-horizontal"><div class="form-group"><label class="col-sm-2 control-label">音乐标题</label><div class="col-sm-10"><input type="text" class="form-control" placeholder="添加音乐消息的标题" ng-model="$ctrl.music.title"></div></div><div class="form-group"><label class="col-sm-2 control-label">选择音乐</label><div class="col-sm-10"><div class="input-group"><input type="text" class="form-control" readonly ng-model="$ctrl.music.url"> <span class="input-group-btn"><button class="btn btn-default" type="button" ng-click="$ctrl.selectVoice()">选择媒体文件</button></span></div><div class="help-block">选择上传的音频文件或直接输入URL地址，常用格式：mp3</div></div></div><div class="form-group"><label class="col-sm-2 control-label">高品质链接</label><div class="col-sm-10"><input type="text" class="form-control" ng-model="$ctrl.music.HQUrl"><div class="help-block">没有高品质音乐链接，请留空。高质量音乐链接，WIFI环境优先使用该链接播放音乐</div></div></div><div class="form-group"><label class="col-sm-2 control-label">描述</label><div class="col-sm-10"><input type="text" class="form-control" ng-model="$ctrl.music.description"><div class="help-block">描述内容将出现在音乐名称下方，建议控制在20个汉字以内最佳</div></div></div></form></div></div><div class="modal-footer"><button type="button" class="btn btn-primary" ng-click="$ctrl.ok()">确定</button> <button type="button" class="btn btn-default" data-dismiss="modal">取消</button></div>');

    templateCache.put("widget-voice-voice.html", '<div class="modal-body material-content clearfix"><div class="material-nav"><a href="javascript:;" ng-class="{true:\'active\',false:\'\'}[index==0]" ng-show="showWx()" ng-click="setIndex(0)">微信</a> <a href="javascript:;" ng-class="{true:\'active\',false:\'\'}[index == 1]" ng-show="showLocal()" ng-click="setIndex(1)">本地服务器</a></div><div class="material-head"><form action="" method="get" class="form-horizontal clearfix form-inline" role="form"><div class="pull-right btn-uploader" style="z-index: 10"><we7-uploader-btn upload-url="uploadurl" on-uploaded="uploaded()" on-upload-error="uploaderror(mes)" name="uploadname" accept="accept"></we7-uploader-btn></div></form></div><div id="voice" class="material-body voice-content"><div class="row"><div class="col-sm-3" ng-repeat="(key, value) in $ctrl.voices" ng-click="$ctrl.itemClick(value)"><div class="item" ng-class="{true:\'active\',false:\'\'}[value.selected]"><img src="/web/resource/images/icon-voice.png" alt="" class="icon"><div class="time">创建于：{{ $ctrl.timeToDate(value.createtime) | date:\'yyyy-MM-dd HH:mm\' }}</div><div class="name">{{$ctrl.getTitle(value)}}</div><div class="mask"><span class="wi wi-right"></span></div><div class="del" ng-click="delItem(value,$event)"><span class="wi wi-delete2"></span></div></div></div></div></div><div class="material-pager text-right" ng-bind-html="$ctrl.pager"></div></div><div class="modal-footer"><button type="button" class="btn btn-primary" ng-show="$ctrl.multiple">确定</button> <button type="button" class="btn btn-default" data-dismiss="modal">取消</button></div>');

    templateCache.put("widget-cardactivity-display.html", '<div ng-controller="CardActivityCtrl"><div class="nav-container" ng-if="module.params.discount_type != 0 && module.params.discount_style == 1"><div class="list-group"><div class="list-group-item"><a href="#">优惠说明 <span class="pull-right"><i class="fa fa-angle-right"></i></span></a></div></div></div><div class="app-richText" ng-if="module.params.discount_type != 0 && module.params.discount_style == 2" ng-style="{\'background-color\' : module.params.bgColor}"><div class="inner" ng-bind-html="module.params.content" ng-if="module.params.content"></div><div class="inner js-default-content" ng-if="!module.params.content"><p>点此编辑『富文本』内容 ——&gt;</p><p>你可以对文字进行 <strong>加粗</strong>、<em>斜体</em>、<span style="text-decoration: underline">下划线</span>、 <span style="text-decoration: line-through">删除线</span>、文字<span style="color: rgb(0, 176, 240)">颜色</span>、 <span style="background-color: rgb(255, 192, 0); color: rgb(255, 255, 255)">背景色</span>、 以及字号<span style="font-size: 20px">大</span><span style="font-size: 14px">小</span>等简单排版操作。</p><p>还可以在这里加入表格了</p><table class="table-bordered"><tbody><tr><td>中奖客户</td><td>发放奖品</td><td>备注</td></tr><tr><td>猪猪</td><td>内测码</td><td><em><span class="red">已经发放</span></em></td></tr><tr><td>大麦</td><td>积分</td><td><a href="#" target="_blank">领取地址</a></td></tr></tbody></table><p style="text-align: left"><span style="text-align: left">也可在这里插入图片、并对图片加上超级链接，方便用户点击。</span></p></div></div></div>');

    templateCache.put("widget-cardactivity-editor.html", '<div ng-controller="CardActivityCtrl"><div class="app-header-setting"><div class="arrow-left"></div><div class="app-header-setting-inner"><div class="panel panel-default"><ul class="nav nav-tabs" style="margin:10px 15px 0 15px"><li ng-class="{\'active\' : activeItem.id == \'cardBasic\'}"><a href="javascript:;" ng-click="editItem(\'cardBasic\');">基本设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardActivity\'}"><a href="javascript:;" ng-click="editItem(\'cardActivity\');">消费优惠设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardRecharge\'}"><a href="javascript:;" ng-click="editItem(\'cardRecharge\');">充值优惠设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardNums\'}"><a href="javascript:;" ng-click="editItem(\'cardNums\');">计次设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardTimes\'}"><a href="javascript:;" ng-click="editItem(\'cardTimes\');">计时设置</a></li></ul><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">付款返积分比率</label><div class="col-sm-9 col-xs-12"><div class="input-group"><span class="input-group-addon">每消费 1 元赠送</span> <input type="text" ng-model="activeItem.params.grant_rate" class="form-control"> <span class="input-group-addon">积分</span></div><div class="help-block">设置消费返积分的比率.如果开启了充值优惠设置,请到充值优惠设置中->设置消费是否返还积分的开关.</div><div class="help-block"><strong class="text-danger">例:兑换比率:1元返10积分,那用户每消费1元,将得到10积分.</strong></div></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">优惠设置</label><div class="col-sm-9 col-xs-12"><input type="radio" value="0" ng-model="activeItem.params.discount_type" id="discount_type1"><label class="radio-inline" for="discount_type1">不开启</label><input type="radio" value="1" ng-model="activeItem.params.discount_type" id="discount_type2"><label class="radio-inline" for="discount_type2">使用满减功能</label><input type="radio" value="2" ng-model="activeItem.params.discount_type" id="discount_type3"><label class="radio-inline" for="discount_type3">使用折扣功能</label></div></div><div class="form-group" ng-show="activeItem.params.discount_type == 1" ng-repeat="discount in activeItem.params.discounts"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div class="input-group"><span class="input-group-addon">{{discount.title}}</span> <span class="input-group-addon">满</span> <input type="hidden" ng-model="discount.groupid"> <input type="text" class="form-control" ng-model="discount.condition_1"> <span class="input-group-addon">元</span> <span class="input-group-addon">减</span> <input type="text" class="form-control" ng-model="discount.discount_1"> <span class="input-group-addon">元</span></div></div></div><div class="form-group" ng-show="activeItem.params.discount_type == 2" ng-repeat="discount in activeItem.params.discounts"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div class="input-group"><span class="input-group-addon">{{discount.title}}</span> <span class="input-group-addon">满</span> <input type="hidden" ng-model="discount.groupid"> <input type="text" class="form-control" ng-model="discount.condition_2"> <span class="input-group-addon">元</span> <span class="input-group-addon">打</span> <input type="text" class="form-control" ng-model="discount.discount_2"> <span class="input-group-addon">折</span></div></div></div><div class="form-group" ng-show="activeItem.params.discount_type != 0"><label class="col-xs-12 col-sm-3 col-md-2 control-label">样式设置</label><div class="col-sm-9 col-xs-12"><label class="radio-inline"><input type="radio" value="1" ng-model="activeItem.params.discount_style"> 系统默认</label><label class="radio-inline"><input type="radio" value="2" ng-model="activeItem.params.discount_style"> 自定义</label></div></div><div class="form-group" ng-show="activeItem.params.discount_type != 0 && activeItem.params.discount_style == 2"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div class="input-group"><div we7-colorpicker we7-my-color="activeItem.params.bgColor" we7-my-default-color="\'#ffffff\'"></div></div></div></div><div class="form-group" ng-show="activeItem.params.discount_type != 0 && activeItem.params.discount_style == 2"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div we7-editor we7-my-value="activeItem.params.content"></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-cardbasic-display.html", '<div ng-controller="CardBasicCtrl"><div class="title"><h1><span>会员卡</span></h1></div><div class="card"><div class="card-panel"><div class="card-logo"><img src="" ng-if="module.params.logo" ng-src="{{module.params.logo}}"></div><img class="card-bg" src="" ng-if="module.params.background.image" ng-src="{{module.params.background.image}}"><div class="card-grade" ng-if="module.params.card_level.type == \'1\'" ng-style="{\'color\' : module.params.color.rank}">默认会员组</div><div class="card-info"><div class="text-center" ng-if="module.params.card_label.type == \'1\'"><span class="card-rank" ng-style="{\'color\' : module.params.color.title}" ng-bind="module.params.card_label.title"></span></div><div class="card-no text-right" ng-if="!module.params.format_type" ng-style="{\'color\' : module.params.color.number}" ng-bind="module.params.format">会员卡号:<span>{$setting[\'format\']}</span></div></div></div></div><div class="btn-manage clearfix"><a href="javascript:;" class="recharge"><img ng-src="{{recharge_src}}" alt=""> <span>充值</span></a> <a href="javascript:;" class="payment"><img ng-src="{{scanpay_src}}" alt=""> <span>付款</span></a></div><div class="list-group"><div class="list-group-item"><a href="#">我的余额 <span class="pull-right">0.00 <i class="fa fa-angle-right"></i></span></a></div><div class="list-group-item"><a href="#">我的积分 <span class="pull-right">0.00 <i class="fa fa-angle-right"></i></span></a></div><div class="list-group-item"><a href="#">我的卡券 <span class="pull-right">0张 <i class="fa fa-angle-right"></i></span></a></div></div><div class="list-group"><div class="list-group-item"><a href="#">消息 <span class="pull-right"><i class="fa fa-angle-right"></i></span></a></div></div><div class="list-group"><div class="list-group-item"><a href="#">个人信息 <span class="pull-right"><i class="fa fa-angle-right"></i></span></a></div><div class="list-group-item"><a href="#">账单 <span class="pull-right"><i class="fa fa-angle-right"></i></span></a></div></div></div>');

    templateCache.put("widget-cardbasic-editor.html", '<div ng-controller="CardBasicCtrl"><div class="app-header-setting"><div class="arrow-left"></div><div class="app-header-setting-inner"><div class="panel panel-default"><ul class="nav nav-tabs" style="margin:10px 15px 0 15px"><li ng-class="{\'active\' : activeItem.id == \'cardBasic\'}"><a href="javascript:;" ng-click="editItem(\'cardBasic\');">基本设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardActivity\'}"><a href="javascript:;" ng-click="editItem(\'cardActivity\');">消费优惠设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardRecharge\'}"><a href="javascript:;" ng-click="editItem(\'cardRecharge\');">充值优惠设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardNums\'}"><a href="javascript:;" ng-click="editItem(\'cardNums\');">计次设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardTimes\'}"><a href="javascript:;" ng-click="editItem(\'cardTimes\');">计时设置</a></li></ul><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">名称<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><input type="text" class="form-control" ng-model="activeItem.params.title"></div></div><div class="form-group" ng-if="newcard"><label class="col-xs-12 col-sm-3 col-md-2 control-label">商户名称<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><input type="text" class="form-control" ng-model="activeItem.params.brand_name"></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">背景图案<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><label class="radio-inline"><input type="radio" value="system" ng-init="activeItem.params.background && activeItem.params.background == 0 ? activeItem.params.background = {} : \'\'" ng-model="activeItem.params.background.type"> 系统</label><label class="radio-inline"><input type="radio" value="user" ng-init="activeItem.params.background && activeItem.params.background == 0 ? activeItem.params.background = {} : \'\'" ng-model="activeItem.params.background.type"> 自定义</label></div></div><div class="form-group" ng-show="activeItem.params.background.type == \'user\'"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-xs-9"><span ng-click="addBgThumb()" class="form-control-static"><i class="fa fa-plus-circle green"></i>&nbsp;选择图片</span><div style="margin-top:.5em" class="input-group" ng-show="activeItem.params.background.image"><img width="150" class="img-responsive img-thumbnail" ng-src="{{activeItem.params.background.image}}"> <em ng-click="activeItem.params.background.image = \'\';" title="删除这张图片" style="position:absolute; top: 0px; right: -14px" class="close">×</em></div></div></div><div class="form-group" ng-show="activeItem.params.background.type == \'system\'"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><select class="form-control" ng-model="activeItem.params.background.image"><option value="{{tomedia(\'images/global/card/1.png\')}}">背景1</option><option value="{{tomedia(\'images/global/card/2.png\')}}">背景2</option><option value="{{tomedia(\'images/global/card/3.png\')}}">背景3</option><option value="{{tomedia(\'images/global/card/4.png\')}}">背景4</option><option value="{{tomedia(\'images/global/card/5.png\')}}">背景5</option><option value="{{tomedia(\'images/global/card/6.png\')}}">背景6</option><option value="{{tomedia(\'images/global/card/7.png\')}}">背景7</option><option value="{{tomedia(\'images/global/card/8.png\')}}">背景8</option><option value="{{tomedia(\'images/global/card/9.png\')}}">背景9</option><option value="{{tomedia(\'images/global/card/10.png\')}}">背景10</option><option value="{{tomedia(\'images/global/card/11.png\')}}">背景11</option><option value="{{tomedia(\'images/global/card/12.png\')}}">背景12</option><option value="{{tomedia(\'images/global/card/13.png\')}}">背景13</option><option value="{{tomedia(\'images/global/card/14.png\')}}">背景14</option><option value="{{tomedia(\'images/global/card/15.png\')}}">背景15</option><option value="{{tomedia(\'images/global/card/16.png\')}}">背景16</option><option value="{{tomedia(\'images/global/card/17.png\')}}">背景17</option><option value="{{tomedia(\'images/global/card/18.png\')}}">背景18</option><option value="{{tomedia(\'images/global/card/19.png\')}}">背景19</option><option value="{{tomedia(\'images/global/card/20.png\')}}">背景20</option><option value="{{tomedia(\'images/global/card/21.png\')}}">背景21</option><option value="{{tomedia(\'images/global/card/22.png\')}}">背景22</option><option value="{{tomedia(\'images/global/card/23.png\')}}">背景23</option></select></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">LOGO<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><span ng-click="addThumb(\'logo\')" class="form-control-static"><i class="fa fa-plus-circle green"></i>&nbsp;选择图片</span><div style="margin-top:.5em" class="input-group" ng-show="activeItem.params.logo"><img width="150" class="img-responsive img-thumbnail" ng-src="{{activeItem.params.logo}}"> <em ng-click="activeItem.params.logo = \'\';" title="删除这张图片" style="position:absolute; top: 0px; right: -14px" class="close">×</em></div></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">会员卡等级</label><div class="col-sm-9 col-xs-12"><input type="radio" value="1" ng-model="activeItem.params.card_level.type" id="card-label-type1"><label class="radio-inline" for="card-level-type1">开启</label><input type="radio" value="2" ng-model="activeItem.params.card_level.type" id="card-label-type2"><label class="radio-inline" for="card-level-type2">关闭</label></div></div><div class="form-group" ng-show="activeItem.params.card_level.type == \'1\'"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div we7-colorpicker we7-my-color="activeItem.params.color.rank" we7-my-default-color="\'#fff\'"></div></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">会员卡标题</label><div class="col-sm-9 col-xs-12"><input type="radio" value="1" ng-model="activeItem.params.card_label.type" id="card-label-type1"><label class="radio-inline" for="card-label-type1">开启</label><input type="radio" value="2" ng-model="activeItem.params.card_label.type" id="card-label-type2"><label class="radio-inline" for="card-label-type2">关闭</label></div></div><div class="form-group" ng-show="activeItem.params.card_label.type == \'1\'"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><input type="text" ng-model="activeItem.params.card_label.title" class="form-control"><br><span><span><div we7-colorpicker we7-my-color="activeItem.params.color.title" we7-my-default-color="\'Color010\'"></div></span></span></div></div><div class="form-group" style="display:none"><label class="col-xs-12 col-sm-3 col-md-2 control-label">卡号设置<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><label class="checkbox-inline"><input type="checkbox" value="1" ng-model="activeItem.params.format_type" ng-init="activeItem.params.format_type = (activeItem.params.format_type == 1 ? true : false)"> 使用手机号作为卡号</label><span class="help-block">强烈推荐使用手机号作为卡号</span><div ng-show="activeItem.params.format_type != 1"><input name="format" type="text" ng-model="activeItem.params.format" ng-init="activeItem.params.format = \'\'" class="form-control"> <span class="help-block"><p>"*"代表任意随机数字，<span style="color:red">"#"代表流水号码, "#"必须连续出现,且只能存在一组.</span></p><p>卡号规则样本："WQ2015*****#####***"</p>注意：规则位数过小会造成卡号生成重复概率增大，过多的重复卡密会造成卡密生成终止 卡密规则中不能带有中文及其他特殊符号 为了避免卡密重复，随机位数最好不要少于8位</span></div></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">使用说明<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><textarea class="form-control" rows="6" ng-model="activeItem.params.description"></textarea><span class="help-block">请填写会员卡的使用说明。</span></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">会员卡资料</label><div class="col-sm-10 col-xs-9"><div ng-repeat="field in activeItem.params.fields" style="margin-left:-15px"><div class="col-sm-10" style="margin-bottom:10px"><div class="input-group"><input type="text" class="form-control" ng-model="field.title" ng-disabled="(field.bind == \'realname\' || field.bind == \'mobile\') && $index <= \'1\'"> <span class="input-group-addon"><label><input type="checkbox" ng-init="field.require = field.require == 1 ? true : false;" ng-model="field.require" ng-disabled="(field.bind == \'realname\' || field.bind == \'mobile\') && $index <= \'1\'"> 必填</label></span><select ng-model="field.bind" class="form-control" ng-disabled="(field.bind == \'realname\' || field.bind == \'mobile\') && $index <= \'1\'"><option value="{{fansfield.bind}}" ng-repeat="fansfield in fansFields" ng-model="field.bind" ng-selected="{{field.bind == fansfield.bind}}">{{fansfield.title}}</option></select></div></div><div class="col-sm-1" style="margin-top:5px" ng-show="field.bind != \'mobile\' && field.bind != \'realname\'"><a href="javascript:;" ng-click="removeFields(field);"><i class="fa fa-times-circle"></i></a></div></div><span class="help-block col-sm-9" style="margin-left:-15px">系统会自动绑定:真实姓名和手机号码</span> <span class="help-block col-sm-9" style="margin-left:-15px"><a href="javascript:;" ng-click="addFields();"><i class="fa fa-plus-circle" title="添加填写项目"></i> 添加填写项目</a></span></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">领卡赠送<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><div class="input-group"><span class="input-group-addon" ng-init="activeItem.params.grant && activeItem.params.grant == 0 ? activeItem.params.grant = {} : \'\'">赠送</span> <input type="text" ng-model="activeItem.params.grant.credit1" class="form-control"> <span class="input-group-addon">积分</span></div></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div class="input-group"><span class="input-group-addon">赠送</span> <input type="text" ng-model="activeItem.params.grant.credit2" class="form-control"> <span class="input-group-addon">余额</span></div></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div class="input-group"><input type="hidden" ng-model="activeItem.params.grant.coupon"> <span class="input-group-addon">已选:<span ng-repeat="grant in activeItem.params.grant.coupon"><span ng-bind="grant.couponTitle">{{grant.couponTitle}}</span>|</span></span> <span class="input-group-btn"><button class="btn btn-primary" type="button" ng-click="selectCoupon();">搜索优惠券</button> <button class="btn btn-default" type="button" ng-click="clearCoupon();"><span><i class="fa fa-remove"></i></span></button></span></div><div class="help-block"><a href="{{url(\'activity/coupon\');}}" target="_blank">添加优惠券</a>.注意:赠送的优惠券应该各个会员组都可以领取.否则会造成赠送失败的问题</div></div></div><div class="form-group" ng-if="newcard"><label class="col-xs-12 col-sm-3 col-md-2 control-label">单次积分<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><input type="text" ng-model="activeItem.params.bonus_rule.max_increase_bonus" class="form-control"> <span class="help-block">单次最多可获取积分数量</span></div></div><div class="form-group" ng-if="newcard"><label class="col-xs-12 col-sm-3 col-md-2 control-label">抵扣条件<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><input type="text" ng-model="activeItem.params.bonus_rule.least_money_to_use_bonus" class="form-control"> <span class="help-block">满足xx元，可使用积分抵扣</span></div></div><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">抵现比率<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><div class="input-group"><input type="text" ng-model="activeItem.params.offset_rate" class="form-control"> <span class="input-group-addon">积分抵 1 元</span></div><br><div class="input-group"><span class="input-group-addon">单次最多可抵现</span> <input type="text" ng-model="activeItem.params.offset_max" class="form-control"> <span class="input-group-addon">元</span></div><div class="help-block"><strong class="text-danger">例:积分抵现金比率:100积分抵1元,那用户在消费的时候,将可用账户积分抵消部分金额.</strong></div><div class="help-block"><strong class="text-danger">目前仅支持后台交易抵现，暂不支持手机交易抵现.</strong></div></div></div><div class="form-group" ng-if="newcard"><label class="col-xs-12 col-sm-3 col-md-2 control-label">库存<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><input type="text" ng-model="activeItem.params.quantity" class="form-control"> <span class="help-block">卡券库存的数量，不支持填写0，上限为100000000.</span></div></div><div class="form-group" ng-if="newcard"><label class="col-xs-12 col-sm-3 col-md-2 control-label">使用提醒<span style="color:red">*</span></label><div class="radio"><div class="col-sm-9 col-xs-12"><input type="text" ng-model="activeItem.params.notice" class="form-control"> <span class="help-block">卡券使用提醒，字数上限为16个汉字。</span></div></div></div><div class="form-group" ng-if="newcard"><label class="col-xs-12 col-sm-3 col-md-2 control-label">刷卡支付<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><label class="radio-inline"><input type="radio" ng-model="activeItem.params.swipe_card" value="1">开启</label><label class="radio-inline"><input type="radio" ng-checked="activeItem.params.swipe_card == null || activeItem.params.swipe_card == 2" ng-model="activeItem.params.swipe_card" value="2">关闭</label><span class="help-block">选择是否开启刷卡支付</span></div></div><div class="form-group" ng-if="newcard"><label class="col-xs-12 col-sm-3 col-md-2 control-label">有效日期<span style="color:red">*</span></label><div class="col-sm-9 col-xs-12"><label class="radio-inline"><input type="radio" ng-model="activeItem.params.date_info.type" value="DATE_TYPE_PERMANENT"> 永久有效</label></div></div><div class="form-group" ng-if="newcard"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div class="radio"><div class="col-sm-3"><label class="radio-inline"><input type="radio" ng-model="activeItem.params.date_info.type" value="DATE_TYPE_FIX_TIME_RANGE"> 固定日期</label></div><div class="input-group" style="width: 240px"><input we7-date-picker we7-date-value="activeItem.params.date_info.begin_timestamp" ng-model="activeItem.params.date_info.begin_timestamp" class="form-control" style="width: 100px"><div class="input-group-addon">到</div><input we7-date-picker we7-date-value="activeItem.params.date_info.end_timestamp" ng-model="activeItem.params.date_info.end_timestamp" class="form-control" style="width: 100px"></div></div></div></div><div class="form-group" ng-if="newcard"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><label class="radio-inline"><input ng-model="activeItem.params.date_info.type" type="radio" value="DATE_TYPE_FIX_TERM">领取后</label><div class="input-group" style="width: 240px"><input ng-model="activeItem.params.date_info.fixed_begin_term" class="form-control" style="width: 100px"> <span class="input-group-addon">天生效，有效期</span> <input ng-model="activeItem.params.date_info.fixed_term" class="form-control" style="width: 100px"></div></div></div><div class="form-group" ng-if="newcard"><label class="col-xs-12 col-sm-3 col-md-2 control-label">可用门店</label><div class="col-sm-9 col-xs-12"><label class="radio-inline"><a href="#" class="location_list">选择适用门店</a></label></div></div></div></div></div></div></div>');

    templateCache.put("widget-cardnums-display.html", '<div ng-controller="CardNumsCtrl"><div class="nav-container" ng-if="module.params.nums_status == 1 && module.params.nums_style == 1"><ul><li class="collapse-link"><a class="nav-container-list" href="javascript:;"><span class="nav-title"><i class="fa fa-eye"></i>{{module.params.nums_text}}充值</span> <span class="pull-right"><i class="fa fa-angle-right"></i></span></a><div class="collapse-con padding-b-0"><a href="./index.php?i={$_W[\'uniacid\']}&j={$_W[\'acid\']}&c=entry&m=recharge&do=pay&type=card_nums&fee={{num.recharge}}" class="btn btn-warning btn-recharge" ng-repeat="num in module.params.nums">充{{num.recharge}}返{{num.num}}次</a></div></li></ul></div><div class="app-richText" ng-if="module.params.nums_status == 1 && module.params.nums_style == 2" ng-style="{\'background-color\' : module.params.bgColor}"><div class="inner" ng-bind-html="module.params.content" ng-if="module.params.content"></div><div class="inner js-default-content" ng-if="!module.params.content"><p>点此编辑『富文本』内容 ——&gt;</p><p>你可以对文字进行 <strong>加粗</strong>、<em>斜体</em>、<span style="text-decoration: underline">下划线</span>、 <span style="text-decoration: line-through">删除线</span>、文字<span style="color: rgb(0, 176, 240)">颜色</span>、 <span style="background-color: rgb(255, 192, 0); color: rgb(255, 255, 255)">背景色</span>、 以及字号<span style="font-size: 20px">大</span><span style="font-size: 14px">小</span>等简单排版操作。</p><p>还可以在这里加入表格了</p><table class="table-bordered"><tbody><tr><td>中奖客户</td><td>发放奖品</td><td>备注</td></tr><tr><td>猪猪</td><td>内测码</td><td><em><span class="red">已经发放</span></em></td></tr><tr><td>大麦</td><td>积分</td><td><a href="#" target="_blank">领取地址</a></td></tr></tbody></table><p style="text-align: left"><span style="text-align: left">也可在这里插入图片、并对图片加上超级链接，方便用户点击。</span></p></div></div></div>');

    templateCache.put("widget-cardnums-editor.html", '<div ng-controller="CardNumsCtrl"><div class="app-header-setting"><div class="arrow-left"></div><div class="app-header-setting-inner"><div class="panel panel-default"><ul class="nav nav-tabs" style="margin:10px 15px 0 15px"><li ng-class="{\'active\' : activeItem.id == \'cardBasic\'}"><a href="javascript:;" ng-click="editItem(\'cardBasic\');">基本设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardActivity\'}"><a href="javascript:;" ng-click="editItem(\'cardActivity\');">消费优惠设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardRecharge\'}"><a href="javascript:;" ng-click="editItem(\'cardRecharge\');">充值优惠设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardNums\'}"><a href="javascript:;" ng-click="editItem(\'cardNums\');">计次设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardTimes\'}"><a href="javascript:;" ng-click="editItem(\'cardTimes\');">计时设置</a></li></ul><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">计次设置</label><div class="col-sm-9 col-xs-12"><input type="radio" value="1" ng-model="activeItem.params.nums_status" id="nums_status1"><label class="radio-inline" for="nums_status1">开启</label><input type="radio" value="0" ng-model="activeItem.params.nums_status" id="nums_status2"><label class="radio-inline" for="nums_status2">关闭</label><span class="help-block">如你的业务有需要次数限制，可开启进行设置。</span></div></div><div class="form-group" ng-show="activeItem.params.nums_status == 1"><label class="col-xs-12 col-sm-3 col-md-2 control-label">计次设置</label><div class="col-sm-9 col-xs-12"><input type="text" class="form-control" ng-model="activeItem.params.nums_text"> <span class="help-block">例如：设置为”洗发剩余次数“,前台将显示为：”洗发剩余次数：n次“,请根据自己的业务需求设置。</span></div></div><div class="form-group" ng-show="activeItem.params.nums_status == 1"><label class="col-xs-12 col-sm-3 col-md-2 control-label">充值返次数</label><div class="col-sm-9 col-xs-12"><div ng-repeat="num in activeItem.params.nums" style="margin-left:-15px"><div class="col-sm-8" style="margin-bottom:10px"><div class="input-group"><span class="input-group-addon">充</span> <input type="text" class="form-control" ng-model="num.recharge"> <span class="input-group-addon">元</span> <input type="text" class="form-control" ng-model="num.num"> <span class="input-group-addon">次</span></div></div><div class="col-sm-1" style="margin-top:5px"><a href="javascript:;" ng-click="removeNums(num);"><i class="fa fa-times-circle"></i></a></div></div><div class="help-block col-sm-9" style="margin-left:-15px"><a href="javascript:;" ng-click="addNums();"><i class="fa fa-plus-circle" title="添加充值设置"></i> 添加充值设置</a></div></div></div><div class="form-group" ng-show="activeItem.params.nums_status != 0"><label class="col-xs-12 col-sm-3 col-md-2 control-label">样式设置</label><div class="col-sm-9 col-xs-12"><label class="radio-inline"><input type="radio" value="1" ng-model="activeItem.params.nums_style"> 系统默认</label><label class="radio-inline"><input type="radio" value="2" ng-model="activeItem.params.nums_style"> 自定义</label></div></div><div class="form-group" ng-show="activeItem.params.nums_status != 0 && activeItem.params.nums_style == 2"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div class="input-group"><div we7-colorpicker we7-my-color="activeItem.params.bgColor" we7-my-default-color="\'#ffffff\'"></div></div></div></div><div class="form-group" ng-show="activeItem.params.nums_status != 0 && activeItem.params.nums_style == 2"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div we7-editor we7-my-value="activeItem.params.content"></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-cardrecharge-display.html", '<div ng-controller="CardRechargeCtrl"><div class="nav-container" ng-if="module.params.recharge_type != 0 && module.params.recharge_style == 1"><div class="list-group"><div class="list-group-item"><a href="#">充值优惠说明 <span class="pull-right"><i class="fa fa-angle-right"></i></span></a></div></div></div><div class="app-richText" ng-if="module.params.discount_type != 0 && module.params.discount_style == 2" ng-style="{\'background-color\' : module.params.bgColor}"><div class="inner" ng-bind-html="module.params.content" ng-if="module.params.content"></div><div class="inner js-default-content" ng-if="!module.params.content"><p>点此编辑『富文本』内容 ——&gt;</p><p>你可以对文字进行 <strong>加粗</strong>、<em>斜体</em>、<span style="text-decoration: underline">下划线</span>、 <span style="text-decoration: line-through">删除线</span>、文字<span style="color: rgb(0, 176, 240)">颜色</span>、 <span style="background-color: rgb(255, 192, 0); color: rgb(255, 255, 255)">背景色</span>、 以及字号<span style="font-size: 20px">大</span><span style="font-size: 14px">小</span>等简单排版操作。</p><p>还可以在这里加入表格了</p><table class="table-bordered"><tbody><tr><td>中奖客户</td><td>发放奖品</td><td>备注</td></tr><tr><td>猪猪</td><td>内测码</td><td><em><span class="red">已经发放</span></em></td></tr><tr><td>大麦</td><td>积分</td><td><a href="#" target="_blank">领取地址</a></td></tr></tbody></table><p style="text-align: left"><span style="text-align: left">也可在这里插入图片、并对图片加上超级链接，方便用户点击。</span></p></div></div></div>');

    templateCache.put("widget-cardrecharge-editor.html", '<div ng-controller="CardRechargeCtrl"><div class="app-header-setting"><div class="arrow-left"></div><div class="app-header-setting-inner"><div class="panel panel-default"><ul class="nav nav-tabs" style="margin:10px 15px 0 15px"><li ng-class="{\'active\' : activeItem.id == \'cardBasic\'}"><a href="javascript:;" ng-click="editItem(\'cardBasic\');">基本设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardActivity\'}"><a href="javascript:;" ng-click="editItem(\'cardActivity\');">消费优惠设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardRecharge\'}"><a href="javascript:;" ng-click="editItem(\'cardRecharge\');">充值优惠设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardNums\'}"><a href="javascript:;" ng-click="editItem(\'cardNums\');">计次设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardTimes\'}"><a href="javascript:;" ng-click="editItem(\'cardTimes\');">计时设置</a></li></ul><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">优惠设置</label><div class="col-sm-9 col-xs-12"><input type="radio" value="1" ng-model="activeItem.params.recharge_type" id="recharge_type1"><label class="radio-inline" for="recharge_type1">开启</label><input type="radio" value="0" ng-model="activeItem.params.recharge_type" id="recharge_type2"><label class="radio-inline" for="recharge_type2">不开启</label></div></div><div class="form-group" ng-show="activeItem.params.recharge_type == 1" ng-repeat="recharge in activeItem.params.recharges"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div class="input-group"><span class="input-group-addon">充</span> <input type="text" class="form-control" ng-model="recharge.condition"> <span class="input-group-addon">元</span> <span class="input-group-addon" ng-if="recharge.backtype == \'0\'">送</span> <span class="input-group-addon" ng-if="recharge.backtype == \'1\'">送</span> <input type="text" class="form-control" ng-model="recharge.back"><div class="input-group-btn"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="width:88px"><span ng-switch on="recharge.backtype"><span ng-switch-when="0">元</span> <span ng-switch-when="1">积分</span></span> <i class="fa fa-angle-down"></i></button><ul class="dropdown-menu dropdown-menu-right select-back"><li><a href="#" ng-click="recharge.backtype=\'0\';recharge.backunit=\'元\'">元</a></li><li><a href="#" ng-click="recharge.backtype=\'1\';recharge.backunit=\'积分\'">积分</a></li></ul></div></div></div><div class="col-sm-1" style="margin-top:5px"><a href="javascript:;" ng-click="removeRecharges(recharge);"><i class="fa fa-times-circle"></i></a></div></div><div class="form-group" ng-show="activeItem.params.recharge_type != 0"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="help-block col-sm-9 col-xs-12" style="margin-left:-15px"><a href="javascript:;" ng-click="addRecharges();"><i class="fa fa-plus-circle" title="添加充值设置"></i> 添加充值设置</a></div></div><div class="form-group" ng-show="activeItem.params.recharge_type == 1"><label class="col-xs-12 col-sm-3 col-md-2 control-label">消费返积分</label><div class="col-sm-9 col-xs-12"><label class="radio-inline"><input type="radio" value="1" ng-model="activeItem.params.grant_rate_switch"> 是</label><label class="radio-inline"><input type="radio" value="0" ng-model="activeItem.params.grant_rate_switch"> 否</label><div class="help-block"><strong class="text-danger">开启充值优惠设置后,用户是否继续享受消费返积分的优惠</strong></div></div></div><div class="form-group" ng-show="activeItem.params.discount_type != 0 && activeItem.params.discount_style == 2"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div class="input-group"><div we7-colorpicker we7-my-color="activeItem.params.bgColor" we7-my-default-color="\'#ffffff\'"></div></div></div></div><div class="form-group" ng-show="activeItem.params.discount_type != 0 && activeItem.params.discount_style == 2"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div we7-editor we7-my-value="activeItem.params.content"></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-cardtimes-display.html", '<div ng-controller="CardTimesCtrl"><div class="nav-container" ng-if="module.params.times_status == 1 && module.params.times_style == 1"><ul><li class="collapse-link"><a class="nav-container-list" href="javascript:;"><span class="nav-title"><i class="fa fa-eye"></i>{{module.params.times_text}}充值</span> <span class="pull-right"><i class="fa fa-angle-right"></i></span></a><div class="collapse-con padding-b-0"><a href="./index.php?i={$_W[\'uniacid\']}&j={$_W[\'acid\']}&c=entry&m=recharge&do=pay&type=card_times&fee={{time.recharge}}" class="btn btn-warning btn-recharge" ng-repeat="time in module.params.times">充{{time.recharge}}返{{time.time}}天</a></div></li></ul></div><div class="app-richText" ng-if="module.params.times_status == 1 && module.params.times_style == 2" ng-style="{\'background-color\' : module.params.bgColor}"><div class="inner" ng-bind-html="module.params.content" ng-if="module.params.content"></div><div class="inner js-default-content" ng-if="!module.params.content"><p>点此编辑『富文本』内容 ——&gt;</p><p>你可以对文字进行 <strong>加粗</strong>、<em>斜体</em>、<span style="text-decoration: underline">下划线</span>、 <span style="text-decoration: line-through">删除线</span>、文字<span style="color: rgb(0, 176, 240)">颜色</span>、 <span style="background-color: rgb(255, 192, 0); color: rgb(255, 255, 255)">背景色</span>、 以及字号<span style="font-size: 20px">大</span><span style="font-size: 14px">小</span>等简单排版操作。</p><p>还可以在这里加入表格了</p><table class="table-bordered"><tbody><tr><td>中奖客户</td><td>发放奖品</td><td>备注</td></tr><tr><td>猪猪</td><td>内测码</td><td><em><span class="red">已经发放</span></em></td></tr><tr><td>大麦</td><td>积分</td><td><a href="#" target="_blank">领取地址</a></td></tr></tbody></table><p style="text-align: left"><span style="text-align: left">也可在这里插入图片、并对图片加上超级链接，方便用户点击。</span></p></div></div></div>');

    templateCache.put("widget-cardtimes-editor.html", '<div ng-controller="CardTimesCtrl"><div class="app-header-setting"><div class="arrow-left"></div><div class="app-header-setting-inner"><div class="panel panel-default"><ul class="nav nav-tabs" style="margin:10px 15px 0 15px"><li ng-class="{\'active\' : activeItem.id == \'cardBasic\'}"><a href="javascript:;" ng-click="editItem(\'cardBasic\');">基本设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardActivity\'}"><a href="javascript:;" ng-click="editItem(\'cardActivity\');">消费优惠设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardRecharge\'}"><a href="javascript:;" ng-click="editItem(\'cardRecharge\');">充值优惠设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardNums\'}"><a href="javascript:;" ng-click="editItem(\'cardNums\');">计次设置</a></li><li ng-class="{\'active\' : activeItem.id == \'cardTimes\'}"><a href="javascript:;" ng-click="editItem(\'cardTimes\');">计时设置</a></li></ul><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-12 col-sm-3 col-md-2 control-label">计时设置</label><div class="col-sm-9 col-xs-12"><input type="radio" value="1" ng-model="activeItem.params.times_status" id="times_status1"><label class="radio-inline" for="times_status1">开启</label><input type="radio" value="0" ng-model="activeItem.params.times_status" id="times_status2"><label class="radio-inline" for="times_status2">关闭</label><span class="help-block">如你的业务有需要时长限制，可开启进行设置。</span></div></div><div class="form-group" ng-show="activeItem.params.times_status == 1"><label class="col-xs-12 col-sm-3 col-md-2 control-label">计时设置</label><div class="col-sm-9 col-xs-12"><input type="text" class="form-control" ng-model="activeItem.params.times_text"> <span class="help-block">例如：设置为”到期时间“,系统将根据用户的领卡时间,加上用户的可用时长，计算到期时间，前台将显示为：”到期时间：x年x月x日“,请根据自己的业务需求设置。</span></div></div><div class="form-group" ng-show="activeItem.params.times_status == 1"><label class="col-xs-12 col-sm-3 col-md-2 control-label">充值返时长</label><div class="col-sm-9 col-xs-12"><div ng-repeat="time in activeItem.params.times" style="margin-left:-15px"><div class="col-sm-8" style="margin-bottom:10px"><div class="input-group"><span class="input-group-addon">充</span> <input type="text" class="form-control" ng-model="time.recharge"> <span class="input-group-addon">元</span> <input type="text" class="form-control" ng-model="time.time"> <span class="input-group-addon">天</span></div></div><div class="col-sm-1" style="margin-top:5px"><a href="javascript:;" ng-click="removeTimes(time);"><i class="fa fa-times-circle"></i></a></div></div><div class="help-block col-sm-9" style="margin-left:-15px"><a href="javascript:;" ng-click="addTimes();"><i class="fa fa-plus-circle" title="添加充值设置"></i> 添加充值设置</a></div></div></div><div class="form-group" ng-show="activeItem.params.times_status != 0"><label class="col-xs-12 col-sm-3 col-md-2 control-label">样式设置</label><div class="col-sm-9 col-xs-12"><label class="radio-inline"><input type="radio" value="1" ng-model="activeItem.params.times_style"> 系统默认</label><label class="radio-inline"><input type="radio" value="2" ng-model="activeItem.params.times_style"> 自定义</label></div></div><div class="form-group" ng-show="activeItem.params.times_status != 0 && activeItem.params.times_style == 2"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div class="input-group"><div we7-colorpicker we7-my-color="activeItem.params.bgColor" we7-my-default-color="\'#ffffff\'"></div></div></div></div><div class="form-group" ng-show="activeItem.params.times_status != 0 && activeItem.params.times_style == 2"><label class="col-xs-12 col-sm-3 col-md-2 control-label"></label><div class="col-sm-9 col-xs-12"><div we7-editor we7-my-value="activeItem.params.content"></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-ucheader-display.html", '<div ng-controller="HeaderCtrl"><div class="title"><h1><span>{{module.params.title}}</span></h1></div><div class="head" style="background-repeat:no-repeat; background-position: center center" ng-style="{\'background-image\' : module.params.bgImage ? \'url(\' + module.params.bgImage + \')\' : \'url(\\\'./resource/images/app/head-bg.png\\\')\'}"><a class="ptool" href="{{url(\'mc/profile\')}}">设置</a><div class="logo-img"><img ng-src="{{logo_url}}" class="img-circle"></div><div class="banner-info"><div class="name">设置昵称</div><div class="tel">1884512367</div></div><div class="head-nav"><a class="head-nav-list" href="{{url(\'mc/bond/credits\')}}&credittype=credit1"><span class="fa fa-rmb"></span>余额: <span>4000.00</span></a> <a class="head-nav-list" href="{{url(\'mc/bond/credits\')}}&credittype=credit2"><span class="fa fa-database"></span>积分: <span>900.00</span></a></div></div></div>');

    templateCache.put("widget-ucheader-editor.html", '<div ng-controller="HeaderCtrl"><div class="app-header-setting"><div class="arrow-left"></div><div class="app-header-setting-inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-3 control-label"><span class="red">*</span> 页面名称</label><div class="col-xs-9"><input type="text" ng-model="activeItem.params.title" placeholder="微页面标题" class="form-control"></div></div><div class="form-group"><label class="control-label col-xs-3">背景图片</label><div class="col-xs-9"><span ng-click="addThumb(\'bgImage\')"><i class="fa fa-plus-circle green"></i>&nbsp;选择图片</span><div style="margin-top:.5em" class="input-group" ng-show="activeItem.params.bgImage"><img width="150" class="img-responsive img-thumbnail" ng-src="{{activeItem.params.bgImage}}"> <em ng-click="activeItem.params.bgImage = \'\';" title="删除这张图片" style="position:absolute; top: 0px; right: -14px" class="close">×</em></div></div></div><div class="form-group"><label class="col-xs-3 control-label">触发关键字</label><div class="col-xs-9"><input type="text" ng-model="activeItem.params.keyword" class="form-control"> <span class="help-block">用户触发关键字，系统回复此页面的图文链接</span></div></div><div class="form-group"><label class="control-label col-xs-3">封面</label><div class="col-xs-9"><span ng-click="addThumb(\'cover\')"><i class="fa fa-plus-circle green"></i>&nbsp;选择图片</span><div style="margin-top:.5em" class="input-group" ng-show="activeItem.params.cover"><img width="150" class="img-responsive img-thumbnail" ng-src="{{activeItem.params.cover}}"> <em ng-click="activeItem.params.cover = \'\';" title="删除这张图片" style="position:absolute; top: 0px; right: -14px" class="close">×</em></div><span class="help-block">用于用户触发关键字后，系统回复时的封面图片</span></div></div><div class="form-group"><label class="col-xs-3 control-label">页面描述</label><div class="col-xs-9"><input type="text" ng-model="activeItem.params.description" class="form-control"></div></div><div class="form-group"><label class="col-xs-3 control-label">联系方式</label><div class="col-xs-9"><input type="text" ng-model="activeItem.params.contact" class="form-control"> <span class="help-block">用于用户点击会员中心->设置->联系我们时拨打的电话</span></div></div><div class="shopNav-edit-header clearfix">个人中心扩展菜单</div><div class="shopNav-wx"><div class="card" ng-repeat="menu in activeMenus"><div class="btns"><a href="javascript:;" ng-click="removeMenu(menu)"><i class="fa fa-times"></i></a></div><div class="nav-region"><div class="first-nav"><div class="alert"><div class="form-group"><label class="control-label col-xs-3">标题</label><div class="col-xs-9"><input type="text" class="form-control" name="" value="" ng-model="menu.name"></div></div><div class="form-group"><label class="control-label col-xs-3">链接到</label><div class="col-xs-9"><input ng-if="menu.module_info" type="text" ng-model="menu.url" class="form-control" disabled><div ng-if="!menu.module_info" we7-linker we7-my-url="menu.url" we7-my-title="menu.name"></div></div></div><div class="form-group" ng-if="menu.module_info"><label class="control-label col-xs-3">是否显示</label><div class="col-xs-9"><label class="radio-inline"><input type="radio" value="1" ng-model="menu.status">显示</label><label class="radio-inline"><input type="radio" value="0" ng-model="menu.status">隐藏</label><span class="help-block"><strong class="text-danger">该菜单来源于{{menu.module_info.title}}模块,仅可设置标题和是否显示</strong></span></div></div></div></div></div></div><div class="add-shopNav text-center" ng-click="addMenu();">+添加一级导航</div></div></div></div></div></div></div>');

    templateCache.put("widget-adimg-display.html", '<div ng-controller="AdImgCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><link href="../app/resource/components/swiper/swiper.min.css" rel="stylesheet"><div style="{{module.transform}}" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-adImg" style="{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner"><div class="appstyle js-default-content" ng-if="module.params.items.length == 0"><img ng-show="module.params.listStyle == 1" src="./resource/images/app/adImg-lg.jpg" width="100%"> <img ng-show="module.params.listStyle == 2" src="./resource/images/app/adImg-separate.jpg" width="100%"></div><div class="swiper-container swiper-container-horizontal" ng-if="module.params.items.length != 0 && module.params.listStyle == 1"><div class="swiper-wrapper"><div class="swiper-slide" ng-class="{\'swiper-slide-active\' : $index == 0}" style="width: 100%" ng-repeat="item in module.params.items"><a href="{{item.url}}" style="display:block; width:100%; text-align:center"><img ng-src="{{item.imgurl}}" title="{{item.title}}" style="display:block; height:auto; max-width:100%;  margin:0 auto"></a></div></div><div class="swiper-pagination swiper-pagination-clickable"><span class="swiper-pagination-bullet" ng-class="{\'swiper-pagination-bullet-active\': $index == 0}" ng-repeat="item in module.params.items"></span></div><div class="swiper-button-next hidden"></div><div class="swiper-button-prev hidden"></div></div><div class="show-separate" ng-if="module.params.items.length != 0 && module.params.listStyle == 2"><div class="ad-list lg" ng-if="module.params.sizeType == 1"><div class="ad-list-item" ng-repeat="item in module.params.items"><a href="{{item.url}}"><h3 ng-bind="item.title">广告标题</h3><img ng-src="{{item.imgurl}}"></a></div></div><div class="ad-list clearfix sm" ng-if="module.params.sizeType == 2"><div class="ad-list-item col-xs-6 col-sm-6" ng-repeat="item in module.params.items"><a href="{{item.url}}"><h3 ng-bind="item.title">广告标题</h3><img ng-src="{{item.imgurl}}"></a></div></div></div></div></div><div we7-drag></div></div></div>');

    templateCache.put("widget-adimg-editor.html", '<div ng-controller="AdImgCtrl"><div class="app-adImg-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div class="form-group"><label class="control-label col-xs-3">显示方式</label><div class="col-xs-9"><input type="radio" class="carousel-style" ng-model="activeItem.params.listStyle" value="1" ng-click="activeItem.params.sizeType=1;changeInnerHeight()" name="ad-show-style" id="list-style1"><label class="radio-inline" for="list-style1">折叠轮播</label><input type="radio" class="separate-style" ng-model="activeItem.params.listStyle" value="2" name="ad-show-style" ng-click="changeInnerHeight()" id="list-style2"><label class="radio-inline" for="list-style2">分开显示</label></div></div><div class="form-group"><label class="control-label col-xs-3">显示大小</label><div class="col-xs-9"><input type="radio" class="size-lg-style" ng-model="activeItem.params.sizeType" value="1" name="ad-size" ng-click="changeInnerHeight()" id="size-type1"><label class="radio-inline" for="size-type1">大图</label><input type="radio" class="size-sm-style" ng-model="activeItem.params.sizeType" value="2" name="ad-size" ng-click="changeInnerHeight()" id="size-type2"><label class="radio-inline" for="size-type2" ng-show="activeItem.params.listStyle == 2">小图</label></div></div><div class="add-adImg-item card clearfix" ng-repeat="item in activeItem.params.items"><div class="btns"><a href="#" ng-click="addEmpty()"><i class="fa fa-plus"></i></a> <a href="#" ng-click="removeItem(item)"><i class="fa fa-times"></i></a></div><div class="col-xs-3 img"><h3 ng-click="changeItem(item)">重新上传</h3><img src="" ng-src="{{ item.imgurl }}" width="100%"></div><div class="col-xs-9"><div class="form-group"><label class="control-label col-xs-3">标题</label><div class="col-xs-9"><input class="form-control" name="title" ng-model="item.title" value="" type="text"></div></div><div class="form-group"><label class="control-label col-xs-3">链接</label><div class="col-xs-9 form-control-static"><div we7-linker we7-my-url="item.url" we7-my-title="item.title"></div></div></div></div></div><div class="add-adImg card" ng-click="addItem()"><a href="#"><i class="fa fa-plus-circle green"></i>添加一个广告</a></div></div></div></div></div></div>');

    templateCache.put("widget-audio-display.html", '<div ng-controller="AudioCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-audio" style="{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner"><div ng-if="module.params.style == \'1\'" id="audio-music-{{$index+0}}" data-reload="{{module.params.reload}}" class="wx audioLeft clearfix" data-src="{{module.params.audio.url}}" ng-class="{\'audioLeft\': module.params.align == \'left\', \'audioRight\': module.params.align == \'right\'}" style="width:100%;height:100%"><img ng-init="module.params.headimg = module.params.headimg ? module.params.headimg : \'./resource/images/app/shop.png!80x80.jpg\'" ng-src="{{module.params.headimg}}" alt="语音头像" class="audioLogo" width="40" height="40"> <span class="audioBar js-play"><img style="display:none" ng-if="module.params.align == \'left\'" src="./resource/images/app/player.gif" class="audioAnimation"> <img style="display:none" ng-if="module.params.align == \'right\'" src="./resource/images/app/green_player.gif" class="audioAnimation"> <i class="audioStatic"></i> <span style="display:none" class="audioLoading"><i class="fa fa-spinner fa-pulse"></i></span></span> <span class="audioBar js-pause" style="display:none"><img ng-if="module.params.align == \'left\'" src="./resource/images/app/player.gif" class="audioAnimation"> <img ng-if="module.params.align == \'right\'" src="./resource/images/app/green_player.gif" class="audioAnimation"> <i class="audioStatic"></i></span> <span class="audio-time"></span><div class="js-audio-wx" data-id="audio-music-{{$index+0}}"></div></div><div class="music music-play" id="audio-music-{{$index+0}}" data-src="{{module.params.audio.url}}" data-reload="{{module.params.reload}}" data-loop="{{module.params.isloop}}" ng-if="module.params.style == \'2\'"><span class="audioStatic js-play"><a href="javascript:;"><i class="fa fa-play-circle-o"></i></a></span> <span class="audioAnimation js-pause" style="display:none"><a href="javascript:;"><i class="fa fa-pause"></i></a></span> <span class="musicTitle" ng-if="module.params.title == \'\'">歌名儿</span> <span class="musicTitle" ng-if="module.params.title != \'\'">{{module.params.title}}</span> <span class="audioLoading" style="display:none"><i class="fa fa-spinner fa-pulse"></i></span> <span class="audio-time" style="display:none"><span class="audio-current-time">00:00</span>/<span class="audio-duration">00:00</span></span><div class="slider-bar"><div class="slider-fill"></div></div><div class="js-audio-music" data-id="audio-music-{{$index+0}}"></div></div></div></div><div we7-drag></div></div></div>');

    templateCache.put("widget-audio-editor.html", '<div ng-controller="AudioCtrl"><div class="app-audio-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-2 control-label">音频</label><div class="col-xs-10"><span class="input-group-btn"><button type="button" class="btn btn-default audio-player-play" style="display:none"><i class="fa fa-play"></i></button> <button ng-click="addAudioItem()" type="button" class="btn btn-default">选择媒体文件</button></span></div></div><div class="form-group"><label class="col-xs-2 control-label">样式</label><div class="col-xs-10"><div class=""><input id="wx-music-type" type="radio" name="wx-music" value="1" ng-model="activeItem.params.style" ng-click="changeInnerHeight()"><label class="radio-inline" for="wx-music-type">模仿微信对话样式</label><div class="form-group" ng-show="activeItem.params.style == \'1\'"><label class="control-label col-xs-3">头像:</label><div class="col-xs-3" style="padding-top:10px"><img ng-init="activeItem.params.headimg = activeItem.params.headimg ? activeItem.params.headimg : \'./resource/images/app/shop.png!80x80.jpg\'" ng-src="{{activeItem.params.headimg}}" alt="语音头像" width="62" height="62"></div><div class="help-block col-xs-6" style="padding-left:0;padding-top:10px"><a href="#" ng-click="addImgItem()">上传头像</a><br>建议尺寸80*80像素<br>如果不设置,默认将使用店铺logo</div></div><div class="form-group" ng-show="activeItem.params.style == \'1\'"><label class="control-label col-xs-3">气泡:</label><div class="col-xs-9"><input id="bubble-left" type="radio" name="bubble" value="left" ng-model="activeItem.params.align"><label class="radio-inline" for="bubble-left">居左</label><input id="bubble-right" type="radio" name="bubble" value="right" ng-model="activeItem.params.align"><label class="radio-inline" for="bubble-right">居右</label></div></div></div><div class=""><input id="simple-music-type" type="radio" name="wx-music" value="2" ng-model="activeItem.params.style" ng-click="changeInnerHeight()"><label class="radio-inline" for="simple-music-type">简易音乐播放器</label><div><div class="form-group" ng-show="activeItem.params.style == \'2\'"><label class="control-label col-xs-3">标题:</label><div class="col-xs-9"><input class="form-control" type="text" ng-model="activeItem.params.title"></div></div><div class="form-group" ng-show="activeItem.params.style == \'2\'"><label class="control-label col-xs-3">循环:</label><div class="col-xs-9"><label class="checkbox-inline"><input type="checkbox" ng-model="activeItem.params.isloop">开启循环播放</label></div></div></div></div></div></div><div class="form-group"><label class="col-xs-2 control-label">播放</label><div class="col-xs-10"><div><input id="play-type1" type="radio" name="play" ng-model="activeItem.params.reload" value="true"><label class="radio-inline" for="play-type1">暂停后再回复播放时,从头开始</label></div><div><input id="play-type2" type="radio" name="play" ng-model="activeItem.params.reload" value="false"><label class="radio-inline" for="play-type2">暂停后再回复播放时,从暂停位置开始</label></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-countdown-display.html", '<div ng-controller="CountDownCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-countDown" style="width:100%;height:100%;overflow:hidden;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="timer" data="{{module.params.deadtime}}"><span class="day" ng-bind="module.params.leftTimeText.day"></span> <small style="vertical-align:middle;margin:3px">天</small> <span class="hours" ng-bind="module.params.leftTimeText.hour"></span> <small style="vertical-align:middle;margin:3px">时</small> <span class="minutes" ng-bind="module.params.leftTimeText.min"></span> <small style="vertical-align:middle;margin:3px">分</small> <span class="seconds" ng-bind="module.params.leftTimeText.sec"></span> <small style="vertical-align:middle;margin:3px">秒</small></div><script type="text/javascript">$(document).ready(function(){\r\n\t\t\t\t\tsetInterval(function(){\r\n\t\t\t\t\t\tvar timer = $(\'.timer\');\r\n\t\t\t\t\t\tfor (var i = 0; i < timer.length; i++) {\r\n\t\t\t\t\t\t\tvar dead = $(timer.get(i)).attr(\'data\');\r\n\t\t\t\t\t\t\tvar deadtime = dead.replace(/-/g,\'/\');\r\n\t\t\t\t\t\t\tdeadtime = new Date(deadtime).getTime();\r\n\t\t\t\t\t\t\tvar nowtime = Date.parse(Date());\r\n\t\t\t\t\t\t\tvar diff = deadtime - nowtime > 0 ? deadtime - nowtime : 0;\r\n\t\t\t\t\t\t\tvar res = {};\r\n\t\t\t\t\t\t\tres.day = parseInt(diff / (24 * 60 * 60 * 1000));\r\n\t\t\t\t\t\t\tres.hour = parseInt(diff / (60 * 60 * 1000) % 24);\r\n\t\t\t\t\t\t\tres.min = parseInt(diff / (60 * 1000) % 60);\r\n\t\t\t\t\t\t\tres.sec = parseInt(diff / 1000 % 60);\r\n\t\t\t\t\t\t\t$(\'.timer[data="\'+dead+\'"] .day\').text(res.day);\r\n\t\t\t\t\t\t\t$(\'.timer[data="\'+dead+\'"] .hours\').text(res.hour);\r\n\t\t\t\t\t\t\t$(\'.timer[data="\'+dead+\'"] .minutes\').text(res.min);\r\n\t\t\t\t\t\t\t$(\'.timer[data="\'+dead+\'"] .seconds\').text(res.sec);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t});<\/script></div><div we7-drag we7-resize we7-rotate></div></div></div>');

    templateCache.put("widget-countdown-editor.html", '<div ng-controller="CountDownCtrl"><div class="app-countDown-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body"><div class="form-group"><label class="col-xs-3 control-label">倒计时截止时</label><div class="col-xs-6"><input type="text" class="form-control" ng-model="activeItem.params.deadtimeToMin" disabled></div><div class="col-xs-3 form-control-static"><span class="date"><a href="javascript:;" we7-date-picker we7-date-value="activeItem.params.deadtime">日期</a></span></div></div></div></div></div></div></div>');

    templateCache.put("widget-cube-display.html", '<div ng-controller="CubeCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-cube" style="{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner"><table><tr ng-repeat="row in module.params.layout" ng-init="rowindex=$index"><td ng-init="colindex=$index" ng-repeat="col in row" class="{{col.classname}} rows-{{col.rows}} cols-{{col.cols}}" ng-class="{\'empty\' : col.isempty, \'not-empty\' : !col.isempty}" rowspan="{{col.rows}}" colspan="{{col.cols}}"><div ng-if="!col.isempty && col.imgurl"><a href="{{col.url}}"><img ng-src="{{col.imgurl}}" width="{{col.cols * 60}}" height="{{col.rows * 60}}"></a></div></td></tr></table></div></div><div we7-drag></div></div></div>');

    templateCache.put("widget-cube-editor.html", '<div ng-controller="CubeCtrl"><div class="app-cube-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-3 control-label">布局</label><div class="col-xs-9"><table id="cube-editor"><tr ng-repeat="(x, row) in activeItem.params.layout"><td ng-repeat="(y, col) in row" class="{{col.classname}} rows-{{col.rows}} cols-{{col.cols}}" ng-click="col[\'isempty\'] ? showSelection(x, y) : changeItem(x, y)" ng-class="{\'empty\' : col.isempty, \'not-empty\' : !col.isempty}" rowspan="{{col.rows}}" colspan="{{col.cols}}" x="{{x}}" y="{{y}}"><div ng-if="col.isempty">+</div><div ng-if="!col.imgurl && !col.isempty">{{col.cols * 160}} * {{col.rows * 160}}</div><div ng-if="!col.isempty && col.imgurl"><img ng-src="{{col.imgurl}}" width="{{col.cols * 60}}" height="{{col.rows * 60}}"></div></td></tr></table><span class="help-block">点击"+",添加内容</span><img ng-src="{{col.imgurl}}" width="{{col.cols * 60}}" height="{{col.cols * 60}}"></div></div><div ng-show="activeItem.params.currentLayout.isempty == false" class="add-cube-item card clearfix"><div class="btns"><a href="#" ng-click="removeItem()"><i class="fa fa-times"></i></a></div><div class="form-group"><label class="control-label col-xs-3"><span class="red">*</span>选择图片</label><div class="col-xs-9"><div style="width:50px; height:50px; overflow:hidden; float:left; margin-right:10px"><img ng-src="{{activeItem.params.currentLayout.imgurl}}" id="thumb" width="100%"></div><span ng-click="addItem()"><i class="fa fa-plus-circle green"></i>&nbsp;添加图片</span> <span class="help-block">建议尺寸：{{activeItem.params.currentLayout.cols * 160}} * {{activeItem.params.currentLayout.rows * 160}} 像素</span></div></div><div class="form-group"><label class="control-label col-xs-3">链接</label><div class="col-xs-9 form-control-static"><div we7-linker we7-my-url="activeItem.params.currentLayout.url" we7-my-title="activeItem.params.currentLayout.title"></div></div></div></div></div></div></div></div><div id="modal-cube-layout" class="modal fade in" role="dialog" aria-hidden="false"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><h3>选择布局</h3></div><div class="modal-body text-center"><div class="layout-table"><ul class="layout-cols layout-rows-{{col.rows}} clearfix" ng-repeat="row in activeItem.params.selection"><li data-cols="{{col.cols}}" data-rows="{{col.rows}}" ng-click="selectLayout(activeItem.params.currentPos.row, activeItem.params.currentPos.col, col.rows, col.cols)" ng-repeat="col in row"></li></ul></div></div></div></div></div></div>');

    templateCache.put("widget-dial-display.html", '<div ng-controller="DialCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-dial" style="width:100%;height:100%;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div ng-repeat="item in module.params.items" ng-if="item.active" style="width:100%;height:100%"><div class="app-dialphone animated" ng-if="item.type==\'text\'" style="width:100%;height:100%"><a ng-href="tel:{{item.tel}}" class="element-link"><div class="element-box" ng-bind="item.title" ng-style="{\'line-height\' : module.params.baseStyle.lineHeight, \'color\' : item.color}"></div></a></div><div ng-if="item.type==\'img\'" style="width:100%;height:100%"><a ng-href="tel:{{item.tel}}" class="element-link" style="width:100%"><img ng-src="{{item.imgurl}}" style="width:100%;height:100%" alt=""></a></div></div></div><div we7-drag we7-resize we7-rotate></div></div></div>');

    templateCache.put("widget-dial-editor.html", '<div ng-controller="DialCtrl"><div class="app-dial-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body"><ul class="nav nav-pills nav-justified"><li ng-class="{active : item.active}" ng-repeat="item in activeItem.params.items"><a ng-href="#{{item.id}}" role="tab" data-toggle="tab" ng-click="changeItem(item);"><button ng-class="{\'btn\' : 1,\'btn-danger\' : item.editcolor==\'danger\', \'btn-warning\' : item.editcolor==\'warning\', \'btn-success\' : item.editcolor==\'success\', \'btn-default\' : item.editcolor==\'default\', \'btn-primary\' : item.editcolor==\'primary\'}"><span ng-if="item.type==\'img\'" class="fa fa-picture-o"></span> <span ng-if="item.id==\'1\'">一键拨号</span> <span ng-if="item.id==\'2\'">热线电话</span> <span ng-if="item.id==\'3\'">拨打电话</span> <span ng-if="item.id==\'4\'">销售专线</span> <span ng-if="item.id==\'5\'">自定义</span></button></a></li></ul><hr><div class="tab-content"><div class="tab-pane active" id="{{item.id}}" ng-repeat="item in activeItem.params.items" ng-if="item.active"><div class="form-group" ng-if="item.type==\'text\'"><label class="col-xs-3 control-label">按钮名称</label><div class="col-xs-9"><input type="text" class="form-control" ng-model="item.title"></div></div><div class="form-group" ng-if="item.type==\'img\'"><label class="col-xs-3 control-label">按钮图片</label><div class="col-xs-9"><div class="img-container"><img ng-src="{{item.imgurl}}" alt=""> <span class="change-img" ng-click="addImage(item);"><span ng-show="item.imgurl">更换</span><span ng-show="!item.imgurl">添加</span>图片</span></div></div></div><div class="form-group"><label class="col-xs-3 control-label">手机/电话</label><div class="col-xs-9"><input type="text" class="form-control" ng-model="item.tel" placeholder="010-8888888"></div></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-good-display.html", '<div ng-controller="GoodCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-good" style="width:100%;height:100%;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="element app-good-up" ng-if="module.params.layoutstyle==\'1\'"><div class="counter-container" ng-style="{\'width\': \'100%\', \'height\': \'100%\', \'line-height\' : module.params.baseStyle.lineHeight, \'overflow\' : \'hidden\'}"><i class="fa fa-thumbs-o-up"></i> <span class="counter-num">0</span></div></div><div class="element app-good-up" ng-if="module.params.layoutstyle==\'2\'"><div class="counter-container counter-vertical" style="width:100%; height:100%; line-height:normal;overflow:hidden"><i class="fa fa-thumbs-o-up"></i> <span class="counter-num">0</span></div></div><script type="text/javascript">$(document).ready(function() {\r\n\t\t\t\t\tvar patt = new RegExp(\'c=home&a=page\');\r\n\t\t\t\t\tif (patt.exec(window.location.href)) {\r\n' + "\t\t\t\t\t\t$.post(window.location.href, {'do' : 'getnum'}, function(data) {\r\n\t\t\t\t\t\t\tif (data.message.errno == 0) {\r\n\t\t\t\t\t\t\t\t$('.counter-num').text(data.message.message.goodnum);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 'json');\r\n\t\t\t\t\t\t$(\".app-good .element\").click(function() {\r\n\t\t\t\t\t\t\tvar id=GetQueryString(\"id\");\r\n\t\t\t\t\t\t\tif(id !=null && id.toString().length>=1 && localStorage.havegood != id){\r\n\t\t\t\t\t\t\t\t$.post(window.location.href, {'do': 'addnum'}, function(data) {\r\n\t\t\t\t\t\t\t\t\tif (data.message.errno == 0) {\r\n\t\t\t\t\t\t\t\t\t\tvar now = $('.counter-num').text();\r\n\t\t\t\t\t\t\t\t\t\tnow = parseInt(now)+1;\r\n\t\t\t\t\t\t\t\t\t\t$('.counter-num').text(now);\r\n\t\t\t\t\t\t\t\t\t\tlocalStorage.havegood = id;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, 'json');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tfunction GetQueryString(name){\r\n\t\t\t\t\t\t\tvar reg = new RegExp(\"(^|&)\"+ name +\"=([^&]*)(&|$)\");\r\n\t\t\t\t\t\t\tvar r = window.location.search.substr(1).match(reg);\r\n\t\t\t\t\t\t\tif(r!=null)return  unescape(r[2]); return null;\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t};\r\n\t\t\t\t});<\/script></div><div we7-drag we7-resize we7-rotate></div></div></div>");

    templateCache.put("widget-good-editor.html", '<div ng-controller="GoodCtrl"><div class="app-good-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body"><div class="form-group"><label class="col-xs-3 control-label">颜色</label><div class="col-xs-9"><div we7-colorpicker we7-my-color="activeItem.params.baseStyle.color" we7-my-default-color="activeItem.params.baseStyle.color"></div></div></div><div class="form-group"><label class="col-xs-3 control-label">布局</label><div class="col-xs-9"><div class="btn-group"><div ng-class="{\'btn\' : \'1\', \'active\' : activeItem.params.layoutactive==\'lr\',\'btn-default\' : activeItem.params.layoutstyle != \'1\',\'btn-primary\' : activeItem.params.layoutstyle==\'1\'}" ng-click="changeLayout(\'lr\')">左右</div><div ng-class="{\'btn\' : \'1\', \'active\' : activeItem.params.layoutactive==\'ud\',\'btn-default\' : activeItem.params.layoutstyle != \'2\',\'btn-primary\' : activeItem.params.layoutstyle==\'2\'}" ng-click="changeLayout(\'ud\')">上下</div></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-header-display.html", '<div ng-controller="HeaderCtrl" we7-nobar><div class="title js-default-content"><h1><span>{{module.params.title}}</span></h1></div></div>');

    templateCache.put("widget-header-editor.html", '<div ng-controller="HeaderCtrl" ng-if="activePageIndex == 0"><div class="app-header-setting"><div class="arrow-left"></div><div class="app-header-setting-inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-3 control-label"><span class="red">*</span> 页面名称</label><div class="col-xs-9"><input type="text" ng-model="activeItem.params.title" placeholder="微页面标题" class="form-control"></div></div><div class="form-group"><label class="col-xs-3 control-label">页面描述</label><div class="col-xs-9"><input type="text" ng-model="activeItem.params.description" placeholder="用户通过微信分享给朋友时,会自动显示页面描述" class="form-control"></div></div><div class="form-group"><label class="col-xs-3 control-label">触发关键字</label><div class="col-xs-9"><input type="text" ng-model="activeItem.params.keyword" class="form-control"> <span class="help-block">用户触发关键字，系统回复此页面的图文链接.不支持多关键字</span></div></div><div class="form-group"><label class="control-label col-xs-3"><span class="red">*</span>封面</label><div class="col-xs-9"><span ng-click="addThumb(\'thumb\')"><i class="fa fa-plus-circle green"></i>&nbsp;选择图片</span><div style="margin-top:.5em" class="input-group" ng-show="activeItem.params.thumb"><img width="150" class="img-responsive img-thumbnail" ng-src="{{activeItem.params.thumb}}"> <em ng-click="activeItem.params.thumb = \'\';" title="删除这张图片" style="position:absolute; top: 0px; right: -14px" class="close">×</em></div><span class="help-block">用于用户触发关键字后，系统回复时的封面图片</span></div></div><div class="form-group"><label class="control-label col-xs-3">快捷菜单</label><div class="col-xs-9" style="margin-top:7px"><input type="checkbox" class="from-control" ng-click="ifCheck()" ng-checked="activeItem.params.bottom_menu"> <span>是否在本专题页面中显示微站快捷菜单</span></div></div></div></div></div></div></div>');

    templateCache.put("widget-image-display.html", '<div ng-controller="ImageCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-image" style="width:100%;height:100%;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><img style="width:100%;height:100%" ng-src="{{module.params.items.imgurl}}" alt=""></div><div we7-drag we7-resize we7-rotate></div></div></div>');

    templateCache.put("widget-image-editor.html", '<div ng-controller="ImageCtrl"><div class="app-image-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body"><div class="add-image-item card clearfix" ng-show="activeItem.params.items.imgurl"><div class="col-xs-3 img"><h3 ng-click="changeItem(activeItem.params.items)">重新上传</h3><img ng-src="{{ activeItem.params.items.imgurl }}" width="100%"></div></div><div class="add-image-editor card" ng-click="addItem()" ng-hide="activeItem.params.items.imgurl"><a href="#"><i class="fa fa-plus-circle green"></i>添加一个图片</a></div></div></div></div></div></div>');

    templateCache.put("widget-line-display.html", '<div ng-controller="LineCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-line" style="width:100%;height:100%;overflow:hidden;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner"><hr style="border-top-color:{{module.params.baseStyle.color}}"></div></div><div we7-drag we7-resize we7-rotate></div></div></div>');

    templateCache.put("widget-line-editor.html", '<div ng-controller="LineCtrl"><div class="app-line-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body">辅助线（请于左侧拖动缩放调整）</div></div></div></div></div>');

    templateCache.put("widget-link-display.html", '<div ng-controller="LinkCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div class="container-link" style="{{module.transform}}" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-link js-default-content" ng-if="module.params.items.length == 0" style="{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner"><div class="list-group"><div class="list-group-item"><a class="clearfix" href="javascript:;"><span class="app-nav-title">点此编辑第1条『关联链接』<i class="pull-right fa fa-angle-right"></i></span></a></div><div class="list-group-item"><a class="clearfix" href="javascript:;"><span class="app-nav-title">点此编辑第2条『关联链接』<i class="pull-right fa fa-angle-right"></i></span></a></div><div class="list-group-item"><a class="clearfix" href="javascript:;"><span class="app-nav-title">点此编辑第n条『关联链接』<i class="pull-right fa fa-angle-right"></i></span></a></div></div></div></div><div ng-if="module.params.items.length != 0"><div class="app-link" style="{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.params.animate}}"><div class="inner"><div class="list-group"><div ng-repeat="item in module.params.items"><div ng-if="item.type == \'1\' && (item.selectCate.pid > 0 || item.selectCate.cid > 0)"><div class="list-group-item" ng-repeat="i in pageSize | limitTo:item.pageSize"><a class="clearfix" href="javascript:;"><span class="app-nav-title">第{{$index+1}}条 {{item.selectCate.name}} 的『关联链接』<i class="pull-right fa fa-angle-right"></i></span></a></div></div><div class="list-group-item" ng-if="item.type == \'2\'"><a class="clearfix" href="{{item.url}}"><span class="app-nav-title">{{item.title}} <i class="pull-right fa fa-angle-right"></i></span></a></div></div></div></div></div></div><div we7-drag></div></div></div>');

    templateCache.put("widget-link-editor.html", '<div ng-controller="LinkCtrl"><div class="app-textNav-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div class="card add-textNav-con" ng-repeat="item in activeItem.params.items"><div class="btns"><a href="javascript:" ng-click="addItem()"><i class="fa fa-plus"></i></a> <a href="javascript:" ng-click="removeItem(item)"><i class="fa fa-times"></i></a></div><div class="form-group"><label class="control-label col-xs-3"><span class="red">*</span> 数据来源</label><div class="col-xs-9"><input id="source-type1" type="radio" value="1" ng-model="item.type" name="link-type-{{$index+0}}" ng-click="changeInnerHeight()"><label class="radio-inline" for="source-type1">分类</label><input id="source-type2" type="radio" value="2" ng-model="item.type" name="link-type-{{$index+0}}" ng-click="changeInnerHeight()"><label class="radio-inline" for="source-type2">自定义</label></div></div><div class="form-group" ng-show="item.type == 2"><label class="control-label col-xs-3"><span class="red">*</span> 导航名称</label><div class="col-xs-9"><input type="text" class="form-control" name="" ng-class="{\'red\': item.title == \'\'}" ng-model="item.title"></div></div><div class="form-group" ng-show="item.type == 2"><label class="control-label col-xs-3"><span class="red">*</span> 链接到</label><div class="col-xs-9 form-control-static"><div we7-linker we7-my-url="item.url" we7-my-title="item.title"></div></div></div><div class="form-group" ng-show="item.type == 1"><label class="control-label col-xs-3"><span class="red">*</span>内容来源</label><div class="col-xs-9"><div class="input-group"><div class="form-control-static"><label ng-if="item.selectCate.id != 0" class="label label-success">{{item.selectCate.name}}</label><a href="javascript:;" ng-click="showSearchCateList(item)"><span ng-if="item.selectCate.id == 0">从分类中选择</span><span ng-if="item.selectCate.id != 0">修改</span></a></div></div></div></div><div class="form-group" ng-show="item.type == 1"><label class="control-label col-xs-3">文章属性</label><div class="col-xs-9"><input id="article-attr-type1" type="checkbox" ng-model="item.isnew" value="1" name="attribute"><label class="checkbox-inline" for="article-attr-type1">最新</label><input id="article-attr-type2" type="checkbox" ng-model="item.iscommend" value="1" name="attribute"><label class="checkbox-inline" for="article-attr-type2">推荐</label><input id="article-attr-type3" type="checkbox" ng-model="item.ishot" value="1" name="attribute"><label class="checkbox-inline" for="article-attr-type3">头条</label></div></div><div class="form-group" ng-show="item.type == 1"><label class="control-label col-xs-3">显示条数</label><div class="col-xs-9"><select class="form-control" ng-model="item.pageSize" ng-change="changePageSize(item)"><option value="1">1条</option><option value="2">2条</option><option value="3">3条</option><option value="4">4条</option><option value="5">5条</option><option value="10">10条</option><option value="15">15条</option><option value="20">20条</option><option value="30">30条</option></select></div></div></div><div class="add-textNav card"><a href="javascript:" ng-click="addItem()"><i class="fa fa-plus-circle green"></i> 添加一个导航</a></div></div></div></div></div><div id="modal-search-cate-link" class="modal fade in" role="dialog" aria-hidden="false"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button><h3>选择分类</h3></div><div class="modal-body"><table class="table table-hover"><thead class="navbar-inner"><tr><th style="width:60%">标题</th><th style="width:30%; text-align:right"><div class="input-group input-group-sm"><input type="text" class="form-control js-search-cate-keyword"> <span class="input-group-btn"><button ng-click="showSearchCateList(currentItem)" class="btn btn-default" type="button"><i class="fa fa-search"></i></button></span></div></th></tr></thead><tbody ng-repeat="pcate in searchCateList"><tr><td><a href="#">{{pcate.name}}</a></td><td class="text-right"><a class="btn btn-default btn-sm" ng-click="selectCateItem(pcate.id, 0, pcate.name)">选取</a></td></tr><tr ng-repeat="ccate in pcate.children track by $index"><td style="padding-left:50px;height:30px;line-height:30px;background-image:url(\'./resource/images/bg_repno.gif\'); background-repeat:no-repeat; background-position: -245px -540px"><a href="#">{{ccate.name}}</a></td><td class="text-right"><a class="btn btn-default btn-sm" ng-click="selectCateItem(0, ccate.id, ccate.name)">选取</a></td></tr></tbody></table></div></div></div></div></div>');

    templateCache.put("widget-navimg-display.html", '<div ng-controller="NavImgCtrl" style="{{module.positionStyle}}min-height:90px;transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-navImg" style="width:100%;height:100%;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner" style="height:100%"><ul class="clearfix" style="height:100%"><li ng-repeat="item in module.params.items" style="height:100%"><a href="{{item.url}}" style="height:100%;width:100%"><span class="nav-img" style="height:80%;width:100%" ng-if="item.imgurl"><img ng-src="{{item.imgurl}}" style="height:100%;width:95%"></span> <span class="title" title="{{item.title}}" style="height:20%;width:100%;line-height:100%">{{item.title}}</span></a></li></ul></div></div><div we7-drag we7-resize we7-rotate></div></div></div>');

    templateCache.put("widget-navimg-editor.html", '<div ng-controller="NavImgCtrl"><div class="app-nav-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div ng-repeat="item in activeItem.params.items"><div class="card nav-item clearfix"><div class="col-xs-3 img" ng-if="item.imgurl == \'\'"><span ng-click="changeItem(item)"><i class="fa fa-plus-circle green"></i>&nbsp;添加图片</span></div><div class="col-xs-3 img" ng-if="item.imgurl != \'\'"><h3 ng-click="changeItem(item)">重新上传</h3><img ng-src="{{ item.imgurl }}"></div><div class="col-xs-9"><div class="form-group"><label class="control-label col-xs-3">文字</label><div class="col-xs-9"><input name="title" ng-model="item.title" class="form-control" typel="text" placeholder="文字"></div></div><div class="form-group"><label class="control-label col-xs-3">链接</label><div class="col-xs-9 form-control-static"><div we7-linker we7-my-url="item.url" we7-my-title="item.title"></div></div></div></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-notice-display.html", '<div ng-controller="NoticeCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-notice" style="{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner"><div class="notice-box"><div class="scrollNotice"><span class="js-scroll-notice">公告: {{module.params.notice || \'请填写内容,如果过长,将会在手机上滚动显示!\'}}</span></div></div></div></div><div we7-drag></div></div></div>');

    templateCache.put("widget-notice-editor.html", '<div ng-controller="NoticeCtrl"><div class="app-notice-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div class="form-group" style="margin-bottom:0"><label class="col-xs-2 control-label">公告</label><div class="col-xs-10"><input type="text" ng-model="activeItem.params.notice" value="" class="form-control" placeholder="请填写内容,如果过长,将会在手机上滚动显示"></div></div></div></div></div></div></div>');

    templateCache.put("widget-onlytext-display.html", '<div ng-controller="OnlyTextCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-onlyText" style="width:100%;height:100%;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="element" ng-bind="module.params.title" style="overflow:hidden"></div></div><div we7-drag we7-resize we7-rotate></div></div></div>');

    templateCache.put("widget-onlytext-editor.html", "<div ng-controller=\"OnlyTextCtrl\"><div class=\"app-onlyText-edit\"><div class=\"arrow-left\"></div><div class=\"inner\"><div class=\"panel panel-default\"><div class=\"panel-body\"><div class=\"form-group\"><label class=\"control-label col-xs-3\">文字</label><div class=\"col-xs-6\"><input ng-model=\"activeItem.params.title\" class=\"form-control\"></div></div><div class=\"form-group\"><label class=\"col-xs-3 control-label\">位置</label><div class=\"col-xs-9\"><div class=\"btn-group\"><div ng-class=\"{'btn' : '1', 'btn-default' : '1', 'active' : activeItem.params.baseStyle.textAlign == 'left', 'btn-primary' : activeItem.params.baseStyle.textAlign == 'left'}\" ng-click=\"changeTextAlign('left')\">左</div><div ng-class=\"{'btn' : '1', 'btn-default' : '1', 'active' : activeItem.params.baseStyle.textAlign == 'center', 'btn-primary' : activeItem.params.baseStyle.textAlign == 'center'}\" ng-click=\"changeTextAlign('center')\">中</div><div ng-class=\"{'btn' : '1', 'btn-default' : '1', 'active' : activeItem.params.baseStyle.textAlign == 'right', 'btn-primary' : activeItem.params.baseStyle.textAlign == 'right'}\" ng-click=\"changeTextAlign('right')\">右</div></div></div></div></div></div></div></div></div>");

    templateCache.put("widget-purelink-display.html", '<div ng-controller="PureLinkCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-pureLink" style="width:100%;height:100%;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div ng-repeat="item in module.params.items" ng-if="item.active" style="width:100%;height:100%"><div class="app-pureLink-basic animated" ng-if="item.type==\'text\'" style="width:100%;height:100%"><a ng-href="{{item.url}}" class="element-link"><div class="element-box" ng-bind="item.title" ng-style="{\'line-height\' : module.params.baseStyle.lineHeight, \'color\' : item.color}"></div></a></div><div ng-if="item.type==\'img\'" style="width:100%;height:100%"><a ng-href="{{item.url}}" class="element-link"><img ng-src="{{item.imgurl}}" style="width:100%;height:100%" alt=""></a></div></div></div><div we7-drag we7-resize we7-rotate></div></div></div>');

    templateCache.put("widget-purelink-editor.html", '<div ng-controller="PureLinkCtrl"><div class="app-pureLink-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body"><ul class="nav nav-pills nav-justified"><li ng-class="{active : item.active}" ng-repeat="item in activeItem.params.items"><a ng-href="#{{item.id}}" role="tab" data-toggle="tab" ng-click="changeItem(item);"><button ng-class="{\'btn\' : 1,\'btn-danger\' : item.editcolor==\'danger\', \'btn-warning\' : item.editcolor==\'warning\', \'btn-success\' : item.editcolor==\'success\', \'btn-default\' : item.editcolor==\'default\', \'btn-primary\' : item.editcolor==\'primary\'}"><span ng-if="item.type==\'img\'" class="fa fa-picture-o"></span><span ng-if="item.id==\'1\'">点我购买</span><span ng-if="item.id==\'2\'">点开链接</span><span ng-if="item.id==\'3\'">马上购买</span><span ng-if="item.id==\'4\'">关注我们</span><span ng-if="item.id==\'5\'">自定义</span></button></a></li></ul><hr><div class="tab-content"><div class="tab-pane active" id="{{item.id}}" ng-repeat="item in activeItem.params.items" ng-show="item.active"><div class="form-group" ng-show="item.type==\'text\'"><label class="col-xs-3 control-label">按钮名称</label><div class="col-xs-9"><input type="text" class="form-control" ng-model="item.title"></div></div><div class="form-group" ng-show="item.type==\'img\'"><label class="col-xs-3 control-label">按钮图片</label><div class="col-xs-9"><div class="img-container"><img ng-src="{{item.imgurl}}" alt=""> <span class="change-img" ng-click="addImage(item);"><span ng-show="item.imgurl">更换</span><span ng-show="!item.imgurl">添加</span>图片</span></div></div></div><div class="form-group"><label class="col-xs-3 control-label">网站地址</label><div class="col-xs-6"><input type="text" ng-model="item.url" class="form-control" placeholder="http://example.com"></div><div class="col-xs-3 form-control-static"><a href="http://dwz.cn/" target="_blank">生成短链接</a></div></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-reward-display.html", "<div ng-controller=\"RewardCtrl\" style=\"{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)\" we7-context-menu><div style=\"{{module.transform}}width:100%;height:100%\" ng-class=\"{'alock' : module.params.baseStyle.lock}\"><div class=\"app-reward\" style=\"width:100%;height:100%;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}\"><div class=\"element\" ng-style=\"{'width': '100%', 'height': '100%', 'line-height' : module.params.baseStyle.lineHeight}\"><a style=\"width:100%;height:100%;display:block;color:inherit\" href=\"{php echo url('home/page', array('do' => 'reward', 'id' => $id))}\">打赏</a></div></div><div we7-drag we7-resize we7-rotate></div></div></div>");

    templateCache.put("widget-reward-editor.html", "<div ng-controller=\"RewardCtrl\"><div class=\"app-reward-edit\"><div class=\"arrow-left\"></div><div class=\"inner\"><div class=\"panel panel-default\"><div class=\"panel-body\"><div class=\"form-group\"><label class=\"col-xs-3 control-label\">文字颜色</label><div class=\"col-xs-9\" ng-my-colorpicker ng-my-color=\"activeItem.params.baseStyle.color\" ng-my-default-color=\"activeItem.params.baseStyle.color\"></div></div><div class=\"form-group\"><label class=\"col-xs-3 control-label\">字号</label><div class=\"col-xs-9\"><div class=\"btn-group\" data-toggle=\"buttons\"><div ng-class=\"{'btn' : '1', 'active' : activeItem.params.fontactive=='big','btn-default' : activeItem.params.fonttype != 'big','btn-primary' : activeItem.params.fonttype=='big'}\" ng-click=\"changeSize('big')\">大</div><div ng-class=\"{'btn' : '1', 'active' : activeItem.params.fontactive=='middle','btn-default' : activeItem.params.fonttype != 'middle','btn-primary' : activeItem.params.fonttype=='middle'}\" ng-click=\"changeSize('middle')\">中</div><div ng-class=\"{'btn' : '1', 'active' : activeItem.params.fontactive=='small','btn-default' : activeItem.params.fonttype != 'small','btn-primary' : activeItem.params.fonttype=='small'}\" ng-click=\"changeSize('small')\">小</div></div></div></div></div></div></div></div></div>");

    templateCache.put("widget-richtext-display.html", '<div ng-controller="RichTextCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-richText" style="width:100%;height:100%;word-break:break-all;overflow:hidden;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner" ng-style="{\'padding\' : module.params.isfull ? \'0\' : \'10px\'}" ng-bind-html="trustAsHtml(module.params.content, module.params.params)" ng-if="module.params.content || module.params.params"></div><div class="inner js-default-content" ng-if="!module.params.content && !module.params.params"><p>点此编辑『富文本』内容 ——&gt;</p><p>你可以对文字进行 <strong>加粗</strong>、<em>斜体</em>、<span style="text-decoration: underline">下划线</span>、 <span style="text-decoration: line-through">删除线</span>、文字<span style="color: rgb(0, 176, 240)">颜色</span>、 <span style="background-color: rgb(255, 192, 0); color: rgb(255, 255, 255)">背景色</span>、 以及字号<span style="font-size: 20px">大</span><span style="font-size: 14px">小</span>等简单排版操作。</p><p>还可以在这里加入表格了</p><table class="table-bordered"><tbody><tr><td>中奖客户</td><td>发放奖品</td><td>备注</td></tr><tr><td>猪猪</td><td>内测码</td><td><em><span class="red">已经发放</span></em></td></tr><tr><td>大麦</td><td>积分</td><td><a href="#" target="_blank">领取地址</a></td></tr></tbody></table><p style="text-align: left"><span style="text-align: left">也可在这里插入图片、并对图片加上超级链接，方便用户点击。</span></p></div></div><div we7-drag we7-resize we7-rotate></div></div></div>');

    templateCache.put("widget-richtext-editor.html", '<div ng-controller="RichTextCtrl"><div class="app-richText-edit"><div class="arrow-left"></div><div class="app-header-setting-new-inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-3 control-label">是否全屏</label><div class="col-xs-9"><label for="fullScreen" class="checkbox-inline"><input id="fullScreen" name="fullScreen" type="checkbox" ng-model="activeItem.params.isfull">全屏显示</label></div></div><div class="form-group"><div class="col-xs-12"><div we7-editor we7-my-value="activeItem.params.content" we7-my-params="activeItem.params.params"></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-shape-display.html", '<div ng-controller="ShapeCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-shape" style="width:100%;height:100%;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div style="width:100%;height:100%" class="element" we7-svger we7-svg="module.params.svgValue"></div></div><div we7-drag we7-resize we7-rotate></div></div></div>');

    templateCache.put("widget-shape-editor.html", '<div ng-controller="ShapeCtrl"><div class="app-shape-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body"><div class="shape-editor"><a href="javascript:;" ng-click="addItem()" ng-if="!activeItem.params.svgValue"><i class="fa fa-plus-circle green"></i> &nbsp;填充形状</a> <a href="javascript:;" ng-click="addItem()" ng-if="activeItem.params.svgValue"><i class="fa fa-plus-circle green"></i> &nbsp;修改形状</a></div><div id="shapeModal" class="modal fade" role="dialog" aria-labelledby="gridSystemModalLabel"><div class="modal-dialog modal-lg" role="document"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4 class="modal-title" id="gridSystemModalLabel">形状库<span class="action">矢量素材，可更换颜色，放大不失真</span></h4></div><div class="dialog-content bg_console sound-flex clearfix"><div class="cate-title"><ul class="nav tabs-left"><li><a href="javascript:;" data-toggle="tab">形状库</a></li></ul></div><div class="cate-list bg-rig"><div id="bg_contain"><div class="tab-pane tab-head"><div class="img_list"><div class="category_list clearfix"><ul class="category_list_container clearfix"><li class="category_item" ng-class="{\'active\' : sysCategory.active}" ng-repeat="sysCategory in sysCategoryList" ng-click="getSysCatAndList(sysCategory)" ng-bind="sysCategory.name"></li></ul></div><div class="cat_two_list"><ul ng-repeat="sysCategory in sysCategoryList" ng-if="sysCategory.active"><li class="cat_two_item" ng-class="{\'active\': sysTag.active}" ng-if="sysCategory.id == sysTag.parentid" ng-repeat="sysTag in sysImageTag" ng-click="getSysImgByTag(sysTag);" ng-bind="sysTag.name"></li></ul></div></div></div><div class="img_list"><div class="img_list_container photo_list"><ul class="img_box" style="height:348px"><li ng-if="img.parentid == activeItem.params.imgListActive" ng-repeat="img in currentImageList" style="width: 100px; height: 100px;cursor:pointer; position: relative; display: inline-block; background:50% 50% / contain no-repeat rgb(230, 235, 237)" ng-style="{backgroundImage: \'url(\' + img.imgurl + \')\'}" data-url="{{img.imgurl}}" ng-click="selectSvg($event,img)"></li></ul></div></div></div></div><div class="modal-footer bg-pagination"><div class="fl mr20" ng-show="page.numPages > 1"><ul class="pagination" style="float: left"><li><a href="" ng-click="selectPage(1)">首页</a></li><li><a href="" ng-click="selectPage(page.currentPage - 1)">‹</a></li><li ng-repeat="p in pages track by $index" ng-class="{active: p.active}"><a href="javascript:;" ng-click="selectPage(p.number)" ng-bind="p.number"></a></li><li><a href="" ng-click="selectPage(page.currentPage + 1)">›</a></li><li><a href="" ng-click="selectPage(page.numPages)">尾页</a></li></ul><div class="current_page"><span class="fl">到</span> <input type="text" ng-model="page.toPage" ng-keyup="$event.keyCode == 13 ? getImgByPage() : null"> <span class="fl">页</span> <a ng-click="getImgByPage()" class="go">确定</a></div></div><a class="modal-cancle" ng-click="cancel()">取消</a> <a class="btn btn-primary" ng-click="confirm();">确定</a></div></div></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-textnav-display.html", '<div ng-controller="TextNavCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-textNav" style="{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner"><div class="list-group mnav-box"><div class="list-group-item" ng-repeat="item in module.params.items" ng-style="{\'background-color\': module.params.baseStyle.backgroundColor}"><a class="clearfix" href="{{item.url}}"><span class="app-nav-title">{{item.title}}<i class="pull-right fa fa-angle-right"></i></span></a></div></div></div></div><div we7-drag></div></div></div>');

    templateCache.put("widget-textnav-editor.html", '<div ng-controller="TextNavCtrl"><div class="app-textNav-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div class="card add-textNav-con" ng-repeat="item in activeItem.params.items"><div class="btns"><a href="javascript:" ng-click="addItem()"><i class="fa fa-plus"></i></a> <a href="javascript:" ng-click="removeItem(item)"><i class="fa fa-times"></i></a></div><div class="form-group"><label class="control-label col-xs-3"><span class="red">*</span> 导航名称</label><div class="col-xs-9"><input type="text" class="form-control" name="" ng-class="{\'red\': item.title == \'\'}" ng-model="item.title" value=""></div></div><div class="form-group"><label class="control-label col-xs-3"><span class="red">*</span> 链接到</label><div class="col-xs-9 form-control-static"><div we7-linker we7-my-url="item.url" we7-my-title="item.title"></div></div></div></div><div class="add-textNav card"><a href="javascript:" ng-click="addItem()"><i class="fa fa-plus-circle green"></i> 添加一个文本导航</a></div></div></div></div></div></div>');

    templateCache.put("widget-title-display.html", '<div ng-controller="TitleCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-title" style="{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner" style="height:96px"><div ng-if="module.params.template == 1" class="title-detail tradition" style="text-align: {{module.params.tradition.align}}"><h2 class="title-con">{{ module.params.title || "点击编辑『标题』"}}<span ng-if="module.params.tradition.nav.enable == 1" class="title-link">- <a href="{{module.params.tradition.nav.url}}" ng-bind="module.params.tradition.nav.title">文本导航</a></span></h2><p class="sub-title" ng-bind="module.params.tradition.subtitle">副标题</p></div><div ng-if="module.params.template == 2" class="title-detail text-left wx"><h2 class="title-con">{{ module.params.title || "点击编辑『标题』"}}</h2><p class="sub-title"><span class="date" ng-bind="module.params.news.date">2015-03-12</span>&nbsp;&nbsp;<span class="author" ng-bind="module.params.news.author">zhangsan</span>&nbsp;&nbsp;<span><a href="{{module.params.news.url}}" ng-bind="module.params.news.title">微擎团队</a></span></p></div></div></div><div we7-drag></div></div></div>');

    templateCache.put("widget-title-editor.html", '<div ng-controller="TitleCtrl"><div class="app-title-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body form-horizontal"><div class="form-group"><label class="col-xs-3 control-label"><span class="red">*</span> 标题名</label><div class="col-xs-9"><input type="text" class="form-control" name="" ng-model="activeItem.params.title" value=""></div></div><div class="form-group"><label class="control-label col-xs-3">标题模板</label><div class="col-xs-9"><input type="radio" name="title-style" ng-model="activeItem.params.template" value="1" class="tradition" id="template-type1"><label class="radio-inline" for="template-type1">传统样式</label><input type="radio" name="title-style" ng-model="activeItem.params.template" value="2" class="wx" id="template-type2"><label class="radio-inline" for="template-type2">模仿微信图文页样式</label></div></div><div class="form-group" ng-if="activeItem.params.template == 1"><label class="col-xs-3 control-label">副标题</label><div class="col-xs-6"><input type="text" class="form-control" ng-model="activeItem.params.tradition.subtitle" value=""></div><div class="col-xs-3 form-control-static"><span class="date"><a href="javascript:;" we7-date-picker we7-date-value="activeItem.params.tradition.subtitle">日期</a></span></div></div><div class="form-group" ng-if="activeItem.params.template == 1"><label class="control-label col-xs-3">显示</label><div class="col-xs-9"><input type="radio" name="tra-style" value="left" ng-model="activeItem.params.tradition.align" id="show-type1"><label class="radio-inline" for="show-type1">居左显示</label><input type="radio" name="tra-style" value="center" ng-model="activeItem.params.tradition.align" id="show-type2"><label class="radio-inline" for="show-type2">居中显示</label><input type="radio" name="tra-style" value="right" ng-model="activeItem.params.tradition.align" id="show-type3"><label class="radio-inline" for="show-type3">居右显示</label></div></div><div class="add-textNav card" ng-if="activeItem.params.template == 1 && activeItem.params.tradition.nav.enable == 0"><a href="javascript:" ng-click="changeNavEnable(1)"><i class="fa fa-plus-circle green"></i> 添加一个文本导航</a></div><div class="card" style="padding:20px" ng-if="activeItem.params.template == 1 && activeItem.params.tradition.nav.enable == 1"><div class="btns"><a href="javascript:" ng-click="changeNavEnable(0)"><i class="fa fa-times"></i></a></div><div class="form-group"><label class="col-xs-3 control-label"><span class="red">*</span> 名称</label><div class="col-xs-9"><input type="text" class="form-control" name="" ng-model="activeItem.params.tradition.nav.title" value=""></div></div><div class="form-group"><label class="col-xs-3 control-label"><span class="red">*</span> 链接</label><div class="col-xs-9 form-control-static"><div we7-linker we7-my-url="activeItem.params.tradition.nav.url" we7-my-title="activeItem.params.tradition.nav.title"></div></div></div></div><div class="form-group" ng-if="activeItem.params.template == 2"><label class="col-xs-3 control-label">日期</label><div class="col-xs-9"><input type="text" class="form-control" name="" we7-date-picker we7-date-value="activeItem.params.news.date" value=""></div></div><div class="form-group" ng-if="activeItem.params.template == 2"><label class="col-xs-3 control-label">作者</label><div class="col-xs-9"><input type="text" class="form-control" name="" ng-model="activeItem.params.news.author" value=""></div></div><div class="form-group" ng-if="activeItem.params.template == 2"><label class="col-xs-3 control-label">链接标题</label><div class="col-xs-9"><input type="text" class="form-control" name="" ng-model="activeItem.params.news.title" value=""></div></div><div class="form-group" ng-if="activeItem.params.template == 2"><label class="control-label col-xs-3">链接地址</label><div class="col-xs-9"><div we7-linker we7-my-url="activeItem.params.news.url" we7-my-title="activeItem.params.news.title"></div></div></div></div></div></div></div></div>');

    templateCache.put("widget-white-display.html", '<div ng-controller="WhiteCtrl" style="{{module.positionStyle}}transform:translate3d(0px, 0px, 0px)" we7-context-menu><div style="{{module.transform}}width:100%;height:100%" ng-class="{\'alock\' : module.params.baseStyle.lock}"><div class="app-white" style="width:100%;height:100%;overflow:hidden;{{module.baseStyle}}{{module.borderStyle}}{{module.shadowStyle}}{{module.animationStyle}}"><div class="inner"></div></div><div we7-drag we7-resize we7-rotate></div></div></div>');

    templateCache.put("widget-white-editor.html", '<div ng-controller="WhiteCtrl"><div class="app-white-edit"><div class="arrow-left"></div><div class="inner"><div class="panel panel-default"><div class="panel-body">空白高度（请于左侧拖动缩放调整）</div></div></div></div></div>');

    templateCache.put("directive-multipage-multipage.html", '<div class="page-navigator"><div class="top-title">页面</div><div class="page-list"><ul><li class="page-menu" ng-repeat="page in allPages track by $index" ng-click="navToPage($index)" ng-init="" ng-class="{\'current\' : page.num-1 == $index}"><div class="page-thumb-block" ng-class="{active : page.active}"><div class="page-thumb"><div class="page-thumb-con"></div></div><div class="page-menu-title" ng-bind="{{$index+1}}"></div><div class="icon icon-remove" ng-click="removePage($index);"><span class="fa fa-trash"></span></div><div class="icon icon-copy" ng-click="copyPage($index, $event);" ng-if="isMultiPage"><span class="fa fa-copy"></span></div></div></li></ul></div><div class="add-blank-page" ng-click="insertPage();" ng-if="isMultiPage">+</div><div class="template hidden"><ul class="nav nav-tabs nav-justified"><li class="active"><a href="#">普通版式</a></li><li><a href="#">统计版式</a></li><li><a href="#">特效版式</a></li></ul><div class="template-area"><div class="template-item"><div class="add-icon"><span class="fa fa-plus-circle"></span></div><div class="text">空白页</div></div><div class="template-item"><img src="" alt=""></div><div class="template-item"><img src="" alt=""></div><div class="template-item"><img src="" alt=""></div><div class="template-item"><img src="" alt=""></div><div class="template-item"><img src="" alt=""></div><div class="template-item"><img src="" alt=""></div></div></div></div>')
}
]);

angular.module("wapeditorApp", ["we7app"]);

angular.module("wapeditorApp").controller("CommonCtrl", ["$scope", "$sanitize", function (e, t) {
}
]);

angular.module("wapeditorApp").directive("we7ContextMenu", ["serviceBase", "$timeout", function (e, t) {
    return {
        link: function (a, n, i) {
            function s(e, t) {
                var a = $(".right-hand-menu")
                    , n = a.parent().position();
                e -= n.left,
                    t -= n.top,
                    a.css({
                        left: e + "px",
                        top: t + "px"
                    }),
                    a.addClass("show-menu")
            }

            $(".right-hand-menu").length || ($("body").append('<menu class="right-hand-menu"> <li class="menu-item menu-item-del"> <button type="button" class="menu-btn"> <i class="fa fa-folder-open"></i> <span class="menu-text">删除</span> </button> </li> <li class="menu-item menu-item-top"> <button type="button" class="menu-btn"> <i class="fa fa-folder-open"></i> <span class="menu-text">置顶</span> </button> </li> <li class="menu-item menu-item-up"> <button type="button" class="menu-btn"> <i class="fa fa-folder-open"></i> <span class="menu-text">上移一层</span> </button> </li> <li class="menu-item menu-item-down"> <button type="button" class="menu-btn"> <i class="fa fa-folder-open"></i> <span class="menu-text">下移一层</span> </button> </li> <li class="menu-item menu-item-bottom"> <button type="button" class="menu-btn"> <i class="fa fa-folder-open"></i> <span class="menu-text">置底</span> </button> </li> </menu>'),
                $(".modules").on("contextmenu", function (e) {
                    e.preventDefault()
                }),
                $(document).on("mouseup", function () {
                    $(".right-hand-menu").removeClass("show-menu")
                }),
                $(".right-hand-menu").on("click", ".menu-item-del", function () {
                    var n = $(".right-hand-menu").data("item-index");
                    e.deleteItem(n),
                        t(function () {
                            a.$apply()
                        }, 100)
                }).on("click", ".menu-item-top", function () {
                    a.savePagePosition();
                    var n, i = $(".right-hand-menu").data("item-index"), s = [];
                    for (var o in a.activeModules)
                        a.activeModules[o].index == i ? n = angular.copy(a.activeModules[o]) : s.push(a.activeModules[o]);
                    s.push(n),
                        e.setBaseData("activeModules", s),
                        t(function () {
                            a.$apply()
                        }, 100)
                }).on("click", ".menu-item-up", function () {
                    a.savePagePosition();
                    var n, i, s = $(".right-hand-menu").data("item-index"), o = a.activeModules.length;
                    for (var r in a.activeModules)
                        if (a.activeModules[r].index == s) {
                            if (parseInt(r) + 1 == o)
                                break;
                            n = angular.copy(a.activeModules[r]),
                                i = angular.copy(a.activeModules[parseInt(r) + 1]),
                                a.activeModules[r] = i,
                                a.activeModules[parseInt(r) + 1] = n,
                                e.setBaseData("activeModules", a.activeModules);
                            break
                        }
                    t(function () {
                        a.$apply()
                    }, 100)
                }).on("click", ".menu-item-down", function () {
                    a.savePagePosition();
                    var n, i, s = $(".right-hand-menu").data("item-index");
                    for (var o in a.activeModules)
                        if (a.activeModules[o].index == s) {
                            if (o <= 1)
                                break;
                            n = angular.copy(a.activeModules[o]),
                                i = angular.copy(a.activeModules[o - 1]),
                                a.activeModules[o] = i,
                                a.activeModules[parseInt(o) - 1] = n,
                                e.setBaseData("activeModules", a.activeModules);
                            break
                        }
                    t(function () {
                        a.$apply()
                    }, 100)
                }).on("click", ".menu-item-bottom", function () {
                    a.savePagePosition();
                    var n, i = $(".right-hand-menu").data("item-index"), s = [];
                    for (var o in a.activeModules)
                        0 != o && (a.activeModules[o].index == i ? n = angular.copy(a.activeModules[o]) : s.push(a.activeModules[o]));
                    s.unshift(n),
                        s.unshift(a.activeModules[0]),
                        e.setBaseData("activeModules", s),
                        t(function () {
                            a.$apply()
                        }, 100)
                })),
                n.on("contextmenu", function (e) {
                    s(e.pageX, e.pageY);
                    var t = n.parents("div[id^='module-']").attr("index");
                    $(".right-hand-menu").data("item-index", t)
                })
        }
    }
}
]);

angular.module("wapeditorApp").directive("we7Nobar", function () {
    return {
        link: function (e, t, a) {
            t.on("mousedown", function (e) {
                $(".bar").hide()
            })
        }
    }
}).directive("we7Drag", ["serviceBase", "$timeout", function (e, t) {
    return {
        compile: function (t, a) {
            var n = $('<div class="bar bar-n ui-resizable-handle ui-resizable-n we7-hide"></div>')
                , i = $('<div class="bar bar-s ui-resizable-handle ui-resizable-s we7-hide"></div>')
                , s = $('<div class="bar bar-e ui-resizable-handle ui-resizable-e we7-hide"></div>')
                , o = $('<div class="bar bar-w ui-resizable-handle ui-resizable-w we7-hide"></div>');
            return t.append(n).append(i).append(s).append(o),
                function (t, a, n) {
                    var i = a.parents("div[ng-controller$='Ctrl']").eq(0);
                    i.on("mousedown", function (e) {
                        $(".bar").hide(),
                            $(this).find(".bar").show(),
                            $(this).find(".bar-radius").show(),
                            $(this).draggable({
                                containment: ""
                            })
                    }),
                        i.mousedown();
                    var s = e.getBaseData("activeItem");
                    if (s.id) {
                        var o = s.id.replace(/[a-z]/, function (e) {
                            return e.toLocaleUpperCase()
                        }).replace(/^[a-z]/, function (e) {
                            return e.toLocaleUpperCase()
                        }) + "Ctrl";
                        if ("HeaderCtrl" != o) {
                            var r = $("#module-" + s.index).find("div[ng-controller='" + o + "']");
                            r.on("mousedown", function (e) {
                                $(".bar").hide(),
                                    $(this).find(".bar").show(),
                                    $(this).find(".bar-radius").show(),
                                    $(this).draggable({
                                        containment: ""
                                    })
                            }),
                                r.mousedown()
                        } else
                            $(".bar").hide()
                    }
                }
        }
    }
}
]).directive("we7Resize", function () {
    return {
        compile: function (e, t) {
            var a = $('<div class="bar-radius radius-s we7-hide"></div>')
                ,
                n = $('<div class="bar bar-nw bar-radius radius-s ui-resizable-handle ui-resizable-nw we7-hide"></div>')
                ,
                i = $('<div class="bar bar-se bar-radius radius-s ui-resizable-handle ui-resizable-se we7-hide"></div>')
                ,
                s = $('<div class="bar bar-sw bar-radius radius-s ui-resizable-handle ui-resizable-sw we7-hide"></div>')
                ,
                o = $('<div class="bar bar-ne bar-radius radius-s ui-resizable-handle ui-resizable-ne we7-hide"></div>');
            return e.find(".bar-n,.bar-s,.bar-e,.bar-w").append(a),
                e.append(i).append(s).append(o).append(n),
                function (e, t, a) {
                    t.parents("div[ng-controller$='Ctrl']").eq(0).on("mousedown", function (e) {
                        var t = {
                            n: $(this).find(".bar-n"),
                            s: $(this).find(".bar-s"),
                            e: $(this).find(".bar-e"),
                            w: $(this).find(".bar-w"),
                            nw: $(this).find(".bar-nw"),
                            se: $(this).find(".bar-se"),
                            sw: $(this).find(".bar-sw"),
                            ne: $(this).find(".bar-ne")
                        };
                        $(this).resizable({
                            handles: t,
                            aspectRatio: true,
                            onlyCorner: true
                        })
                    })
                }
        }
    }
}).directive("we7Rotate", function () {
    return {
        link: function (e, t, a) {
            t.prepend('<div class="bar bar-rotate bar-radius radius-s ui-resizable-handle we7-hide"></div> <div class="bar bar-line ui-resizable-handle we7-hide"></div>');
            var n = t.parents("div[ng-controller$='Ctrl']").eq(0);
            n.on("mousedown", function (t) {
                var a, i = n.find(".bar-rotate").get(0), s = n.children(), o = new Hammer(i), r = {};
                o.get("pan").set({
                    threhold: 0
                }),
                    o.on("panstart", function (e) {
                        $("body").css({
                            "user-select": "none",
                            cursor: 'url("./resource/images/mouserotate.ico"), default'
                        }),
                            r = {
                                x: s.offset().left + s.width() / 2,
                                y: s.offset().top + s.height() / 2
                            }
                    }),
                    o.on("panmove", function (t) {
                        var n = t.center
                            , i = n.x - r.x
                            , o = n.y - r.y + $(window).scrollTop()
                            , l = Math.abs(i / o);
                        a = Math.atan(l) / (2 * Math.PI) * 360,
                            i > 0 && 0 > o ? a = 360 + a : i > 0 && o > 0 ? a = 180 - a : 0 > i && o > 0 ? a = 180 + a : 0 > i && 0 > o && (a = 360 - a),
                        a > 360 && (a -= 360),
                            a = parseInt(a),
                            s.css({
                                transform: "rotateZ(" + a + "deg)"
                            }),
                            e.activeItem.params.borderStyle.transform = a,
                            e.$apply()
                    }),
                    o.on("panend", function () {
                        $("body").css({
                            "user-select": "initial",
                            cursor: "default"
                        })
                    })
            })
        }
    }
});

angular.module("wapeditorApp").directive("we7EditKeyMap", ["serviceBase", "$timeout", function (e, t) {
    return {
        restrict: "A",
        link: function (a, n, i) {
            $(document).unbind("keydown").keydown(function (n) {
                var i = e.getBaseData("activeModules")
                    , s = e.getBaseData("activeItem")
                    , o = _.findIndex(i, s);
                if (46 == n.keyCode && o > 0 && (n.preventDefault(),
                confirm("删除后需要重新提交才会生效，确认吗？") && (i.splice(o, 1),
                    e.setBaseData({
                        activeModules: i,
                        activeItem: i[0]
                    }))),
                37 == n.keyCode || 38 == n.keyCode || 39 == n.keyCode || 40 == n.keyCode) {
                    _.isEmpty(s) || n.preventDefault();
                    37 == n.keyCode && (s.params.positionStyle.left -= 1),
                    38 == n.keyCode && (s.params.positionStyle.top -= 1),
                    39 == n.keyCode && (s.params.positionStyle.left += 1),
                    40 == n.keyCode && (s.params.positionStyle.top += 1)
                }
                t(function () {
                    a.$apply()
                })
            }).unbind("keyup").keyup(function () {
                a.$apply()
            })
        }
    }
}
]);

angular.module("wapeditorApp").directive("we7Pagelength", function () {
    return {
        replace: true,
        templateUrl: "resource/js/app/templates/directive-pagelength-pagelength.html",
        link: function (e, t, a) {
        }
    }
});

angular.module("wapeditorApp").directive("we7Style", ["serviceSetStyle", function (e) {
    return {
        templateUrl: "resource/js/app/templates/directive-style-style.html"
    }
}
]);

angular.module("wapeditorApp").directive("we7Svger", function () {
    return {
        scope: {
            we7svg: "=we7Svg"
        },
        link: function (e, t, a) {
            e.$watch("we7svg", function () {
                for (var a = $(e.we7svg), n = 0; a.length > n; n++)
                    if ("svg" == a[n].tagName) {
                        var i = a[n];
                        $(i).attr({
                            width: "100%",
                            height: "100%"
                        }),
                            $(i)[0].setAttribute("preserveAspectRatio", "none"),
                            t.html(i);
                        break
                    }
            })
        }
    }
});

angular.module("wapeditorApp").factory("serviceBase", ["$rootScope", "widget", "config", "serviceCommon", "serviceSetStyle", "$timeout", function ($rootScope, widget, a, serviceCommon, serviceSetStyle, $timeout) {
    var serviceBase = {}
        , l = {
        modules: [],
        editors: [],
        activeModules: [],
        index: 0,
        activeItem: {},
        activeIndex: 0,
        pageLength: 1,
        isNew: true
    };

    serviceBase.setModules = function (e, a) {
        if (_.isNull(e) && (l.modules = widget),
            _.isArray(e))
            for (i in e) {
                var n;
                (s = _.findIndex(widget, {
                    id: e[i]
                })) > -1 && (n = angular.copy(widget[s]),
                    l.modules.push(n))
            }
        if (_.isArray(a))
            for (i in a) {
                var s = _.findIndex(l.modules, {
                    id: a[i]
                });
                s > -1 && (l.modules[s].defaultshow = true)
            }
        return l.modules
    };

    serviceBase.setEditors = function (e) {
        l.editors.push(e)
    };

    serviceBase.updateActiveModules = function (e, t) {
        t && l.activeModules.push({
            id: e.id,
            name: e.name,
            params: angular.copy(e.params),
            originParams: angular.copy(e.params),
            issystem: e.issystem ? 1 : 0,
            index: l.index,
            displayorder: e.displayorder ? e.displayorder : l.activeModules.length
        })
    };

    serviceBase.initActiveModules = function (e) {
        return l.activeModules = e ? angular.copy(e) : [],
            l.activeModules
    };

    serviceBase.addItem = function (e, t) {
        angular.forEach(l.modules, function (a, n) {
            if (a.id == e) {
                var i = {};
                return i = angular.copy(a),
                -1 == $.inArray(e, l.editors) && (serviceBase.setEditors(a.id),
                    serviceBase.broadcast("editors")),
                "header" != e && "UCheader" != e && (i.params = "uc" === t ? serviceSetStyle.UcInitStyleParams(a.params) : serviceSetStyle.initStyleParams(a.params)),
                    serviceBase.updateActiveModules(i, true),
                    l.activeIndex = _.findIndex(l.activeModules, {
                        index: parseInt(l.index)
                    }),
                    l.activeItem = "uc" === t ? l.activeModules[l.index] : l.activeModules[l.activeIndex],
                    l.index++,
                    serviceBase.triggerActiveItem(l.activeIndex),
                    $(".app-text-edit").find(".nav-tabs").find("a[href='#attribute']").click(),
                    serviceBase.broadcast("activeItem"),
                    serviceBase.broadcast("activeModules"),
                    void ("header" != e && "UCheader" != e && serviceSetStyle.initSetStyle(i.params))
            }
        })
    };

    serviceBase.editItem = function (e) {
        (e = _.findIndex(l.activeModules, {
            index: parseInt(e)
        })) > -1 && (l.activeIndex = e,
            l.activeItem = l.activeModules[e]),
        -1 == $.inArray(l.activeItem.id, l.editors) && (serviceBase.setEditors(l.activeItem.id),
            serviceBase.broadcast("editors")),
            serviceBase.triggerActiveItem(e),
            $(".app-text-edit").find(".nav-tabs").find("a[href='#attribute']").click(),
            serviceBase.broadcast("activeItem")
    };

    serviceBase.deleteItem = function (e) {
        if (confirm("删除后需要重新提交才会生效，确认吗？")) {
            var t = $("#module-" + e).prev().attr("index")
                , e = _.findIndex(l.activeModules, {
                index: parseInt(e)
            });
            l.activeModules = _.without(l.activeModules, l.activeModules[e]),
                l.activeIndex = _.findIndex(l.activeModules, {
                    index: parseInt(t)
                }),
                l.activeItem = l.activeModules[l.activeIndex],
                serviceBase.broadcast("activeItem"),
                serviceBase.broadcast("activeModules")
        }
    };

    serviceBase.triggerActiveItem = function (e) {
        $("#module-" + l.activeModules[e].index).size() && $("#editor" + l.activeModules[e].id).size() ? clearTimeout(timer) : timer = $timeout(function () {
            serviceBase.triggerActiveItem(e)
        }, 50)
    };

    serviceBase.getBaseData = function (e) {
        return l[e]
    };

    serviceBase.setBaseData = function (e, t) {
        angular.isObject(e) ? angular.forEach(e, function (e, t) {
            l[t] = e
        }) : l[e] = t,
            serviceBase.broadcast(e)
    };

    serviceBase.broadcast = function (t) {
        switch (t) {
            case "activeItem":
                $rootScope.$broadcast("serviceBase.activeItem.update", l.activeItem);
                break;
            case "activeModules":
                $rootScope.$broadcast("serviceBase.activeModules.update", l.activeModules);
                break;
            case "editors":
                $rootScope.$broadcast("serviceBase.editors.update", l.editors);
                break;
            case "modules":
            case "index":
            case "activeIndex":
            case "pageLength":
            case "isNew":
                break;
            default:
                angular.isObject(t) && angular.forEach(t, function (t, a) {
                    switch (a) {
                        case "activeItem":
                            $rootScope.$broadcast("serviceBase.activeItem.update", l.activeItem);
                            break;
                        case "activeModules":
                            $rootScope.$broadcast("serviceBase.activeModules.update", l.activeModules);
                            break;
                        case "editors":
                            $rootScope.$broadcast("serviceBase.editors.update", l.editors)
                    }
                })
        }
    };

    return serviceBase;
}
]);

angular.module("wapeditorApp").service("serviceCommon", ["$window", function (e) {
    var t = {};
    return t.getCssname = function (e) {
        for (var t = "", a = 0, n = parseInt(e.length); a < n; a++)
            -1 != e[a].search(/[A-Z]/) ? t += "-" + e[a].toLowerCase() : t += e[a];
        return t
    }
        ,
        t.getMaxScopeIndex = function (e) {
            var t = e[e.length - 1].property
                , a = 0;
            for (var n in t)
                a = a < t[n].index ? parseInt(t[n].index) : a;
            return a
        }
        ,
        t.getHeaderIndex = function (e) {
            var t = 0;
            return angular.forEach(e, function (e, a) {
                "header" == e.id && (t = a)
            }),
                t
        }
        ,
        t.url = function (t) {
            t = t.split("/");
            var a = "./index.php?i=" + e.sysinfo.uniacid + "&j=" + e.sysinfo.acid + "&c=" + t[0];
            return t[1] && (a += "&a=" + t[1]),
            t[2] && (a += "&do=" + t[2]),
                a
        }
        ,
        t.tomedia = function (t) {
            return e.sysinfo.attachurl + t
        }
        ,
        t.buildDataTagBegin = function (t, a) {
            var n = {
                params: a,
                uniacid: e.sysinfo.uniacid,
                acid: e.sysinfo.acid
            };
            return "{data  func='site_widget_" + t + "' module='widget' widgetdata=" + encodeURIComponent(JSON.stringify(n)) + " }"
        }
        ,
        t.buildDataTagEnd = function () {
            return "{/data}"
        }
        ,
        t.stripHaskey = function (e) {
            for (var a in e)
                "$$hashKey" == a ? delete e[a] : "object" == typeof e[a] && t.stripHaskey(e[a]);
            return e
        }
        ,
        t.copySuccess = function (e, t) {
            var e = parseInt(e)
                , t = t
                , a = $("#copy-" + e).next().html();
            (!a || a.indexOf('<span class="label label-success" style="position:absolute;z-index:10;width:90px;height:34px;line-height:28px;"><i class="fa fa-check-circle"></i> 复制成功</span>') < 0) && $("#copy-" + e).after(t),
                setTimeout(function () {
                    t.remove()
                }, 2e3)
        }
        ,
        t
}
]);

angular.module("wapeditorApp").value("widget", [{
    id: "header",
    name: "微页面标题",
    issystem: true,
    params: {
        title: "微页面标题",
        description: "",
        pageHeight: 568,
        thumb: "",
        bgColor: "",
        bottom_menu: false,
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        positionStyle: {},
        animationStyle: {}
    }
}, {
    id: "UCheader",
    name: "会员主页",
    issystem: true,
    params: {
        title: "会员主页",
        cover: "",
        bgImage: ""
    }
}, {
    id: "cardBasic",
    name: "会员卡基本设置",
    issystem: true,
    params: {
        title: "会员卡",
        color: {
            title: "#333",
            rank: "#333",
            name: "#333",
            number: "#333"
        },
        card_level: {
            type: 1
        },
        card_label: {
            type: 1,
            title: "会员卡标题"
        },
        description: "1、本卡采取记名消费方式\n2、持卡人可享受会员专属优惠\n3、本卡不能与其他优惠活动同时使用\n4、持卡人可用卡内余额进行消费",
        background: {
            type: "system",
            image: util.tomedia("images/global/card/6.png")
        },
        logo: util.tomedia("http://www.baidu.com/img/bdlogo.gif"),
        format_type: 1,
        format: "WQ2015*****#####***",
        fields: [{
            title: "姓名",
            require: 1,
            bind: "realname"
        }, {
            title: "手机",
            require: 1,
            bind: "mobile"
        }],
        grant: {
            credit1: 0,
            credit2: 0,
            coupon: []
        },
        grant_rate: 0,
        offset_rate: 0,
        offset_max: 0
    }
}, {
    id: "cardActivity",
    name: "消费优惠设置",
    issystem: true,
    params: {
        discount_type: 0,
        discount_style: 1,
        discounts: [],
        content: "",
        bgColor: ""
    }
}, {
    id: "cardNums",
    name: "会员卡次数设置",
    issystem: true,
    params: {
        nums_status: 0,
        nums_style: 1,
        nums_text: "可用次数",
        nums: [{
            recharge: 100,
            num: 5
        }, {
            recharge: 200,
            num: 10
        }]
    }
}, {
    id: "cardTimes",
    name: "会员卡计时设置",
    issystem: true,
    params: {
        times_status: 0,
        times_style: 1,
        times_text: "截至日期",
        times: [{
            recharge: 100,
            time: 5
        }, {
            recharge: 200,
            time: 10
        }]
    }
}, {
    id: "cardRecharge",
    name: "充值优惠设置",
    issystem: true,
    params: {
        recharge_type: 0,
        recharge_style: 1,
        grant_rate_switch: 1,
        recharges: [{
            condition: "",
            back: "",
            backtype: "0",
            backunit: "元"
        }, {
            condition: "",
            back: "",
            backtype: "0",
            backunit: "元"
        }, {
            condition: "",
            back: "",
            backtype: "0",
            backunit: "元"
        }, {
            condition: "",
            back: "",
            backtype: "0",
            backunit: "元"
        }],
        content: "",
        bgColor: ""
    }
}, {
    id: "onlyText",
    name: "文字",
    isbase: true,
    params: {
        title: "请输入文字",
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            top: 100,
            left: 60,
            width: 200,
            height: 30
        }
    }
}, {
    id: "image",
    name: "图片",
    isbase: true,
    params: {
        items: {
            id: "",
            imgurl: ""
        },
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            top: 169,
            left: 0,
            width: 100,
            height: 100
        }
    }
}, {
    id: "shape",
    name: "形状",
    isbase: true,
    params: {
        svgValue: "",
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            top: 64,
            left: 0,
            width: 100,
            height: 100
        }
    }
}, {
    id: "pureLink",
    name: "链接",
    isbase: true,
    params: {
        items: [{
            id: "1",
            type: "text",
            title: "点我购买",
            url: "",
            color: "#fff",
            editcolor: "danger",
            discolor: "#d9534f",
            active: 1
        }, {
            id: "2",
            type: "text",
            title: "点开链接",
            url: "",
            color: "#fff",
            editcolor: "warning",
            discolor: "#ec971f",
            active: 0
        }, {
            id: "3",
            type: "text",
            title: "马上购买",
            url: "",
            color: "#fff",
            editcolor: "success",
            discolor: "#449d44",
            active: 0
        }, {
            id: "4",
            type: "text",
            title: "关注我们",
            url: "",
            color: "#000",
            editcolor: "default",
            discolor: "#fff",
            active: 0
        }, {
            id: "5",
            type: "img",
            title: "自定义",
            url: "",
            imgurl: "",
            editcolor: "primary",
            discolor: "",
            active: 0
        }],
        baseStyle: {
            backgroundColor: "#d9534f",
            color: "#fff",
            textAlign: "center",
            fontSize: "14",
            lineHeight: "33px"
        },
        borderStyle: {
            borderWidth: 1,
            borderRadius: 4,
            borderStyle: "solid",
            borderColor: "#ADADAD"
        },
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            top: 244,
            left: 0,
            width: 85,
            height: 35
        }
    }
}, {
    id: "dial",
    name: "拨号",
    isbase: true,
    params: {
        items: [{
            id: "1",
            type: "text",
            title: "一键拨号",
            tel: "",
            color: "#fff",
            editcolor: "danger",
            discolor: "#d9534f",
            active: 1
        }, {
            id: "2",
            type: "text",
            title: "热线电话",
            tel: "",
            color: "#fff",
            editcolor: "warning",
            discolor: "#ec971f",
            active: 0
        }, {
            id: "3",
            type: "text",
            title: "拨打电话",
            tel: "",
            color: "#fff",
            editcolor: "success",
            discolor: "#449d44",
            active: 0
        }, {
            id: "4",
            type: "text",
            title: "销售专线",
            tel: "",
            color: "#000",
            editcolor: "default",
            discolor: "#fff",
            active: 0
        }, {
            id: "5",
            type: "img",
            title: "自定义",
            tel: "",
            imgurl: "",
            editcolor: "primary",
            discolor: "",
            active: 0
        }],
        baseStyle: {
            backgroundColor: "#d9534f",
            color: "#fff",
            textAlign: "center",
            fontSize: "14",
            lineHeight: "33px"
        },
        borderStyle: {
            borderWidth: 1,
            borderRadius: 4,
            borderStyle: "solid",
            borderColor: "#ADADAD"
        },
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            top: 274,
            left: 100,
            width: 85,
            height: 35
        }
    }
}, {
    id: "good",
    name: "点赞",
    isbase: true,
    params: {
        bgcolor: "#d15d82",
        color: "#fff",
        layoutstyle: 1,
        layoutactive: "lr",
        baseStyle: {
            color: "#fff",
            backgroundColor: "#d15d82",
            fontSize: "14px",
            textAlign: "center",
            lineHeight: "48px"
        },
        borderStyle: {
            borderWidth: 1,
            borderRadius: 4,
            borderStyle: "solid",
            borderColor: "#ADADAD"
        },
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            width: 150,
            height: 50,
            top: 174,
            left: 70
        }
    }
}, {
    id: "countDown",
    name: "倒计时",
    isbase: true,
    params: {
        leftTimeText: {
            day: 0,
            hour: 0,
            min: 0,
            sec: 0
        },
        deadtime: "",
        textalign: "center",
        baseStyle: {
            fontSize: "13px",
            textAlign: "center",
            lineHeight: "48px"
        },
        borderStyle: {
            borderWidth: 1,
            borderRadius: 4,
            borderStyle: "solid",
            borderColor: "#ccc"
        },
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            top: 315,
            left: 50
        }
    }
}, {
    id: "richText",
    name: "富文本",
    params: {
        bgColor: "",
        content: "",
        isfull: false,
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            left: 0,
            top: 10,
            width: 320,
            height: 410
        }
    }
}, {
    id: "adImg",
    name: "幻灯片",
    params: {
        listStyle: 1,
        sizeType: 1,
        items: [],
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            left: 0,
            width: 320,
            height: 80
        }
    }
}, {
    id: "cube",
    name: "图片魔方",
    params: {
        layout: {},
        showIndex: 0,
        selection: {},
        currentPos: {},
        currentLayout: {
            isempty: true
        },
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            left: 0,
            width: 320,
            height: 30
        }
    }
}, {
    id: "title",
    name: "标题",
    params: {
        title: "",
        template: 1,
        tradition: {
            subtitle: "",
            align: "left",
            nav: {
                title: "",
                url: "",
                enable: 0
            }
        },
        news: {
            date: "",
            author: "",
            title: "",
            urlType: 1,
            url: ""
        },
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            left: 0,
            width: 320,
            height: 96
        }
    }
}, {
    id: "textNav",
    name: "文本导航",
    params: {
        items: [],
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            left: 0,
            width: 320,
            height: 30
        }
    }
}, {
    id: "navImg",
    name: "图片导航",
    params: {
        items: [{
            imgurl: "",
            title: "",
            url: ""
        }, {
            imgurl: "",
            title: "",
            url: ""
        }, {
            imgurl: "",
            title: "",
            url: ""
        }, {
            imgurl: "",
            title: "",
            url: ""
        }],
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            left: 0,
            width: 320,
            height: 100
        }
    }
}, {
    id: "link",
    name: "关联链接",
    params: {
        items: [],
        baseStyle: {
            lineHeight: "inherit"
        },
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            left: 0,
            width: 320,
            height: 100
        }
    }
}, {
    id: "line",
    name: "辅助线",
    params: {
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            height: 30
        }
    }
}, {
    id: "white",
    name: "辅助空白",
    params: {
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            left: 0,
            width: 320,
            height: 20
        }
    }
}, {
    id: "audio",
    name: "语音",
    params: {
        style: "1",
        headimg: "",
        align: "left",
        title: "",
        isloop: false,
        reload: "false",
        audio: {
            id: "",
            url: ""
        },
        baseStyle: {},
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            left: 0,
            width: 320,
            height: 60
        }
    }
}, {
    id: "notice",
    name: "公告",
    params: {
        notice: "",
        baseStyle: {
            backgroundColor: "#ffc"
        },
        borderStyle: {},
        shadowStyle: {},
        animationStyle: {},
        positionStyle: {
            left: 0,
            width: 320,
            height: 40
        }
    }
}]);

angular.module("wapeditorApp").service("serviceDrag", function () {
    console.log("serviceDrag")
});

angular.module("wapeditorApp").service("serviceSetStyle", ["$rootScope", "$timeout", "serviceCommon", "config", function (e, t, a, n) {
    var i = {}
        , s = 1;
    return i.defBaseStyle = {
        backgroundColor: "rgba(0,0,0,0)",
        color: "#000",
        opacity: 0,
        paddingTop: 0,
        lineHeight: 2,
        fontSize: 14,
        textAlign: "left",
        lock: false
    },
        i.defBorderStyle = {
            borderWidth: 0,
            borderRadius: 2,
            borderStyle: "solid",
            borderColor: "rgba(0,0,0,1)",
            transform: 0
        },
        i.defShadowStyle = {
            shadowSize: 0,
            shadowBlur: 0,
            shadowColor: "rgba(0,0,0,0.5)",
            shadowDirection: 1
        },
        i.defAnimationStyle = {
            animationName: "noEffect",
            animationDuration: 1,
            animationTimingFunction: "ease",
            animationDelay: .6,
            animationFillMode: "both"
        },
        i.defPositionStyle = {
            top: 259,
            left: 40,
            width: 240,
            height: 50
        },
        i.initStyleParams = function (e) {
            var t = {};
            return (t = angular.copy(e)).baseStyle = $.extend(false, i.defBaseStyle, e.baseStyle),
                t.borderStyle = $.extend(false, i.defBorderStyle, e.borderStyle),
                t.shadowStyle = $.extend(false, i.defShadowStyle, e.shadowStyle),
                t.animationStyle = $.extend(false, i.defAnimationStyle, e.animationStyle),
                t.positionStyle = $.extend(false, i.defPositionStyle, e.positionStyle),
            $(".app-preview").scrollTop() > 0 && (t.positionStyle.top += parseInt($(".app-preview").scrollTop())),
                t.positionStyle.left > 200 ? t.positionStyle.left = 10 : t.positionStyle.left += 5 * s,
                t.positionStyle.top += 5 * s,
                s > 20 ? s = 1 : s++,
                t
        }
        ,
        i.UcInitStyleParams = function (e) {
            var t = {};
            return (t = angular.copy(e)).baseStyle = $.extend(false, i.defBaseStyle, e.baseStyle),
                t.borderStyle = $.extend(false, i.defBorderStyle, e.borderStyle),
                t.shadowStyle = $.extend(false, i.defShadowStyle, e.shadowStyle),
                t.animationStyle = $.extend(false, i.defAnimationStyle, e.animationStyle),
                t.positionStyle = $.extend(false, i.defPositionStyle, e.positionStyle),
            $(".app-preview").scrollTop() > 0 && (t.positionStyle.top += parseInt($(".app-preview").scrollTop())),
                t.positionStyle.left > 200 ? t.positionStyle.left = 10 : t.positionStyle.left += 5 * s,
                t.positionStyle.top += 5 * s - $(".app-usercenter").height(),
                s > 10 ? s = 1 : s++,
                t
        }
        ,
        i.initSetStyle = function (e) {
            i.setModuleBaseStyle(e.baseStyle),
                i.setModuleBorderStyle(e.borderStyle),
                i.setModuleShadowStyle(e.shadowStyle),
                i.setModulePositionStyle(e.positionStyle),
                i.setModuleAnimationStyle(e.animationStyle)
        }
        ,
        i.setModuleBaseStyle = function (t) {
            t = $.extend(false, i.defBaseStyle, t);
            var n = "";
            for (var s in t)
                switch (s) {
                    case "fontSize":
                        "number" == typeof t[s] ? n += a.getCssname(s) + ":" + parseInt(t[s]) + "px;" : t[s].search(/rem/) ? n += a.getCssname(s) + ":14px;" : n += a.getCssname(s) + ":" + parseInt(t[s]) + "px;";
                    case "paddingTop":
                    case "paddingBottom":
                        n += a.getCssname(s) + ":" + parseInt(t[s]) + "px;";
                        break;
                    case "backgroundColor":
                    case "color":
                    case "textAlign":
                    case "lineHeight":
                        n += a.getCssname(s) + ":" + t[s] + ";";
                        break;
                    case "opacity":
                        n += a.getCssname(s) + ":" + (100 - parseInt(t[s])) / 100 + ";"
                }
            e.$broadcast("serviceBase.activeItem.style.update", "baseStyle", t, n)
        }
        ,
        i.setModuleBorderStyle = function (t) {
            t = $.extend(false, i.defBorderStyle, t);
            var n = newTransformStyle = "";
            for (var s in t)
                switch (s) {
                    case "borderWidth":
                    case "borderRadius":
                        n += a.getCssname(s) + ":" + parseInt(t[s]) + "px;";
                        break;
                    case "borderStyle":
                    case "borderColor":
                        n += a.getCssname(s) + ":" + t[s] + ";";
                        break;
                    case "transform":
                        newTransformStyle += "transform: rotateZ(" + parseInt(t[s]) + "deg);"
                }
            e.$broadcast("serviceBase.activeItem.style.update", "borderStyle", t, n, newTransformStyle)
        }
        ,
        i.setModuleShadowStyle = function (t) {
            t = $.extend(false, i.defShadowStyle, t);
            var a = ""
                , n = shadowY = 0;
            n = -Math.sin(t.shadowDirection * Math.PI / 180) * t.shadowSize,
                shadowY = Math.cos(t.shadowDirection * Math.PI / 180) * t.shadowSize,
                a = "box-shadow: " + n + "px " + shadowY + "px " + t.shadowBlur + "px " + t.shadowColor + ";",
                e.$broadcast("serviceBase.activeItem.style.update", "shadowStyle", t, a)
        }
        ,
        i.setModuleAnimationStyle = function (t) {
            var a = ""
                ,
                n = (t = $.extend(false, i.defAnimationStyle, t)).animationName + " " + t.animationDuration + "s " + t.animationTimingFunction + " " + t.animationDelay + "s " + t.animationFillMode;
            a = i.cssCompatible("animation", n),
                e.$broadcast("serviceBase.activeItem.style.update", "animationStyle", t, a)
        }
        ,
        i.setModulePositionStyle = function (t) {
            t = $.extend(false, i.defPositionStyle, t);
            var a = "position:absolute;";
            for (var n in t)
                switch (n) {
                    case "top":
                    case "left":
                    case "width":
                    case "height":
                        a += " " + n + ": " + t[n] + "px;"
                }
            e.$broadcast("serviceBase.activeItem.style.update", "positionStyle", t, a)
        }
        ,
        i.clearModuleStyle = function (t) {
            t.params.baseStyle = t.originParams.baseStyle,
                t.params.borderStyle = t.originParams.borderStyle,
                t.params.shadowStyle = t.originParams.shadowStyle,
                t.params.animationStyle = t.originParams.animationStyle,
                e.$broadcast("serviceBase.activeItem.update", t)
        }
        ,
        i.eleAnimationIns = function (n) {
            var i = a.getCssname(n);
            t(function () {
                $("." + i).parent().addClass("select").siblings(".select").removeClass("select")
            }, 100),
                e.$broadcast("serviceBase.activeItem.animationName.update", n)
        }
        ,
        i.savePagePosition = function (t) {
            $(".modules").find("div.ng-scope[ng-controller$='Ctrl']").each(function () {
                var e = $(this).parent().parent()
                    , a = _.findIndex(t, {
                    index: parseInt(e.attr("index"))
                })
                    , n = $(this).css("top")
                    , i = $(this).css("left")
                    , s = $(this).css("width")
                    , o = $(this).css("height")
                    , r = "position:absolute;top:" + n + ";left:" + i + ";width:" + s + ";height:" + o + ";";
                t[a].params.positionStyle.top = parseInt(n),
                    t[a].params.positionStyle.left = parseInt(i),
                    t[a].params.positionStyle.width = parseInt(s),
                    t[a].params.positionStyle.height = parseInt(o),
                    t[a].positionStyle = r
            }),
                e.$broadcast("serviceBase.activeModules.update", t)
        }
        ,
        i.saveModulePosition = function (t) {
            var a = "#module-" + t.index
                , n = $(a).find("div.ng-scope[ng-controller$='Ctrl']")
                , i = n.css("top")
                , s = n.css("left")
                , o = n.css("width")
                , r = n.css("height")
                , l = "position:absolute;top:" + i + ";left:" + s + ";width:" + o + ";height:" + r + ";";
            return t.params.positionStyle.top = parseInt(i),
                t.params.positionStyle.left = parseInt(s),
                t.params.positionStyle.width = parseInt(o),
                t.params.positionStyle.height = parseInt(r),
                t.positionStyle = l,
                e.$broadcast("serviceBase.activeItem.update", t),
                t
        }
        ,
        i.changeTextAlign = function (t, a) {
            t.params.baseStyle.textAlign = a,
                e.$broadcast("serviceBase.activeItem.update", t)
        }
        ,
        i.changeBorderWidth = function (e) {
            "adImg" != e.id && "cube" != e.id && "title" != e.id && "textNav" != e.id && "link" != e.id && "audio" != e.id || t(function () {
                var t = i.saveModulePosition(e);
                t.positionStyle.height += 2 * t.borderStyle.borderWidth,
                "audio" == e.id && (t.positionStyle.height += 20),
                    i.setModulePositionStyle(t.params.positionStyle)
            }, 100)
        }
        ,
        i.changeInnerHeight = function (e) {
            t(function () {
                var t = i.saveModulePosition(e)
                    , a = t.index
                    , n = $("#module-" + a).find(".inner")
                    , s = parseInt(n.css("height"));
                s += 2 * t.params.borderStyle.borderWidth,
                    t.params.positionStyle.height = s,
                    i.setModulePositionStyle(t.params.positionStyle)
            }, 100)
        }
        ,
        i.changePageLength = function (n, i) {
            var s = !((n = parseInt(n)) > 1)
                , o = n;
            return t(function () {
                $(".app-content").css("height", 568 * n + "px")
            }, 100),
                i[a.getHeaderIndex(i)].params.pageLength = n,
                e.$broadcast("updateScope", {
                    isMultiPage: s,
                    pageLength: o,
                    activeModules: i
                }),
                i
        }
        ,
        i.cssCompatible = function (e, t) {
            if (angular.isString(e) && angular.isString(t))
                return e + ": " + t + ";-webkit-" + e + ": " + t + ";-moz-" + e + ": " + t + ";-o-" + e + ": " + t + ";-ms-" + e + ": " + t + ";"
        }
        ,
        i
}
]);

angular.module("wapeditorApp").service("serviceSubmit", ["serviceBase", "serviceCommon", function (e, t) {
    var a = {};
    return a.submit = function () {
        var a = ""
            , n = {
            params: {},
            html: ""
        }
            , i = $($(".modules").html())
            , s = e.getBaseData("activeModules");
        i.find("div.ng-scope[ng-controller$='Ctrl']").each(function () {
            var e = _.findIndex(s, {
                index: parseInt($(this).parent().parent().attr("index"))
            })
                , n = $(this).find("div[class^='app-']").get(0)
                , i = $(n).attr("style");
            s[e].params.animate = s[e].params.animateTemp,
                i += "animation:" + s[e].params.animate + ";",
                $(n).attr("style", i);
            var o = ""
                , r = angular.copy(s[e].params);
            $(this).find(".js-default-content").remove();
            var l = $(this).parent().parent().attr("name").toLowerCase();
            if ("UCheader" != l && "cardBasic" != l && "cardActivity" != l && "cardNums" != l && "cardTimes" != l && "cardRecharge" != l) {
                var c = $(this).css("top")
                    , u = $(this).css("left")
                    , d = $(this).css("width")
                    , p = $(this).css("height")
                    , m = "position:absolute;top:" + c + ";left:" + u + ";width:" + d + ";height:" + p + ";";
                s[e].params.positionStyle.top = parseInt(c),
                    s[e].params.positionStyle.left = parseInt(u),
                    s[e].params.positionStyle.width = parseInt(d),
                    s[e].params.positionStyle.height = parseInt(p),
                    s[e].positionStyle = m
            }
            switch (l) {
                case "link":
                    var f = this;
                    angular.forEach(r.items, function (e, a) {
                        (e.selectCate.pid || e.selectCate.cid) && $(f).find(".list-group").children().eq(a).replaceWith("<div>" + t.buildDataTagBegin("link", e) + '<div class="list-group-item ng-scope"><a href="{$row[url]}" class="clearfix"><span class="app-nav-title"> {$row[title]}<i class="pull-right fa fa-angle-right"></i></span></a></div>' + t.buildDataTagEnd() + "</div>")
                    });
                    break;
                case "richtext":
                    s[e] && (s[e].params.content = "")
            }
            if (o = $(this).html(),
            "header" != l) {
                m = $(this).attr("style");
                a += '<div type="' + l + '" style="' + m + '">' + o + "</div>"
            }
            e++
        });
        var o = s[0].params.bgColor;
        return a = '<div class="js-design-page" style="background-color:' + o + '">' + a + "</div>",
            a = a.replace(/<\!\-\-([^-]*?)\-\->/g, ""),
            a = a.replace(/ ng\-[a-zA-Z-]+=\"[^\"]*\"/g, ""),
            a = a.replace(/ ng\-[a-zA-Z]+/g, ""),
            n.html = a,
            n.params = angular.copy(s),
            t.stripHaskey(n.params),
            n
    }
        ,
        a
}
]);

angular.module("wapeditorApp").service("serviceUpwardCompatible", ["$rootScope", "$timeout", "orderByFilter", function (e, t, a) {
    var n = {};
    return n.compatibility = function (e) {
        void 0 !== e[0].params.pageHeight && (e[0].params.pageLength = Math.ceil(e[0].params.pageHeight / 568)),
            e = a(e, "displayorder");
        for (var t in e) {
            e[t].params.baseStyle instanceof Array && (e[t].params.baseStyle = {}),
            e[t].params.borderStyle instanceof Array && (e[t].params.borderStyle = {}),
            e[t].params.shadowStyle instanceof Array && (e[t].params.shadowStyle = {}),
            e[t].params.positionStyle instanceof Array && (e[t].params.positionStyle = {});
            var n = angular.copy(e[t].params);
            if (e[t].animationStyle = "",
                e[t].params.animationStyle = {},
                e[t].params.animate) {
                var i = e[t].params.animate.match(/(\w+)\s1/);
                i = i ? i[1] : "noEffect",
                    e[t].params.animationStyle.name = i
            } else
                e[t].params.animationStyle.name = "noEffect";
            switch (e[t].params.animationStyle = {
                name: e[t].params.animationStyle.name,
                speed: 1,
                delay: .6
            },
                e[t].animationStyle = "animation: " + e[t].params.animate + ";",
                e[t].params.positionStyle = _.isEmpty(e[t].params.positionStyle) ? {} : e[t].params.positionStyle,
                e[t].params.baseStyle = _.isEmpty(e[t].params.baseStyle) ? {} : e[t].params.baseStyle,
                e[t].params.borderStyle = _.isEmpty(e[t].params.borderStyle) ? {} : e[t].params.borderStyle,
                e[t].params.shadowStyle = _.isEmpty(e[t].params.shadowStyle) ? {} : e[t].params.shadowStyle,
                e[t].baseStyle = "",
                e[t].borderStyle = "",
                e[t].shadowStyle = "",
                e[t].positionStyle = "",
                e[t].id) {
                case "onlyText":
                    e[t].params.baseStyle.textAlign = n.postype,
                        e[t].params.baseStyle.fontSize = n.baseStyle.fontsize,
                        e[t].params.baseStyle.lineHeight = n.baseStyle.lineheight,
                        e[t].params.positionStyle.left = n.positionStyle.marginleft ? n.positionStyle.marginleft : 0,
                        e[t].params.positionStyle.width = n.positionStyle.width ? n.positionStyle.width : 290,
                        e[t].params.positionStyle.height = n.positionStyle.height ? n.positionStyle.height : 0,
                        e[t].baseStyle = "font-size:" + n.baseStyle.fontsize + "px;text-align:" + n.postype + ";line-height:" + n.baseStyle.lineheight + ";";
                    break;
                case "image":
                    e[t].params.positionStyle.left = n.positionStyle.marginleft ? n.positionStyle.marginleft : 0,
                        e[t].params.positionStyle.width = n.positionStyle.width ? n.positionStyle.width : 0,
                        e[t].params.positionStyle.height = n.positionStyle.height ? n.positionStyle.height : 0;
                    break;
                case "shape":
                    e[t].params.positionStyle.left = n.positionStyle.marginleft ? n.positionStyle.marginleft : 0,
                        e[t].params.positionStyle.width = n.positionStyle.width ? n.positionStyle.width : 100,
                        e[t].params.positionStyle.height = n.positionStyle.height ? n.positionStyle.height : 0;
                    break;
                case "pureLink":
                case "dial":
                    e[t].params.baseStyle.fontSize = n.baseStyle.fontsize ? n.baseStyle.fontsize + "px" : "14px",
                        e[t].params.baseStyle.textAlign = "center";
                    for (var s in n.items)
                        if (1 == n.items[s].active) {
                            e[t].params.baseStyle.backgroundColor = n.items[s].discolor,
                                e[t].params.baseStyle.color = n.items[s].color;
                            break
                        }
                    e[t].params.positionStyle.left = n.positionStyle.marginleft ? n.positionStyle.marginleft : 0,
                        e[t].params.positionStyle.width = n.positionStyle.width ? n.positionStyle.width : 320 - n.positionStyle.marginleft,
                        e[t].params.positionStyle.height = n.positionStyle.height ? n.positionStyle.height : 35,
                        e[t].params.baseStyle.lineHeight = e[t].params.positionStyle.height + "px",
                        e[t].params.borderStyle.borderWidth = 1,
                        e[t].params.borderStyle.borderRadius = 8,
                        e[t].params.borderStyle.borderStyle = "solid",
                        e[t].params.borderStyle.borderColor = "#ADADAD",
                        e[t].baseStyle = "font-size:" + e[t].params.baseStyle.fontSize + ";text-align:center;background-color:" + n.items[s].discolor + ";color:" + n.items[s].color + ";line-height:" + e[t].params.baseStyle.lineHeight + ";",
                        e[t].borderStyle = "border-radius:8px; border-width: 1px;border-style: solid;border-color: #ADADAD;";
                    break;
                case "good":
                    e[t].params.baseStyle.fontSize = n.baseStyle.fontsize + "px",
                        e[t].params.baseStyle.textAlign = "center",
                        e[t].params.baseStyle.color = n.color,
                        e[t].params.baseStyle.backgroundColor = "#d15d82",
                        e[t].params.borderStyle.borderRadius = 5,
                        e[t].params.positionStyle.left = n.positionStyle.marginleft ? n.positionStyle.marginleft : 0,
                        e[t].params.positionStyle.width = n.positionStyle.width ? n.positionStyle.width : 320 - n.positionStyle.marginleft,
                        1 == n.layoutstyle ? e[t].params.positionStyle.height = n.positionStyle.height ? n.positionStyle.height : 35 : e[t].params.positionStyle.height = n.positionStyle.height ? n.positionStyle.height : 54,
                        e[t].params.baseStyle.lineHeight = e[t].params.positionStyle.height + "px",
                        e[t].baseStyle = "font-size:" + e[t].params.baseStyle.fontSize + ";text-align:center;background-color:#d15d82;color:" + n.color + ";line-height:" + e[t].params.baseStyle.lineHeight + ";",
                        e[t].borderStyle = "border-radius:5px;";
                    break;
                case "countDown":
                    e[t].params.baseStyle.fontSize = n.baseStyle.fontsize + "px",
                        e[t].params.baseStyle.textAlign = "center",
                        e[t].params.positionStyle.left = n.positionStyle.marginleft ? n.positionStyle.marginleft : 0,
                        e[t].params.positionStyle.width = n.positionStyle.width ? n.positionStyle.width : 320,
                        e[t].params.positionStyle.height = n.positionStyle.height ? n.positionStyle.height : 35,
                        e[t].params.baseStyle.lineHeight = e[t].params.positionStyle.height + "px",
                        e[t].params.borderStyle.borderWidth = 1,
                        e[t].params.borderStyle.borderStyle = "solid",
                        e[t].params.borderStyle.borderColor = "#ccc",
                        e[t].baseStyle = "font-size:" + e[t].params.baseStyle.fontSize + ";text-align:center;line-height:" + e[t].params.baseStyle.lineHeight + ";",
                        e[t].borderStyle = "border-width: 1px;border-style: solid;border-color: #ccc;";
                    break;
                case "title":
                    e[t].params.baseStyle.backgroundColor = n.tradition.bgcolor,
                        e[t].baseStyle = "background-color:" + n.tradition.bgcolor + ";";
                case "white":
                    e[t].params.positionStyle.height = e[t].params.height;
                case "richText":
                case "adImg":
                case "cube":
                case "textNav":
                case "navImg":
                case "link":
                case "line":
                case "audio":
                case "notice":
                    void 0 !== n.positionStyle ? e[t].params.positionStyle.left = n.positionStyle.marginleft ? n.positionStyle.marginleft : 0 : e[t].params.positionStyle.left = 0,
                        e[t].params.positionStyle.width = 320
            }
            var o = "";
            heightStyle = "",
            e[t].params.positionStyle.width && (o = "width:" + e[t].params.positionStyle.width + "px;"),
            e[t].params.positionStyle.height && (heightStyle = "height:" + e[t].params.positionStyle.height + "px;"),
                e[t].positionStyle = "position:relative;left:" + e[t].params.positionStyle.left + "px;" + o + heightStyle,
                void 0 !== n.positionStyle ? e[t].marginTop = n.positionStyle.margintop ? n.positionStyle.margintop : 0 : e[t].marginTop = 0
        }
        return e
    }
        ,
        n
}
]);

angular.module("wapeditorApp").controller("AdImgCtrl", ["$scope", function (e) {
    e.addItem = function () {
        require(["fileUploader"], function (t) {
            t.show(function (t) {
                e.activeItem.params.items.push({
                    id: t.id,
                    imgurl: t.url,
                    title: "",
                    url: "",
                    isactive: false
                }),
                    $.each(e.activeItem.params.items, function (t, a) {
                        e.activeItem.params.items[0].isactive = 0 == t
                    }),
                    e.$apply("activeItem"),
                    e.changeInnerHeight()
            }, {
                direct: true,
                multiple: false
            })
        })
    }
        ,
        e.removeItem = function (t) {
            index = $.inArray(t, e.activeItem.params.items),
                items = _.clone(e.activeItem.params.items),
                e.activeItem.params.items = [];
            for (i in items)
                i != index && e.activeItem.params.items.push(items[i]);
            e.changeInnerHeight()
        }
        ,
        e.addEmpty = function () {
            e.activeItem.params.items.push({
                imgurl: "",
                title: "",
                url: ""
            }),
                e.changeInnerHeight()
        }
        ,
        e.changeItem = function (t) {
            require(["fileUploader"], function (a) {
                a.init(function (a) {
                    var n = $.inArray(t, e.activeItem.params.items);
                    n > -1 && (e.activeItem.params.items[n].id = a.id,
                        e.activeItem.params.items[n].imgurl = a.url,
                        e.$apply())
                }, {
                    direct: true,
                    multiple: false
                })
            }),
                e.changeInnerHeight()
        }
}
]);

angular.module("wapeditorApp").controller("AudioCtrl", ["$scope", function (e) {
    e.addAudioItem = function () {
        require(["fileUploader"], function (t) {
            t.init(function (t) {
                t && (e.activeItem.params.audio.id = t.id,
                    e.activeItem.params.audio.url = t.attachment,
                    e.$apply(),
                    $(".audio-player-play").click(function () {
                        var t = e.activeItem.params.audio.url;
                        if (t) {
                            $("#player").remove();
                            var a = $('<div id="player"></div>');
                            $(document.body).append(a),
                                a.data("control", $(this)),
                                a.jPlayer({
                                    playing: function () {
                                        $(this).data("control").find("i").removeClass("fa-play").addClass("fa-stop")
                                    },
                                    pause: function (e) {
                                        $(this).data("control").find("i").removeClass("fa-stop").addClass("fa-play")
                                    },
                                    swfPath: "resource/components/jplayer",
                                    supplied: "mp3,wma,wav,amr",
                                    solution: "html, flash"
                                }),
                                a.jPlayer("setMedia", {
                                    mp3: t
                                }).jPlayer("play"),
                                $(this).find("i").hasClass("fa-stop") ? a.jPlayer("stop") : a.jPlayer("setMedia", {
                                    mp3: t
                                }).jPlayer("play")
                        }
                    }).show())
            }, {
                direct: true,
                multiple: false,
                type: "audio"
            })
        })
    }
        ,
        e.addImgItem = function () {
            require(["fileUploader"], function (t) {
                t.init(function (t) {
                    e.activeItem.params.headimg = t.url,
                        e.$apply()
                }, {
                    direct: true,
                    multiple: false
                })
            })
        }
        ,
        e.changeInnerHeight = function () {
            e.changeInnerHeight()
        }
}
]);

angular.module("wapeditorApp").controller("CountDownCtrl", ["$scope", "$timeout", function (e, t) {
    e.$watch("activeItem.params.deadtime", function (t, n) {
        if (e.activeItem.params.leftTimeText = {
            day: 0,
            hour: 0,
            min: 0,
            sec: 0
        },
        t && void 0 !== t && 0 != t) {
            var i = t.replace(/:/g, "-")
                , s = (i = i.replace(/ /g, "-")).split("-");
            dtime = new Date(Date.UTC(s[0], s[1] - 1, s[2], s[3] - 8, s[4], s[5])),
                dtime = parseInt(dtime.getTime()),
                d = new Date(dtime)
        } else {
            var o = Date.parse(new Date);
            dtime = parseInt(2592e6 + o),
                d = new Date(dtime)
        }
        e.activeItem.params.deadtime = d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds(),
            e.activeItem.params.deadtimeToMin = d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate() + " " + d.getHours() + ":" + d.getMinutes(),
            a()
    });
    var a = function () {
        var n = Date.parse(new Date)
            , i = dtime - n > 0 ? dtime - n : 0;
        e.activeItem.params.leftTimeText.day = parseInt(i / 864e5),
            e.activeItem.params.leftTimeText.hour = parseInt(i / 36e5 % 24),
            e.activeItem.params.leftTimeText.min = parseInt(i / 6e4 % 60),
            e.activeItem.params.leftTimeText.sec = parseInt(i / 1e3 % 60),
            t(a, 1e3)
    }
}
]);

angular.module("wapeditorApp").controller("CubeCtrl", ["$scope", function (e) {
    if (e.activeItem.params && e.activeItem.params.layout && _.isEmpty(e.activeItem.params.layout))
        for (row = 0; row < 4; row++)
            for (e.activeItem.params.layout[row] = {},
                     col = 0; col < 4; col++)
                e.activeItem.params.layout[row][col] = {
                    cols: 1,
                    rows: 1,
                    isempty: true,
                    imgurl: "",
                    classname: ""
                };
    $(".layout-table").bind("mouseover", function (e) {
        if ("LI" == e.target.tagName) {
            $(".layout-table li").removeClass("selected");
            var t = $(e.target).attr("data-rows")
                , a = $(e.target).attr("data-cols");
            $(".layout-table li").filter(function (e, n) {
                return $(n).attr("data-rows") <= t && $(n).attr("data-cols") <= a
            }).addClass("selected")
        }
    }),
        e.activeItem.params.currentLayout = {},
        e.showSelection = function (t, a) {
            e.activeItem.params.currentPos = {
                row: t,
                col: a
            },
                e.activeItem.params.selection = {};
            var n = -1
                , s = 1;
            for (i = t; i < 4; i++) {
                for (y = 1,
                         e.activeItem.params.selection[s] = {},
                         j = a; j < 4; j++)
                    n >= 0 && n < j || (!_.isUndefined(e.activeItem.params.layout[i][j]) && e.activeItem.params.layout[i][j].isempty ? (e.activeItem.params.selection[s][y] = {
                        rows: s,
                        cols: y
                    },
                        y++) : n = j - 1);
                s++
            }
            return $(".layout-table li").removeClass("selected"),
                e.modalobj = $("#modal-cube-layout").modal({
                    show: true
                }),
                true
        }
        ,
        e.selectLayout = function (t, a, n, s) {
            for (_.isUndefined(n) && (n = 0),
                 _.isUndefined(s) && (s = 0),
                     e.activeItem.params.layout[t][a] = {
                         cols: s,
                         rows: n,
                         isempty: false,
                         imgurl: "",
                         classname: "index-" + e.activeItem.params.showIndex
                     },
                     i = t; i < parseInt(t) + parseInt(n); i++)
                for (j = a; j < parseInt(a) + parseInt(s); j++)
                    t == i && a == j || delete e.activeItem.params.layout[i][j];
            return e.activeItem.params.showIndex++,
                e.modalobj.modal("hide"),
                e.changeItem(t, a),
                true
        }
        ,
        e.addItem = function (t, a) {
            require(["fileUploader"], function (t) {
                t.show(function (t) {
                    e.activeItem.params.currentLayout.id = t.id,
                        e.activeItem.params.currentLayout.imgurl = t.url,
                        e.$apply(),
                        e.changeInnerHeight()
                }, {
                    direct: true,
                    multiple: false
                })
            })
        }
        ,
        e.changeItem = function (t, a) {
            $("#cube-editor td").removeClass("current").filter(function (e, n) {
                return $(n).attr("x") == t && $(n).attr("y") == a
            }).addClass("current"),
                $("#thumb").attr("src", ""),
                e.activeItem.params.currentLayout = e.activeItem.params.layout[t][a]
        }
        ,
        e.removeItem = function () {
            for (var t = 0; t < 4; t++)
                for (var a = 0; a < 4; a++)
                    if (!_.isEmpty(e.activeItem.params.layout[t][a]) && e.activeItem.params.currentLayout.classname == e.activeItem.params.layout[t][a].classname) {
                        if (e.activeItem.params.currentLayout.rows > 1)
                            for (var n = 0; n < e.activeItem.params.currentLayout.rows; n++) {
                                var i = t + n;
                                if (e.activeItem.params.layout[i][a] = {
                                    cols: 1,
                                    rows: 1,
                                    isempty: true,
                                    imgurl: "",
                                    classname: ""
                                },
                                e.activeItem.params.currentLayout.cols > 1)
                                    for (s = 0; s < e.activeItem.params.currentLayout.cols; s++) {
                                        o = a + s;
                                        e.activeItem.params.layout[i][o] = {
                                            cols: 1,
                                            rows: 1,
                                            isempty: true,
                                            imgurl: "",
                                            classname: ""
                                        }
                                    }
                            }
                        else if (e.activeItem.params.layout[t][a] = {
                            cols: 1,
                            rows: 1,
                            isempty: true,
                            imgurl: "",
                            classname: ""
                        },
                        e.activeItem.params.currentLayout.cols > 1)
                            for (var s = 0; s < e.activeItem.params.currentLayout.cols; s++) {
                                var o = a + s;
                                e.activeItem.params.layout[t][o] = {
                                    cols: 1,
                                    rows: 1,
                                    isempty: true,
                                    imgurl: "",
                                    classname: ""
                                }
                            }
                        e.activeItem.params.currentLayout = {}
                    }
        }
}
]);

angular.module("wapeditorApp").controller("DialCtrl", ["$scope", function (e) {
    e.changeItem = function (t) {
        5 == t.id ? (e.activeItem.paddingTop = angular.copy(e.activeItem.params.baseStyle.paddingTop),
            e.activeItem.params.baseStyle.paddingTop = 0) : e.activeItem.params.baseStyle.paddingTop = e.activeItem.params.baseStyle.paddingTop ? e.activeItem.params.baseStyle.paddingTop : e.activeItem.paddingTop,
            index = $.inArray(t, e.activeItem.params.items);
        for (i in e.activeItem.params.items)
            i == index ? (e.activeItem.params.items[i].active = 1,
                e.activeItem.params.baseStyle.color = e.activeItem.params.items[i].color,
                e.activeItem.params.baseStyle.backgroundColor = e.activeItem.params.items[i].discolor) : e.activeItem.params.items[i].active = 0
    }
        ,
        e.addImage = function (t) {
            index = $.inArray(t, e.activeItem.params.items);
            for (i in e.activeItem.params.items)
                i == index && require(["fileUploader"], function (t) {
                    t.show(function (t) {
                        e.saveModulePosition(),
                            e.resetPosition(t),
                            e.activeItem.params.items[i].imgurl = t.url,
                            e.$apply()
                    }, {
                        direct: true,
                        multiple: false
                    })
                })
        }
        ,
        e.resetPosition = function (t) {
            t.width && t.height && (e.activeItem.params.positionStyle.width = t.width,
                e.activeItem.params.positionStyle.height = t.height,
                e.setModulePositionStyle(e.activeItem.params.positionStyle))
        }
}
]);

angular.module("wapeditorApp").controller("GoodCtrl", ["$scope", function (e) {
    e.changeLayout = function (t) {
        switch (t) {
            case "lr":
                e.activeItem.params.layoutstyle = 1;
                break;
            case "ud":
                e.activeItem.params.layoutstyle = 2
        }
    }
}
]);

angular.module("wapeditorApp").controller("HeaderCtrl", ["$scope", function (e) {
    e.addThumb = function (t) {
        require(["fileUploader"], function (a) {
            a.show(function (a) {
                e.activeItem.params[t] = a.url,
                    e.$apply("activeItem")
            }, {
                direct: true,
                multiple: false
            })
        })
    }
        ,
        e.ifCheck = function () {
            e.activeItem.params.bottom_menu = !e.activeItem.params.bottom_menu
        }
}
]);

angular.module("wapeditorApp").controller("ImageCtrl", ["$scope", function (e) {
    e.addItem = function () {
        require(["fileUploader"], function (t) {
            t.show(function (t) {
                e.saveModulePosition(),
                    e.resetPosition(t),
                    e.activeItem.params.items = {
                        id: t.id,
                        imgurl: t.url
                    },
                    e.$apply()
            }, {
                direct: true,
                multiple: false
            })
        })
    }
        ,
        e.changeItem = function (t) {
            require(["fileUploader"], function (t) {
                t.init(function (t) {
                    e.saveModulePosition(),
                        e.resetPosition(t),
                        e.activeItem.params.items.id = t.id,
                        e.activeItem.params.items.imgurl = t.url,
                        e.$apply()
                }, {
                    direct: true,
                    multiple: false
                })
            })
        }
        ,
        e.resetPosition = function (t) {
            t.width && t.height && (w = t.width,
                h = t.height,
                w >= h ? (e.activeItem.params.positionStyle.width = 100,
                    e.activeItem.params.positionStyle.height = e.activeItem.params.positionStyle.width * h / w) : (e.activeItem.params.positionStyle.height = 100,
                    e.activeItem.params.positionStyle.width = e.activeItem.params.positionStyle.height * w / h),
                e.setModulePositionStyle(e.activeItem.params.positionStyle))
        }
}
]);

angular.module("wapeditorApp").controller("LineCtrl", ["$scope", function (e) {
}
]);

angular.module("wapeditorApp").controller("LinkCtrl", ["$scope", "$http", function (e, t) {
    e.pageSize = _.range(0, 30),
        e.addItem = function () {
            e.activeItem.params.items.push({
                title: "",
                url: "",
                type: 1,
                selectCate: {
                    name: "",
                    id: 0
                },
                pageSize: 3
            })
        }
        ,
        e.removeItem = function (t) {
            index = $.inArray(t, e.activeItem.params.items),
                items = _.clone(e.activeItem.params.items),
                e.activeItem.params.items = [];
            for (i in items)
                i != index && e.activeItem.params.items.push(items[i]);
            e.changeInnerHeight()
        }
        ,
        e.showSearchCateList = function (a) {
            e.currentItem = a;
            var n = $(".js-search-cate-keyword").val();
            return n = void 0 === n ? "" : n,
                t.get("./index.php?c=utility&a=link&do=catelist&keyword=" + n).success(function (t, a, n, s) {
                    e.searchCateList = [];
                    var o = t.message.message;
                    for (i in o)
                        e.searchCateList.push({
                            id: o[i].id,
                            name: o[i].name,
                            children: o[i].children
                        });
                    e.modalobj = $("#modal-search-cate-link").modal({
                        show: true
                    })
                }),
                true
        }
        ,
        e.selectCateItem = function (t, a, n) {
            return e.currentItem.selectCate = {
                pid: t,
                cid: a,
                name: n
            },
                e.modalobj.modal("hide"),
                true
        }
}
]);

angular.module("wapeditorApp").controller("NavImgCtrl", ["$scope", function (e) {
    e.changeItem = function (t) {
        require(["fileUploader"], function (a) {
            a.show(function (a) {
                t.id = a.id,
                    t.imgurl = a.url,
                    e.$apply()
            }, {
                direct: true,
                multiple: false
            })
        })
    }
}
]);

angular.module("wapeditorApp").controller("NoticeCtrl", ["$scope", function (e) {
}
]);

angular.module("wapeditorApp").controller("OnlyTextCtrl", ["$scope", function (e) {
}
]);

angular.module("wapeditorApp").controller("PureLinkCtrl", ["$scope", function (e) {
    e.changeItem = function (t) {
        5 == t.id ? (e.activeItem.paddingTop = angular.copy(e.activeItem.params.baseStyle.paddingTop),
            e.activeItem.params.baseStyle.paddingTop = 0) : e.activeItem.params.baseStyle.paddingTop = e.activeItem.params.baseStyle.paddingTop ? e.activeItem.params.baseStyle.paddingTop : e.activeItem.paddingTop,
            index = $.inArray(t, e.activeItem.params.items);
        for (i in e.activeItem.params.items)
            i == index ? (e.activeItem.params.items[i].active = 1,
                e.activeItem.params.baseStyle.color = e.activeItem.params.items[i].color,
                e.activeItem.params.baseStyle.backgroundColor = e.activeItem.params.items[i].discolor) : e.activeItem.params.items[i].active = 0
    }
        ,
        e.addImage = function (t) {
            index = $.inArray(t, e.activeItem.params.items);
            for (i in e.activeItem.params.items)
                i == index && require(["fileUploader"], function (t) {
                    t.show(function (t) {
                        e.saveModulePosition(),
                            e.resetPosition(t),
                            e.activeItem.params.items[i].imgurl = t.url,
                            e.$apply()
                    }, {
                        direct: true,
                        multiple: false
                    })
                })
        }
        ,
        e.resetPosition = function (t) {
            t.width && t.height && (e.activeItem.params.positionStyle.width = t.width,
                e.activeItem.params.positionStyle.height = t.height,
                e.setModulePositionStyle(e.activeItem.params.positionStyle))
        }
}
]);

angular.module("wapeditorApp").controller("RewardCtrl", ["$scope", function (e) {
    e.changeSize = function (t) {
        switch (e.activeItem.params.fontactive = t,
            e.activeItem.params.fonttype = t,
            t) {
            case "big":
                e.activeItem.params.baseStyle.fontSize = "36px";
                break;
            case "middle":
                e.activeItem.params.baseStyle.fontSize = "26px";
                break;
            case "small":
                e.activeItem.params.baseStyle.fontSize = "16px"
        }
    }
}
]);

angular.module("wapeditorApp").controller("RichTextCtrl", ["$scope", "$sce", function (e, t) {
    e.trustAsHtml = function (e, a) {
        return !e && a && (e = a.replace(/\#quot;/g, "&quot;")),
            t.trustAsHtml(e)
    }
}
]);

angular.module("wapeditorApp").controller("ShapeCtrl", ["$scope", "$http", function (e, t) {
    e.page = {
        currentPage: 1,
        numPages: 1,
        toPage: "",
        totalItems: 0,
        pageSize: 18
    },
        e.addItem = function () {
            t({
                method: "GET",
                url: window.sysinfo.siteroot + "web/resource/images/app/shape/shape.json",
                cache: true
            }).success(function (t) {
                e.sysCategoryList = t.sysCategoryList,
                    e.sysImageTag = t.sysImageTag,
                    e.sysImageList = t.sysImageList,
                    e.activeItem.params.catlistActive = 1,
                    e.activeItem.params.imgListActive = 4,
                    e.page.numPages = a(),
                    e.pages = i(),
                    n(1),
                    e.currentImageList = o(e.activeItem.params.imgListActive, 1),
                    $("#shapeModal").modal("show")
            })
        }
        ,
        e.getSysCatAndList = function (t) {
            var s = $.inArray(t, e.sysCategoryList);
            for (var r in e.sysCategoryList)
                if (r == s) {
                    e.sysCategoryList[r].active = true,
                        e.activeItem.params.catlistActive = e.sysCategoryList[r].id;
                    var l = 1;
                    for (var c in e.sysImageTag)
                        e.sysImageTag[c].parentid == e.sysCategoryList[r].id && 1 == l ? (e.activeItem.params.imgListActive = e.sysImageTag[c].id,
                            e.sysImageTag[c].active = true,
                            e.page.numPages = a(),
                            e.pages = i(),
                            n(1),
                            e.currentImageList = o(e.activeItem.params.imgListActive, 1),
                            l++) : e.sysImageTag[c].active = false
                } else
                    e.sysCategoryList[r].active = false
        }
        ,
        e.getSysImgByTag = function (t) {
            var s = $.inArray(t, e.sysImageTag);
            for (var r in e.sysImageTag)
                r == s ? (e.sysImageTag[r].active = true,
                    e.activeItem.params.imgListActive = e.sysImageTag[r].id,
                    e.page.numPages = a(),
                    e.pages = i(),
                    n(1),
                    e.currentImageList = o(e.activeItem.params.imgListActive, 1)) : e.sysImageTag[r].active = false
        }
        ,
        e.selectSvg = function (a, n) {
            var i = a.target.dataset.url;
            i = i.split("../"),
                t({
                    method: "GET",
                    url: window.sysinfo.siteroot + i[1]
                }).success(function (t) {
                    for (var a, n = $(t), i = n.length, s = 0; i > s; s++)
                        if ("svg" == n[s].tagName) {
                            a = n[s];
                            break
                        }
                    e.saveModulePosition();
                    var o = parseFloat($(a).attr("width"))
                        , r = parseFloat($(a).attr("height"));
                    o >= r ? e.activeItem.params.positionStyle.height = e.activeItem.params.positionStyle.width * r / o : e.activeItem.params.positionStyle.width = e.activeItem.params.positionStyle.height * o / r,
                        e.setModulePositionStyle(e.activeItem.params.positionStyle),
                        e.activeItem.params.svgValue = t,
                        $("#shapeModal").modal("hide")
                })
        }
        ,
        e.selectPage = function (t) {
            (t = parseInt(t)) > 0 && t <= e.page.numPages && (e.page.currentPage = t,
                e.pages = i(),
                n(t),
                e.currentImageList = o(e.activeItem.params.imgListActive, t))
        }
        ,
        e.getImgByPage = function () {
            var t = parseInt(e.page.toPage);
            t > 0 && t <= e.page.numPages && (e.page.currentPage = t,
                e.pages = i(),
                n(t),
                e.currentImageList = o(e.activeItem.params.imgListActive, t))
        }
    ;
    var a = function () {
        var t = s(e.activeItem.params.imgListActive);
        return Math.ceil(t / e.page.pageSize)
    }
        , n = function (t) {
        for (var a in e.pages)
            t == e.pages[a].number ? e.pages[a].active = true : e.pages[a].active = false
    }
        , i = function () {
        var t = [];
        if (e.page.numPages <= 5)
            for (i = 1; i <= e.page.numPages; i++)
                e.page.currentPage == i ? t.push({
                    number: i,
                    active: true
                }) : t.push({
                    number: i,
                    active: false
                });
        else {
            var a = e.page.currentPage - 2
                , n = e.page.currentPage + 2;
            if (a > 0)
                if (n <= e.page.numPages)
                    t = [{
                        number: a,
                        active: false
                    }, {
                        number: e.page.currentPage - 1,
                        active: false
                    }, {
                        number: e.page.currentPage,
                        active: true
                    }, {
                        number: e.page.currentPage + 1,
                        active: false
                    }, {
                        number: n,
                        active: false
                    }];
                else
                    for (i = e.page.numPages - 4; i <= e.page.numPages; i++)
                        i == e.page.currentPage ? t.push({
                            number: i,
                            active: true
                        }) : t.push({
                            number: i,
                            active: false
                        });
            else
                for (var i = 1; i <= 5; i++)
                    e.page.currentPage == i ? t.push({
                        number: i,
                        active: true
                    }) : t.push({
                        number: i,
                        active: false
                    })
        }
        return t
    }
        , s = function (t) {
        var a = 0;
        for (var n in e.sysImageList)
            t == e.sysImageList[n].parentid && a++;
        return a
    }
        , o = function (t, a) {
        var n = []
            , i = 0
            , s = ((a = parseInt(a) > 0 ? parseInt(a) : 1) - 1) * e.page.pageSize
            , o = a * e.page.pageSize;
        for (var r in e.sysImageList)
            t == e.sysImageList[r].parentid && (i >= s && i < o && n.push(e.sysImageList[r]),
                i++);
        return n
    }
}
]);

angular.module("wapeditorApp").controller("TextNavCtrl", ["$scope", function (e) {
    e.addItem = function () {
        e.activeItem.params.items.push({
            title: "",
            url: ""
        }),
            e.changeInnerHeight()
    }
        ,
        e.removeItem = function (t) {
            index = $.inArray(t, e.activeItem.params.items),
                items = _.clone(e.activeItem.params.items),
                e.activeItem.params.items = [];
            for (i in items)
                i != index && e.activeItem.params.items.push(items[i]);
            e.changeInnerHeight()
        }
}
]);

angular.module("wapeditorApp").controller("TitleCtrl", ["$scope", function (e) {
    e.changeNavEnable = function (t) {
        e.activeItem.params.tradition.nav.enable = t
    }
}
]);

angular.module("wapeditorApp").controller("WhiteCtrl", ["$scope", function (e) {
}
]);

angular.module("accountApp", ["we7app", "infinite-scroll"]);

angular.module("accountApp").controller("AccountDisplay", ["$scope", "$http", "$timeout", "config", function (e, t, a, n) {
    e.accountList = n.accountList,
        e.links = n.links,
        e.alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "#", "全部"],
        e.activeLetter = "",
        e.searchShow = n.accountTotal > n.pagesize,
        e.searchModule = function (t) {
            e.activeLetter = t,
                a(function () {
                    $(".button").click()
                }, 500)
        }
        ,
        e.stick = function (a) {
            var n = parseInt(a);
            t.post(e.links.rank, {
                id: n
            }).success(function (e) {
                0 == e.message.errno && location.reload()
            })
        }
        ,
        e.currentPage = 1,
        e.busy = false,
        e.loadMore = function () {
            if (e.busy)
                return false;
            e.currentPage++,
                e.busy = true,
                t.post(n.scrollUrl, {
                    page: e.currentPage,
                    keyword: n.keyword,
                    letter: n.letter
                }).success(function (t) {
                    if (e.busy = false,
                    0 == t.message.errno) {
                        e.searchShow = true,
                        0 == t.message.message.length && 2 == e.currentPage && (e.searchShow = false);
                        for (var a in t.message.message)
                            e.accountList.push(t.message.message[a])
                    }
                    e.busy = false
                })
        }
}
]);

angular.module("accountApp").controller("SystemAccountDisplay", ["$scope", "config", function ($scope, config) {
    $scope.lists = config.lists;
    $scope.links = config.links;
}
]);

angular.module("accountApp").controller("SystemAccountRecycle", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.del_accounts = a.del_accounts;
    $scope.links = a.links;

    $scope.delete = function (acid, uniacid) {
        if (!confirm("此为永久删除，删除后不可找回, 进入后台任务删除！确认吗？"))
            return false;
        $http.post(a.links.postDel, {
            acid: acid,
            uniacid: uniacid
        }).success(function (e) {
            0 == e.message.errno ? util.message(e.message.message, e.redirect, "success") : util.message(e.message.message, e.redirect, "error")
        })
    }
}
]);

angular.module("accountApp").controller("AccountPostStepOne", ["$scope", "config", function (scope, config) {
}
]);

angular.module("accountApp").controller("AccountPostStepTwo", ["$scope", "config", function (scope, config) {
    scope.account = {}; // 控制器实例化时初始化account模型对象
    scope.uploadMultiImage = function (attr) {
        require(["fileUploader"], function (fileuploader) {
            fileuploader.init(function (item) {
                scope.account[attr] = item.url;
                scope.$apply(scope.account) // 传播Model的变化
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    scope.delMultiImage = function (attr) {
        scope.account[attr] = ""
    }
}
]);

angular.module("accountApp").controller("AccountPostStepThree", ["$scope", "$http", "config", "AccountAppCommon", function ($scope, $http, a, AccountAppCommon) {
    $scope.notify = a.notify;
    $scope.owner = a.owner;
    $scope.links = a.links;

    /**
     * 选择主管理员
     * @param $event
     */
    $scope.selectOwner = function ($event) {
        $event.preventDefault();
        AccountAppCommon.selectOwner();
    };

    /**
     * 修改管理员用户权限组
     */
    $scope.changeGroup = function () {
        if (!$('input[name="uid"]').val()) {
            $("#groupid").val(0);
            util.message("请先选择管理员");
            return false;
        }
        // 更新对应的套餐组
        AccountAppCommon.update_package_list($("#groupid").find("option:selected").data("package"))
    };

    $scope.changeText = function (e) {
        var t = $(e)[0].target.text;
        $(e)[0].target.text = "展开" == t ? "收起" : "展开"
    };

    $scope.addPermission = AccountAppCommon.addPermission
}
]);

angular.module("accountApp").controller("AccountPostStepFour", ["$scope", "config", "AccountAppCommon", function ($scope, config, a) {
    $scope.account = config.account;
    $scope.links = config.links;
    $scope.url = config.links.siteroot + "api.php?id=" + $scope.account.acid;

    $scope.success = function (e) {
        var e = parseInt(e),
            t = $('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>');
        a.copySuccess(e, t);
    }
}
]);

angular.module("accountApp").controller("AccountManageBase", ["$scope", "$http", "config", "AccountAppCommon", function ($scope, $http, a, AccountAppCommon) {
    $scope.account = a.account;
    $scope.uniaccount = a.uniaccount;
    $scope.authstate = a.authstate;
    $scope.authurl = a.authurl;
    $scope.founder = a.founder;
    $scope.owner = a.owner;
    $scope.other = {
        headimgsrc: a.headimgsrc,
        qrcodeimgsrc: a.qrcodeimgsrc,
        serviceUrl: a.links.siteroot + "api.php?id=" + $scope.account.acid,
        siteurl: a.links.siteroot
    };

    $scope.changeImage = function (field, uniacid) {
        if ("headimgsrc" == field || "qrcodeimgsrc" == field) {
            require(["fileUploader"], function (fileUploader) {
                fileUploader.init(function (a) {
                    $scope.other[field] = a.url;
                    $scope.$apply($scope.other);
                    $scope.httpChange(field);
                }, {
                    direct: true,
                    multiple: false,
                    uniacid: uniacid
                })
            });
        }
    };

    $scope.success = function (e) {
        var e = parseInt(e),
            t = $('<a href="javascript:;" class="btn btn-success btn-sm we7-margin-left-sm"><i class="fa fa-check-circle"></i> 复制成功</a>');
        AccountAppCommon.copySuccess(e, t);
    };

    $scope.editInfo = function (field, fieldVaule) {
        $scope.middleAccount = {};
        $scope.middleAccount[field] = fieldVaule
    };

    $scope.httpChange = function (field, s) {
        switch (field) {
            case "headimgsrc":
            case "qrcodeimgsrc":
                $http.post(a.links.basePost, {
                    type: field,
                    imgsrc: $scope.other[field]
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $(".wechat-img").attr("src", $scope.other[field]);
                        util.message("修改成功！", "", "success");
                    } else {
                        -1 == t.message.errno && util.message(t.message.message, t.redirect, "error");
                        1 == t.message.errno && util.message(t.message.message, "", "error");
                        40035 == t.message.errno && util.message(t.message.message, "", "error");
                    }
                });
                break;
            case "name":
            case "account":
            case "original":
            case "level":
            case "key":
            case "secret":
                $("#" + field).modal("hide");
                if (0 == $scope.middleAccount[field].length) {
                    util.message("不可为空！", "", "error");
                    return false;
                }
                $http.post(a.links.basePost, {
                    type: field,
                    request_data: $scope.middleAccount[field]
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.account[field] = $scope.middleAccount[field];
                        util.message("修改成功！", "", "success");
                    } else {
                        1 == t.message.errno && util.message(t.message.message, "", "error");
                        40035 == t.message.errno && util.message(t.message.message, "", "error");
                    }
                });
                break;
            case "jointype":
                $("#jointype").modal("hide");
                1 == $scope.middleAccount.type && $http.post(a.links.basePost, {
                    type: "jointype",
                    request_data: 1
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.account[field] = $scope.middleAccount[field];
                        $scope.account.type = 1;
                        util.message("修改成功！", "", "success");
                    } else {
                        1 == t.message.errno && util.message(t.message.message, "", "error");
                        40035 == t.message.errno && util.message(t.message.message, "", "error");
                    }
                });
                if (3 == $scope.middleAccount.type) {
                    if (1 == a.authurl.errno) {
                        util.message(a.authurl.url);
                    } else {
                        if (!confirm("必须通过公众号授权登录页面进行授权接入，是否跳转至授权页面...")) return false;
                        location.href = a.authurl.url;
                    }
                }
                break;
            case "token":
                $("#token").modal("hide");
                if (void 0 === s) {
                    if (!confirm("确定要生成新的吗？")) return false;
                    var o = AccountAppCommon.tokenGen();
                } else {
                    if (0 == (o = $("#newtoken").val()).length) {
                        util.message("不可为空！");
                        return false;
                    }
                    if (!(l = new RegExp(/^[A-Za-z0-9]{3,32}$/)).test(o)) {
                        util.message("必须为英文或者数字，长度为3到32个字符！");
                        return false;
                    }
                }
                $http.post(a.links.basePost, {
                    type: field,
                    request_data: o
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.account[field] = o;
                        util.message("修改成功！");
                    } else {
                        -1 == t.message.errno && util.message(t.message.message, t.redirect, "error");
                        1 == t.message.errno && util.message(t.message.message, "", "error");
                        40035 == t.message.errno && util.message(t.message.message, "", "error");
                    }
                });
                break;
            case "encodingaeskey":
                $("#encodingaeskey").modal("hide");
                if (void 0 === s) {
                    if (!confirm("确定要生成新的吗？")) return false;
                    var r = AccountAppCommon.encodingAESKeyGen();
                } else {
                    if (0 == (r = $("#newencodingaeskey").val()).length) {
                        util.message("不可为空！");
                        return false;
                    }
                    var l = new RegExp(/^[A-Za-z0-9]{43}$/);
                    if (!l.test(r)) {
                        util.message("必须为英文或者数字，长度为43个字符！");
                        return false;
                    }
                }
                $http.post(a.links.basePost, {
                    type: field,
                    request_data: r
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.account[field] = r;
                        util.message("修改成功！");
                    } else {
                        -1 == t.message.errno && util.message(t.message.message, t.redirect, "error");
                        1 == t.message.errno && util.message(t.message.message, "", "error");
                        40035 == t.message.errno && util.message(t.message.message, "", "error");
                    }
                });
                break;
            case "highest_visit":
                "number" == typeof $scope.middleAccount.highest_visit && $http.post(a.links.basePost, {
                    type: field,
                    request_data: $scope.middleAccount.highest_visit
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.account[field] = $scope.middleAccount.highest_visit;
                        util.message("修改成功！");
                    } else {
                        util.message(t.message.message, "", "error");
                    }
                });
                break;
            case "endtime":
                var c = $('[name="endtime"]').val();
                $http.post(a.links.basePost, {
                    type: "endtime",
                    endtype: $scope.middleAccount.endtype,
                    endtime: c
                }).success(function (t) {
                    if (1 == t.message.errno) {
                        util.message(t.message.message, "", "info");
                    } else {
                        $scope.account.endtype = $scope.middleAccount.endtype;
                        $scope.account.end = 2 == $scope.account.endtype ? c : "永久";
                        util.message("修改成功！")
                    }
                })
        }
    }
}
]);

angular.module("accountApp").controller("AccountMangeModulesTpl", ["$scope", "$http", "config", function ($scope, $http, a) {
    function n() {
        var t = "#content-templates";
        0 == $scope.jurindex && (t = "#content-modules");
        $("#jurisdiction-add " + t + " .item").size() != $("#jurisdiction-add " + t + " .item.active").size() ? $scope.allmodule = false : $scope.allmodule = true;
    }

    $scope.owner = a.owner;
    $scope.modules_tpl = a.modules_tpl;
    $scope.packagelist = a.packagelist;
    $scope.extend = a.extend;
    $scope.allmodule = false;
    $scope.jurindex = 0;

    $scope.changeText = function (e) {
        var t = $(e)[0].target.text;
        $(e)[0].target.text = "展开" == t ? "收起" : "展开"
    };

    $scope.changeGroup = function () {
        for (var e = $('input[name="package[]"]'), n = [], i = 0; i < e.length; i++)
            $(e[i]).is(":checked") && n.push($(e[i]).val());
        $http.post(a.links.postModulesTpl, {
            type: "group",
            groupdata: n
        }).success(function (e) {
            0 == e.message.errno ? location.reload() : 40035 == e.message.errno && util.message("参数错误！")
        })
    };

    $scope.tabChange = function (index) {
        $scope.jurindex = index;
        n();
    };

    $scope.itemclick = function () {
        n();
    };

    $scope.allmodulechange = function (allmodule) {
        var a = "#content-templates";
        0 == $scope.jurindex && (a = "#content-modules");
        allmodule ? $("#jurisdiction-add " + a + " .item").addClass("active") : $("#jurisdiction-add " + a + " .item").removeClass("active");
    };

    $scope.addExtend = function () {
        var e = ""
            , n = ""
            , i = []
            , s = [];
        $("#jurisdiction-add #content-modules").find(".active").each(function () {
            e += '<div class="col-sm-3 text-left we7-margin-bottom"><a href="javascript:;" class="label label-info">' + $(this).attr("data-title") + "</a></div>";
            i.push($(this).attr("data-name"));
        });
        $("#jurisdiction-add #content-templates").find(".active").each(function () {
            n += '<div class="col-sm-3 text-left we7-margin-bottom"><a href="javascript:;" class="label label-info">' + $(this).attr("data-title") + "</a></div>";
            s.push($(this).attr("data-id"));
        });
        e || n ? $(".account-package-extra").show() : $(".account-package-extra").hide();
        $(".account-package-extra .js-extra-modules").append(e);
        $(".account-package-extra .js-extra-templates").append(n);
        $("#jurisdiction-add").modal("hide");
        $http.post(a.links.postModulesTpl, {
            type: "extend",
            module: i,
            tpl: s
        }).success(function (e) {
            0 == e.message.errno ? location.reload() : 40035 == e.message.errno && util.message("参数错误！");
        })
    };

    $scope.editEndTime = function (expire_time, order_id) {
        $scope.middleTime = expire_time;
        $scope.middleGoodsId = parseInt(order_id);
        $("#endtime").modal("show");
        $('input[name="endtime"]').val(expire_time);
    };

    $scope.httpChange = function () {
        var n = $('input[name="endtime"]').val();
        $http.post(a.links.postModulesTpl, {
            type: "store_endtime",
            new_time: n,
            order_id: $scope.middleGoodsId
        }).success(function (e) {
            0 == e.message.errno && util.message(e.message.message, e.redirect);
        })
    }
}
]);

angular.module("accountApp").controller("AccountManageUsers", ["$scope", "$http", "config", function (scope, http, config) {
    scope.permissions = config.permissions;
    scope.state = config.state;

    scope.setPermission = function (uid) {
        var e = parseInt(uid);
        location.href = config.links.setPermission + "&uid=" + e;
    };

    scope.delPermission = function (uid) {
        var e = parseInt(uid);
        if (!confirm("确认删除当前选择的用户?"))
            return false;
        http.post(config.links.delete, {
            uid: e
        }).success(function (e) {
            util.message(e.message, e.redirect);
        });
    };

    scope.addOwner = function () {
        $("#owner-modal").modal("hide");
        var username = $.trim($("#add-owner-username").val());
        scope.requestPost(3, username);
    };

    /**
     * 添加副创始人
     */
    scope.addViceFounder = function () {
        $("#user-vice-modal").modal("hide");
        var username = $.trim($("#add-vice-username").val());
        scope.requestPost(4, username);
    };

    scope.changeOwner = function (username) {
        $("#owner-modal").modal("show");
        $("#add-owner-username").val(username);
    };

    scope.changeVice = function (username) {
        $("#user-vice-modal").modal("show");
        $("#add-vice-username").val(username);
    };

    scope.addUsername = function () {
        $("#user-modal").modal("hide");
        var username = $.trim($("#add-username").val());
        addtype = $(".addtype2").is(":checked");  // 管理员还是操作员
        scope.requestPost(addtype ? 2 : 1, username);
    };

    scope.requestPost = function (addtype, username) {
        if (!username) {
            util.message("请输入用户名.");
            return false;
        }
        var type = parseInt(addtype);
        http.post(config.links.addUser, {
            username: username,
            addtype: type,
            account_type: config.accountType
        }).success(function (e) {
            if (0 == e.message.errno) {
                location.reload();
            } else {
                -1 == e.message.errno && util.message("用户/创始人不存在或已被删除！");
                1 == e.message.errno && util.message("添加失败，请稍候重试！");
                2 == e.message.errno && util.message(username + "已经是该公众号的操作员或管理员，请勿重复添加！");
                3 == e.message.errno && util.message("用户未通过审核，请联系网站管理员审核通过后再行添加！");
                4 == e.message.errno && util.message("管理员不可操作其他管理员！");
                5 != e.message.errno && 6 != e.message.errno || util.message(e.message.message);
            }
        });
    };
}
]);

angular.module("accountApp").controller("AccountManageSms", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.notify = a.notify;
    $scope.signatures = a.signatures;

    $scope.editSms = function (field, fieldVaule) {
        $scope.middleSms = {};
        $scope.middleSms[field] = fieldVaule;
    };

    $scope.httpChange = function (field) {
        switch (field) {
            case "balance":
                $("#balance").modal("hide");
                $http.post(a.links.postSms, {
                    type: field,
                    balance: $scope.middleSms[field]
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.notify.sms[field] = t.message.message.num;
                        util.message("修改成功！");
                    } else {
                        -1 == t.message.errno && util.message("您现有短信数量为0，请联系服务商购买短信!");
                        1 == t.message.errno && util.message("修改失败！请稍候重试！");
                    }
                });
                break;
            case "signature":
                $("#signature").modal("hide");
                $http.post(a.links.postSms, {
                    type: field,
                    signature: $scope.middleSms[field]
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.notify.sms[field] = $scope.middleSms[field];
                        util.message("设置成功！");
                    } else {
                        40035 == t.message.errno && util.message("参数错误！");
                        1 == t.message.errno && util.message("修改失败！请稍候重试！");
                    }
                })
        }
    }
}
]);

angular.module("accountApp").controller("SystemPlatform", ["$scope", "$http", "config", "AccountAppCommon", function ($scope, $http, a, AccountAppCommon) {
    $scope.platform = a.platform;
    $scope.url = a.url;

    $scope.success = function (id) {
        var domId = parseInt(id),
            t = $('<span class="label label-success" style="btn btn-success we7-margin-left-sm"><i class="fa fa-check-circle"></i> 复制成功</span>');
        AccountAppCommon.copySuccess(domId, t);
    };

    $scope.httpChange = function (field, s) {
        switch (field) {
            case "authstate":
                var authstate = 1 == $scope.platform.authstate ? 0 : 1;
                $http.post(a.links.platformPost, {
                    authstate: authstate
                }).success(function (t) {
                    0 == t.message.errno ? ($scope.platform.authstate = authstate,
                        util.message("修改成功！", "", "success")) : 1 == t.message.errno && util.message("修改失败，请稍后重试！")
                });
                break;
            case "appid":
                $("#AppID").modal("hide");
                var r = $("#newappid").val();
                $http.post(a.links.platformPost, {
                    appid: r
                }).success(function (t) {
                    0 == t.message.errno ? ($scope.platform.appid = r,
                        util.message("修改成功！")) : 1 == t.message.errno && util.message("修改失败，请稍后重试！")
                });
                break;
            case "appsecret":
                $("#AppSecret").modal("hide");
                var l = $("#newappsecret").val();
                $http.post(a.links.platformPost, {
                    appsecret: l
                }).success(function (t) {
                    0 == t.message.errno ? ($scope.platform.appsecret = l,
                        util.message("修改成功！")) : 1 == t.message.errno && util.message("修改失败，请稍后重试！")
                });
                break;
            case "token":
                if (void 0 === s) {
                    if (!confirm("确定要生成新的吗？"))
                        return false;
                    var c = AccountAppCommon.tokenGen()
                } else {
                    if (0 == (c = $("#newtoken").val()).length)
                        return util.message("不可为空！"),
                            false;
                    if (!(d = new RegExp(/^[A-Za-z0-9]{3,32}$/)).test(c))
                        return util.message("必须为英文或者数字，长度为3到32个字符！"),
                            false
                }
                $http.post(a.links.platformPost, {
                    token: c
                }).success(function (t) {
                    0 == t.message.errno ? ($scope.platform.token = c,
                        util.message("修改成功！")) : 1 == t.message.errno && util.message("修改失败，请稍后重试！")
                });
                break;
            case "encodingaeskey":
                if (void 0 === s) {
                    if (!confirm("确定要生成新的吗？"))
                        return false;
                    var u = AccountAppCommon.encodingAESKeyGen();
                } else {
                    if (0 == (u = $("#newencodingaeskey").val()).length) {
                        util.message("不可为空！");
                        return false;
                    }
                    var d = new RegExp(/^[A-Za-z0-9]{43}$/);
                    if (!d.test(u)) {
                        util.message("必须为英文或者数字，长度为43个字符！");
                        return false;
                    }
                }
                $http.post(a.links.platformPost, {
                    encodingaeskey: u
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.platform.encodingaeskey = u;
                        util.message("修改成功！");
                    } else {
                        1 == t.message.errno && util.message("修改失败，请稍后重试！");
                    }
                })
        }
    }
}
]);

angular.module("accountApp").controller("AccountManageWxappCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.wxapp_modules = a.wxapp_modules,
        e.current_module_info = a.current_module_info,
        e.showWxModules = function () {
            $("#module_wxapp").modal("show")
        }
        ,
        e.selectedWxModule = function (t, a) {
            var n = $(a.target).parents(".select-module-wxapp");
            n.find("span").removeClass("hide"),
                n.siblings().find("span").addClass("hide"),
                e.newWxModule = t
        }
        ,
        e.addWxModules = function () {
            t.post(a.links.editmodule, {
                module: e.newWxModule,
                account_type: 4
            }).success(function (e) {
                $("#module_wxapp").modal("hide"),
                    0 == e.message.errno ? location.reload() : util.message(e.message.message)
            })
        }
        ,
        e.delWxModule = function () {
            t.post(a.links.delmodule, {
                module: e.current_module_info,
                account_type: 4
            }).success(function (e) {
                0 == e.message.errno ? location.reload() : util.message(e.message.message)
            })
        }
}
]);

angular.module("accountApp").service("AccountAppCommon", ["$rootScope", "$http", "config", function ($rootScope, $http, a) {
    var AccountAppCommon = {};

    /**
     * 给统一帐号添加模块和模板权限
     */
    AccountAppCommon.addPermission = function () {
        var e = ""
            , t = "";
        // 给表单添加字段
        $("#jurisdiction-add #content-modules").find(".btn-primary").each(function () {
            e += '<span class="label label-info" style="margin-right:3px;">' + $(this).attr("data-title") + '</span><input type="hidden" name="extra[modules][]" value="' + $(this).attr("data-name") + '" />'
        });
        $("#jurisdiction-add #content-templates").find(".btn-primary").each(function () {
            t += '<span class="label label-info" style="margin-right:3px;">' + $(this).attr("data-title") + '</span><input type="hidden" name="extra[templates][]" value="' + $(this).attr("data-name") + '" />'
        });
        e || t ? $(".account-package-extra").show() : $(".account-package-extra").hide();
        $(".account-package-extra .js-extra-modules").html(e);
        $(".account-package-extra .js-extra-templates").html(t);
        $("#jurisdiction-add").modal("hide");
    };

    AccountAppCommon.update_package_list = function (packages) {
        $('input[name="package[]"]').prop("checked", false);
        $('input[name="package[]"]').prop("disabled", false);
        for (i in packages) {
            $('input[name="package[]"][value="' + packages[i] + '"]').prop("checked", true);
            $('input[name="package[]"][value="' + packages[i] + '"]').prop("disabled", true); // 不能修改
        }
    };

    AccountAppCommon.selectOwner = function () {
        var uids = [];
        require(["biz"], function (biz) {
            biz.user.browser(uids, function (uid) {
                $http.post(a.links.userinfo, {
                    uid: uid
                }).success(function (response) {
                    response.message.errno && util.message(response.message.message);
                    $("#manager").val(response.message.message.uid);
                    $("#showname").val(response.message.message.username);
                    $("#groupid").val(response.message.message.group.id); //设置用户组id
                    $(".account-package-extra").show();
                    AccountAppCommon.update_package_list(response.message.message.package); // 更新用户组具有的套餐
                })
            }, {
                mode: "invisible",
                direct: true
            })
        })
    };

    AccountAppCommon.copySuccess = function (id, html) {
        var e = parseInt(id)
            , t = html
            , a = $("#copy-" + e).next().html();

        if (!a || a.indexOf('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>') < 0) {
            $("#copy-" + e).after(t);
        }
        setTimeout(function () {
            t.remove()
        }, 2e3);
    };

    AccountAppCommon.tokenGen = function () {
        for (var e = "", t = 0; t < 32; t++)
            e += "abcdefghijklmnopqrstuvwxyz0123456789"[parseInt(32 * Math.random())];
        return e;
    };

    AccountAppCommon.encodingAESKeyGen = function () {
        for (var e = "", t = 0; t < 43; t++)
            e += "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"[parseInt(61 * Math.random() + 1)];
        return e;
    };

    return AccountAppCommon;
}
]);

angular.module("we7codeAppjsonApp", ["we7app"]);

angular.module("we7codeAppjsonApp").controller("code_appjson_ctrl", ["$scope", "$q", "config", "$http", function (e, t, a, n) {
    var i = a.default_appjson
        , s = a.save_url
        , o = a.default_url
        , r = a.convert_img_url;
    angular.isString(i) && (i = JSON.parse(i)),
    i || (i = {
        pages: {},
        windows: {}
    });
    var l = i.hasOwnProperty("tabBar") ? i.tabBar : {
        list: []
    };
    l && !l.list && (l.list = []),
    l && !l.isSystemTabBar && (l.isSystemTabBar = 1),
    i && i.windows && i.windows.navigationBarTitleText && i.windows.navigationBarTitleText.indexOf("微擎") && (i.windows.navigationBarTitleText = "小程序"),
        e.pages = i.pages,
        e.window = i.window,
        e.tabBar = l,
        $("body").on("click", ".js-image", function () {
            var t = $(this).data("index")
                , i = "0" == $(this).data("selected") ? "iconPath" : "selectedIconPath";
            util.image({}, function (s) {
                n.post(r, {
                    version_id: a.version_id,
                    att_id: s.id
                }).then(function (a) {
                    0 == a.data.message.errno && (e.tabBar.list[t][i] = a.data.message.message)
                })
            })
        }),
        e.toJson = function () {
            return {
                pages: e.pages,
                window: e.window,
                tabBar: e.tabBar
            }
        }
        ,
        e.iconPath = function (e) {
            return e.iconPath
        }
        ,
        e.save = function (t) {
            var i = e.toJson();
            n.post(s, {
                json: i,
                version_id: a.version_id
            }).then(function () {
                alert("保存成功")
            })
        }
        ,
        e.add = function () {
            e.tabBar.list.push({
                iconSelectedPath: "",
                iconPath: "",
                pagePath: e.pages[0],
                text: ""
            })
        }
        ,
        e.del = function (t) {
            e.tabBar.list.splice(t, 1)
        }
        ,
        e.default = function () {
            n.post(o, {
                version_id: a.version_id
            }).then(function () {
                alert("保存成功"),
                    window.location.reload()
            })
        }
        ,
        util.colorpicker(".js-color", function () {
        })
}
]);

angular.module("replyFormApp", ["we7app"]);

angular.module("replyFormApp").controller("KeywordReply", ["$scope", "$http", "config", function ($scope, $http, a) {

    $scope.reply = {
        advanceTrigger: false,
        status: true,
        showAdvance: false,
        keyword: {
            exact: "",
            indistinct: "",
            contain: "",
            regexp: ""
        },
        entry: a.replydata
    };

    if ($scope.reply.entry) {
        $scope.reply.entry.istop = $scope.reply.entry.displayorder >= 255 ? 1 : 0;
        $scope.reply.status = 1 == $scope.reply.entry.status;
        $scope.reply.entry.keywords || ($scope.reply.entry.keywords = []);
    } else {
        $scope.reply.entry = {
            istop: 0,
            displayorder: "",
            id: "",
            keywords: [],
            module: "",
            name: "",
            status: 1,
            uniacid: a.uniacid
        };
    }

    $scope.changeStatus = function () {
        $scope.reply.status = !$scope.reply.status;
    };

    $scope.changeKeywordType = function (type) {
        var t = parseInt(type);
        $scope.newKeyword = {
            type: t,
            content: ""
        };
        $("#keyword-indistinct").next().text("");
        $("#keyword-exact").next().text("");
        $("#keyword-regexp").next().text("");
    };

    $scope.showAddkeywordModal = function () {
        $("#addkeywordModal").modal("show");
        $scope.newKeyword = {
            type: 1,
            content: ""
        };
    };

    $scope.addNewKeyword = function () {
        $http.post("./index.php?c=platform&a=reply&do=post", {
            keyword: $scope.newKeyword.content
        }).success(function (t) {
            if (-2 == t.message.errno) {
                util.message(t.message.message);
                return false;
            }
            if (0 == t.message.errno) {
                $("#addkeywordModal").modal("hide");
                var a = parseInt($scope.newKeyword.type);
                switch (a) {
                    case 1:
                    case 2:
                        var n = $scope.newKeyword.content.replace(/，/g, ",").split(",");
                        angular.forEach(n, function (t) {
                            "" != t && $scope.reply.entry.keywords.push({
                                type: a,
                                content: t
                            })
                        });
                        break;
                    case 3:
                        $scope.reply.entry.keywords.push($scope.newKeyword)
                }
            }
        })
    };

    $scope.delKeyword = function (keyword) {
        var a = _.findIndex($scope.reply.entry.keywords, keyword);
        $scope.reply.entry.keywords = _.without($scope.reply.entry.keywords, $scope.reply.entry.keywords[a])
    };

    $scope.changeTriggerType = function () {
        "exact" == $scope.reply.advanceTrigger && ($scope.reply.advanceTrigger = false),
        "indistinct" == $scope.reply.advanceTrigger && ($scope.reply.advanceTrigger = true)
    };

    // 展开高级设置
    $scope.changeShowAdvance = function () {
        $scope.reply.showAdvance = !$scope.reply.showAdvance
    };

    $.isFunction(window.initReplyController) && window.initReplyController($scope, $http);

    $scope.submitForm = function () {
        if (0 == $scope.reply.entry.keywords.length) {
            util.message("请输入有效的触发关键字.");
            return false;
        }
        var a = angular.toJson($scope.reply.entry.keywords);
        $(':hidden[name="keywords"]').val(a);
        if ($.isFunction(window.validateReplyForm)) {
            if (!window.validateReplyForm($("#reply-form"), $, _, util, $scope, $http))
                return false;
            $(".reply-form-submit").click()
        } else
            $(".reply-form-submit").click()
    };

    // 显示emoji表情
    $scope.initEmotion = function (t) {
        util.emotion($("#emoji-exact"), $("#keyword-exact"), function (t, a, n) {
            $scope.newKeyword.content += t;
            $scope.$apply($scope.newKeyword);
        });
        util.emotion($("#emoji-indistinct"), $("#keyword-indistinct"), function (t, a, n) {
            $scope.newKeyword.content += t;
            $scope.$apply($scope.newKeyword);
        });
    };

    /**
     * 检查关键字
     * @param $event
     * @returns {boolean}
     */
    $scope.checkKeyWord = function ($event) {
        var n = $($event.target)
            , i = n.val().trim();
        if ("" == i) {
            n.next().text("");
            return false;
        }
        $http.post("./index.php?c=platform&a=reply&do=post", {
            keyword: i
        }).success(function (e) {
            if (0 != e.message.errno) {
                if (-2 == e.message.errno)
                    return n.next().html(e.message.message),
                        false;
                var t = $('input[name="rid"]').val()
                    , i = e.message.message
                    , s = "";
                for (rule in i)
                    if (t != i[rule].id) {
                        var o = i[rule].name ? i[rule].name : i[rule].id;
                        s += "<a href='" + a.links.postUrl + "&rid=" + i[rule].id + "' target='_blank'><strong class='text-danger'>" + o + "</strong></a>&nbsp;"
                    }
                "" != s && n.next().html("该关键字已存在于 " + s + " 规则中.")
            } else
                n.next().text("")
        })
    }
}
]);

angular.module("replyFormApp").controller("ApplyReply", ["$scope", function ($scope) {
    $scope.alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];
    $scope.activeLetter = "";

    $scope.searchModule = function (letter) {
        $scope.activeLetter = letter
    }
}
]);

angular.module("replyFormApp").controller("KeywordDisplay", ["$scope", "$http", function ($scope, $http) {
    $scope.changeStatus = function (e) {
        var a = $("#key-" + e).attr("class");
        $http.post("./index.php?c=platform&a=reply&do=change_keyword_status", {
            id: e
        }).success(function (t) {
            if (0 == t.message.errno) {
                a.match("switchOn") ? $("#key-" + e).removeClass("switchOn") : $("#key-" + e).addClass("switchOn");
                util.message("修改成功！");
            } else {
                util.message("网络错误，请稍候重试");
            }
        }).error(function (e) {
            util.message("网络错误，请稍候重试")
        })
    }
}
]);

angular.module("replyFormApp").controller("serviceDisplay", ["$scope", "config", "$http", function ($scope, config, a) {
    $scope.changeStatusUrl = config.url;
    $scope.service = config.service;

    $scope.changeStatus = function (id) {
        var t = file = id;
        a.post($scope.changeStatusUrl, {
            rid: t,
            file: file,
            m: "service"
        }).success(function (a) {
            if (0 == a.message.errno) {
                $scope.service[t].switch = "" == $scope.service[t].switch ? "checked" : "";
                location.reload();
            } else {
                util.message("网络错误，请稍候重试");
            }
        })
    };
}
]);

angular.module("replyFormApp").controller("SpecialDisplay", ["$scope", "config", "$http", function ($scope, config, a) {
    $scope.config = config;
    $scope.url = config.url;
    $scope.msgtypes = {
        image: $scope.config.image,
        voice: $scope.config.voice,
        video: $scope.config.video,
        shortvideo: $scope.config.shortvideo,
        location: $scope.config.location,
        trace: $scope.config.trace,
        link: $scope.config.link,
        merchant_order: $scope.config.merchant_order,
        ShakearoundUserShake: $scope.config.ShakearoundUserShake,
        ShakearoundLotteryBind: $scope.config.ShakearoundLotteryBind,
        WifiConnected: $scope.config.WifiConnected,
        qr: $scope.config.qr
    };
    $scope.switch_class = new Array;

    angular.forEach($scope.msgtypes, function (t, a) {
        $scope.switch_class[a] = "module" == t || "keyword" == t ? "switch switchOn special_switch" : "switch special_switch"
    });

    $scope.changestatus = function (type) {
        a.post($scope.url, {
            type: type
        }).success(function (a) {
            0 == a.message.errno ? ($scope.switch_class[type] = "switch switchOn special_switch" == $scope.switch_class[type] ? "switch special_switch" : "switch switchOn special_switch",
                util.message("修改成功！")) : util.message(a.message.message)
        })
    }
}
]);

angular.module("replyFormApp").controller("PostCtrl", ["$scope", "config", "$http", function ($scope, config, a) {
    require(["underscore", "util"], function (t, a) {
        window.initReplyController($scope)
    });

    $scope.switch_class = config.class;
    $scope.status = "module" == config.status || "keyword" == config.status ? config.status : "";

    $scope.change = function (t, status) {
        $scope.status = 0 == status ? 1 : 0;
        $scope.switch_class = 1 == $scope.status ? "switch switchOn special_switch" : "switch special_switch";
    }
}
]);

angular.module("replyFormApp").controller("WelcomeDisplay", ["$scope", function ($scope) {
    $.isFunction(window.initReplyController) && window.initReplyController($scope)
}
]);

angular.module("replyFormApp").controller("DefaultDisplay", ["$scope", function ($scope) {
    $.isFunction(window.initReplyController) && window.initReplyController($scope)
}
]);

angular.module("replyFormApp").directive("ngInvoker", ["$parse", function (e) {
    return function (e, t, a) {
        e.$eval(a.ngInvoker)
    }
}
]);

angular.module("replyFormApp").directive("ngMyEditor", function () {
    var e = {
        scope: {
            value: "=ngMyValue"
        },
        template: '<textarea id="editor" style="height:600px;width:100%;"></textarea>',
        link: function (t, a, n) {
            if (!a.data("editor")) {
                var i = {
                    autoClearinitialContent: false,
                    toolbars: [["fullscreen", "source", "preview", "|", "bold", "italic", "underline", "strikethrough", "forecolor", "backcolor", "|", "justifyleft", "justifycenter", "justifyright", "|", "insertorderedlist", "insertunorderedlist", "blockquote", "emotion", "link", "removeformat", "|", "rowspacingtop", "rowspacingbottom", "lineheight", "indent", "paragraph", "fontfamily", "fontsize", "|", "inserttable", "deletetable", "insertparagraphbeforetable", "insertrow", "deleterow", "insertcol", "deletecol", "mergecells", "mergeright", "mergedown", "splittocells", "splittorows", "splittocols", "|", "anchor", "map", "print", "drafts"]],
                    elementPathEnabled: false,
                    initialFrameHeight: 200,
                    focus: false,
                    maximumWords: 9999999999999,
                    autoFloatEnabled: false
                };
                e = UE.getEditor("editor", i),
                    a.data("editor", e),
                    e.addListener("contentChange", function () {
                        t.value = e.getContent().replace(/\&quot\;/g, '"'),
                        t.$root.$$phase || t.$apply("value")
                    }),
                    $(a).parents("form").submit(function () {
                        e.queryCommandState("source") && e.execCommand("source")
                    }),
                    e.addListener("ready", function () {
                        e && e.getContent() != t.value && e.setContent(t.value),
                            t.$watch("value", function (t) {
                                e && e.getContent() != t && e.setContent(t || "")
                            })
                    })
            }
        }
    };
    return e
});

angular.module("replyFormApp").filter("nl2br", ["$sce", function (e) {
    return function (t) {
        return t ? e.trustAsHtml(t.replace(/\n/g, "<br/>")) : ""
    }
}
]);

angular.module("cloudApp", ["we7app"]);

angular.module("cloudApp").controller("FileProcessorCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.files = a.files,
        e.fails = [];
    var n = e.files.length
        , i = 1
        , s = ""
        , o = a.tasknum && "" != a.type ? a.tasknum : 1;
    o > n && (o = 1);
    var r = function () {
        var o = e.files.pop();
        if (!o && i >= n)
            return util.message("文件同步完成，正在处理数据同步......"),
                void ("theme" == a.type ? location.href = "./index.php?c=cloud&a=process&step=schemas&t=" + a.appname + "&is_upgrade=" + a.is_upgrade : "webtheme" == a.type ? location.href = "./index.php?c=cloud&a=process&step=schemas&w=" + a.appname + "&is_upgrade=" + a.is_upgrade : location.href = "./index.php?c=cloud&a=process&step=schemas&m=" + a.appname + "&is_upgrade=" + a.is_upgrade + "&batch=1&account_type=" + a.account_type);
        e.file = o,
            e.pragress = i + "/" + n;
        var l = {
            path: o,
            type: a.type
        };
        t.post(location.href, l).success(function (t) {
            i++,
            "success" != t && (e.fails.push("[" + t + "] " + o),
                s = t),
                r()
        }).error(function () {
            i++,
                e.fails.push(o),
                r()
        })
    };
    for (j = 0; j < o; j++)
        r()
}
]).controller("SchemasProcessorCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.schemas = a.schemas,
        e.fails = [];
    a.is_module_install;
    var n = e.schemas.length
        , i = 1
        , s = function () {
        util.message("未能成功执行处理数据库, 请联系开发商解决. ")
    }
        , o = function () {
        var a = e.schemas.pop();
        if (!a)
            return e.fails.length > 0 ? void s() : void (location.href = "");
        e.schema = a,
            e.pragress = i + "/" + n;
        var r = {
            table: a
        };
        t.post(location.href, r).success(function (t) {
            i++,
            "success" != t && e.fails.push(a),
                t.message ? util.message(t.message) : o()
        }).error(function () {
            i++,
                e.fails.push(a),
                o()
        })
    };
    o()
}
]).controller("CloudDiagnoseCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.showToken = function () {
        util.message("Token:" + $("#token").val(), "", "info")
    }
        ,
        $(".js-checkip p").each(function () {
            var e = $(this);
            $.getJSON("./index.php?c=cloud&a=diagnose&do=testapi&ip=" + e.find("#serverdnsip").html(), function (t) {
                e.find("#checkresult").html(t.message.message)
            })
        }),
        $.ajax({
            type: "get",
            data: {
                date: a.date,
                version: a.version,
                siteurl: a.siteurl
            },
            url: "//s.we7.cc/index.php?c=site&a=diagnose&jsonpcallback=?",
            dataType: "jsonp",
            success: function (e) {
                "0" == e.check_time.errno ? $("#check-time").html('<i class="fa fa-check text-success"></i> 正常') : $("#check-time").html('<i class="fa fa-remove text-warning"></i> 异常，当前时间为：' + e.check_time.message.localtime + "; 服务器时间为：" + e.check_time.message.servertime),
                    "0" == e.check_touch.errno ? $("#check-touch").html('<i class="fa fa-check text-success"></i> 正常') : $("#check-touch").html('<i class="fa fa-remove text-warning"></i> 异常，' + e.check_touch.message)
            },
            error: function () {
                alert("fail")
            }
        })
}
]);

angular.module("we7codeuploadApp", ["we7app"]);

angular.module("we7codeuploadApp").controller("code_upload_ctrl", ["$scope", "config", "codeservice", "$q", function ($scope, config, codeservice, $q) {
    $scope.qrcode_src = "";
    $scope.preview_qrcode = "";
    $scope.show_wait = true;
    $scope.step = 1;
    $scope.show_step1 = false;
    $scope.show_step2 = false;
    $scope.show_step3 = false;
    $scope.show_preview = false;
    $scope.wait_sec = 15;
    $scope.user_desc = "";
    $scope.user_version = "";

    var i = null
        , s = null
        , o = 15
        , r = setInterval(function () {

        if (--o <= 0) {
            o = 0;
            clearInterval(r);
        }
        $scope.$apply(function () {
            $scope.wait_sec = o
        });
    }, 1e3);

    $scope.preview = function () {
        codeservice.preview(s, i).then(function (t) {
            $scope.preview_qrcode = "data:image/jpg;base64," + t;
            $scope.show_preview = true;
        }, function (e) {
            util.message(e)
        })
    };

    $scope.commit = function () {
        if (!$scope.user_version || !/^[0-9]{1,2}\.[0-9]{1,2}(\.[0-9]{1,2})?$/.test($scope.user_version))
            return util.message("版本号错误，只能是数字、点，数字最多2位，例如 1.1.1 或1.2"),
                false;
        codeservice.commit(s, i, $scope.user_version, $scope.user_desc).then(function () {
            $scope.show_step2 = false;
            $scope.show_step3 = true;
            $scope.step = 3;
        }, function (e) {
            util.message(e);
        })
    };

    codeservice.codeuid(config.version_id).then(function (uuid) {
        return codeservice.retrycodegen(uuid);
    }).then(function (t) {
        i = t;
        $scope.show_wait = false;
        return codeservice.get_code_token();
    }).then(function (token) {
        $scope.qrcode_src = config.QRCODEURL + "&code_token=" + token;
        clearInterval(r);
        var defered = $q.defer();
        defered.resolve(token);
        return defered.promise;
    }).then(function (token) {
        $scope.show_wait = false;
        $scope.show_step1 = true;
        return codeservice.retrychecksan(token, 408);
    }).then(function (t) {
        $scope.show_step1 = false;
        $scope.show_step2 = true;
        $scope.step = 2;
        s = t;
    }, function (e) {
        clearInterval(r);
        util.message(e);
    })
}
]);

angular.module("we7codeuploadApp").service("codeservice", ["$http", "$q", "config", function ($http, $q, config) {
    return {
        ajax: function (a, n) {
            return $http.get(a).then(function (e) {
                var a = e.data
                    , n = $q.defer();
                return n.resolve(a),
                    n.promise
            }, function () {
                var e = $q.defer();
                return e.reject(),
                    e.promise
            })
        },
        codeuid: function (version_id) {
            var defered = $q.defer();
            this.ajax(config.UUIDURL + "version_id=" + version_id).then(function (e) {
                if ("0" != e.errno) {
                    var t = "小程序应用数据异常，无法获取，请联系开发者";
                    e.message && (t = e.message);
                    defered.reject(t);
                } else
                    defered.resolve(e.data.code_uuid);
            });
            return defered.promise;
        },
        codegen: function (uuid) {
            var defered = $q.defer();
            this.ajax(config.CODE_GEN_CHECK_URL + "code_uuid=" + uuid).then(function (t) {
                if ("0" != t.errno)
                    defered.reject("no gen");
                else {
                    t.data.is_gen;
                    defered.resolve(uuid)
                }
            }, function (e) {
                defered.reject("no gen")
            });
            return defered.promise;
        },
        retrycodegen: function (uuid) {
            var defered = $q.defer()
                , that = this;
            setTimeout(function () {
                that.codegen(uuid).then(function (t) {
                    if (!t)
                        that.retrycodegen(uuid).then(function () {
                            defered.resolve()
                        });
                    return defered.resolve(uuid);
                }, function () {
                    return that.retrycodegen(uuid).then(function () {
                        defered.resolve()
                    });
                })
            }, 5e3);
            return defered.promise;
        },
        get_code_token: function () {
            var defered = $q.defer();
            this.ajax(config.CODE_TOKEN_URL).then(function (t) {
                if ("0" != t.errno)
                    defered.reject();
                else {
                    var a = t.data.code_token;
                    defered.resolve(a)
                }
            });
            return defered.promise;
        },
        checkscan: function (token, n) {
            var defered = $q.defer();
            n || (n = 408);
            var s = config.CHECKSANURL + "&code_token=" + token + "&last=" + n;
            this.ajax(s).then(function (t) {
                if (t.errno > 0) {
                    defered.reject(token, n);
                } else if (0 != t.errno) {
                } else {
                    var a = parseInt(t.data.errcode);
                    defered.resolve({
                        errcode: a,
                        last: n,
                        code_token: t.data.code_token
                    });
                }
            }, function (t) {
                defered.reject(token, n)
            });
            return defered.promise;
        },
        retrychecksan: function (e, a) {
            var n = $q.defer()
                , i = this;
            return i.checkscan(e, a).then(function (t) {
                var a = t.errcode
                    , s = (t.last,
                    t.code_token);
                405 != a ? 403 != a ? 666 != a ? i.retrychecksan(e, a).then(function (e) {
                    n.resolve(e)
                }) : n.reject("二维码已过期") : n.reject("已取消扫码") : n.resolve(s)
            }, function (e, t) {
                console.log("error"),
                    i.retrychecksan(e, t).then(function (e) {
                        n.resolve(e)
                    })
            }),
                n.promise
        },
        preview: function (e, n) {
            var i = $q.defer()
                , s = config.PREVIEWURL + "code_token=" + e + "&code_uuid=" + n;
            return this.ajax(s).then(function (e) {
                if ("0" == e.errno) {
                    var t = e.data.qrcode_img;
                    i.resolve(t)
                }
                var a = e.message;
                "" == a && (a = "预览失败, 确保当前扫码用户有上传小程序的权限"),
                    i.reject(a)
            }),
                i.promise
        },
        commit: function (e, n, i, s) {
            var o = $q.defer()
                ,
                r = config.COMMITURL + "code_token=" + e + "&user_version=" + i + "&user_desc=" + s + "&code_uuid=" + n;
            return this.ajax(r).then(function (e) {
                if ("0" != e.errno) {
                    var t = e.message;
                    "" == t && (t = "上传代码失败, 确保当前扫码用户有上传小程序的权限"),
                        o.reject(t)
                } else
                    o.resolve()
            }),
                o.promise
        }
    }
}
]);

angular.module("fansApp", ["we7app"]).value("config", {
    running: false,
    syncState: "",
    downloadState: ""
}).controller("DisplayCtrl", ["$scope", "$http", "config", "$q", function ($scope, $http, a, $q) {
    $scope.config = a;
    $scope.addTagUrl = a.addTagUrl;
    $scope.tag = "";
    $scope.searchMod = a.searchMod;
    $scope.closeValue = 0;
    $scope.registerUrl = a.registerUrl;
    $scope.register = [];
    $scope.sync_member = 0;

    $scope.switchSearchMod = function (t) {
        $scope.searchMod = t;
        $scope.$apply($scope.searchMod);
    };

    $scope.addTag = function () {
        $http.post($scope.addTagUrl, {
            tag: $scope.tag
        }).success(function (e) {
        });
    };

    $scope.registerMember = function (openid) {
        $scope.register.openid = openid;
        $scope.register.password = "";
        $scope.register.repassword = "";
    };

    $scope.register = function () {
        $(".modal").modal("hide");

        if ("" == $scope.register.password) {
            util.message("新密码不可为空！");
            return false;
        } else if ("" == $scope.register.repassword) {
            util.message("确认新密码不可为空！");
            return false;
        } else if ($scope.register.password != $scope.register.repassword) {
            util.message("两次密码不一致！");
            return false;
        } else {
            $http.post($scope.registerUrl, {
                password: $scope.register.password,
                repassword: $scope.register.repassword,
                openid: $scope.register.openid
            }).success(function (e) {
                0 == e.message.errno ? util.message(e.message.message, e.redirect, "ajax") : util.message(e.message.message);
            });
        }
    };

    // 是否同步会员，就是粉丝自动注册成为会员
    $scope.syncMember = function () {
        $scope.sync_member = 0 == $scope.sync_member ? 1 : 0;
    };

    // 同步全部粉丝信息
    $scope.downloadFans = function (n, i) {
        var matches, regx = new RegExp("(^| )we7:sync_fans_pindex:" + window.sysinfo.uniacid + "=([^;]*)(;|$)");
        if (matches = document.cookie.match(regx)) {
            $scope.sync("all", {
                pageindex: unescape(matches[2])
            });
            return false;
        }
        i || (i = 0);

        if (void 0 == n) {
            n = "";
            util.message("正在下载粉丝数据...");
        }
        $http.post(a.syncAllUrl, {
            next_openid: n
        }).success(function (t) {
            if (0 != t.message.errno) {
                var a = "";
                return "string" == typeof t.message ? a = t.message : "string" == typeof t.message.message && (a = t.message.message),
                    util.message("粉丝下载失败。具体原因：" + a),
                    false
            }
            if (i += parseInt(t.message.message.count),
            t.message.message.total <= i || !t.message.message.count && !t.message.message.next)
                return $scope.sync("all"),
                    false;
            $scope.downloadFans(t.message.message.next, i)
        })
    };

    // 同步粉丝信息
    $scope.sync = function (type, options) {
        if ("all" == type) { // 同步所有粉丝信息
            if (!options) {
                (options = {}).pageindex = 0;
                options.total = 0;
                util.message("粉丝数据下载完成。开始更新粉丝数据...", "", "success");
            }
            options.type = "all";
            options.sync_member = $scope.sync_member;
        } else { // 同步选中粉丝信息
            options = {
                type: "check",
                openids: [],
                sync_member: $scope.sync_member
            };
            $(".openid:checked").each(function () {
                options.openids.push(this.value);
            });
            if (0 == options.openids.length) {
                util.message("请选择粉丝", "", "info");
                return false;
            }
            util.message("正在同步粉丝数据请不要关闭浏览器...")
        }

        if (options.pageindex > 0 && 0 == $scope.closeValue) {
            $("#modal-message").modal("hide");
            util.dialog("更新进度", '<div class="progress"> <div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="' + options.pageindex / options.total * 100 + '" aria-valuemin="0" aria-valuemax="100" style="width: ' + options.pageindex / options.total * 100 + '%"><span class="sr-only"></span></div></div>', "", {
                containerName: "link-container"
            }).modal("show");
        }
        $(".close").click(function () {
            $scope.closeValue = 1
        });

        var defered = $q.defer();
        defered.promise.then(function () {
            $http.post($scope.config.syncUrl, options).success(function (t) {
                if (void 0 == t.message) {
                    util.message("更新失败！可能是由于你当前网络不稳定，请稍后再试。", "", "info");
                    return false;
                }
                if (0 == t.message.errno) {
                    if ("success" == t.message.message || t.message.message.total == t.message.message.pageindex) {
                        util.message("同步粉丝数据成功", a.msgUrl, "success");
                        return false;
                    }
                    $scope.sync("all", {
                        pageindex: t.message.message.pageindex,
                        total: t.message.message.total
                    });
                } else {
                    if (++options.pageindex > options) {
                        util.message("同步粉丝数据成功", a.msgUrl, "success");
                        return false;
                    }
                    $scope.sync("all", {
                        pageindex: ++options.pageindex,
                        total: options.total
                    })
                }
            })
        }, function (e) {
        });
        1 == $scope.closeValue ? $scope.closeValue = 0 : defered.resolve();
    }
}
]).controller("chatsCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    // 这个定义在window对象上？？
    send = function () {
        types = [];
        types.text = $('[name="reply[reply_basic]"]').val();
        types.news = $('[name="reply[reply_news]"]').val();
        types.image = $('[name="reply[reply_image]"]').val();
        types.music = $('[name="reply[reply_music]"]').val();
        types.voice = $('[name="reply[reply_voice]"]').val();
        types.video = $('[name="reply[reply_video]"]').val();
        types.wxcard = $('[name="reply[reply_wxcard]"]').val();
        for (type in types)
            if ("" != types[type]) {
                msg_type = type;
                msg_content = types[type];
                break;
            }
        $.post(a.sendurl, {
            type: msg_type,
            content: msg_content
        }, function (t) {

            if (-1 == (t = $.parseJSON(t)).message.errno) {
                util.message("由于粉丝48小时内未与你互动，你不能主动与粉丝聊天", "", "info")
            } else {
                $(".del-basic-media").remove();
                $scope.chatLogs.unshift({
                    flag: 1,
                    createtime: t.message.message.createtime,
                    content: t.message.message.content,
                    msgtype: t.message.message.msgtype
                });
                $scope.$apply();
            }
        })
    };

    $scope.chatLogs = a.chatLogs;
    // 在页面卸载之前发出
    window.onbeforeunload = function () {
        $.get(a.endurl, {}, function (e) {
        })
    }
}
]);

angular.module("homeApp", ["we7app"]);

angular.module("homeApp").controller("WelcomeCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.notices = a.notices;
    $scope.loaderror = 0;
    $scope.last_modules = null; // 从微擎商城获取最新模块应用
    $scope.fans_kpi = []; // 昨天和今天的粉丝变化

    $http({
        method: "POST",
        url: "./index.php?c=home&a=welcome&do=get_fans_kpi"
    }).success(function (t) {
        0 == t.message.errno && ($scope.fans_kpi = t.message.message)
    });

    $scope.get_last_modules = function () {
        $http.post("./index.php?c=home&a=welcome&do=get_last_modules").success(function (t) {
            if (0 == t.message.errno) {
                var a = [];
                angular.forEach(t.message.message, function (e, t) {
                    e.wxapp || a.push(e)
                });
                $scope.last_modules = a;
            } else
                $scope.last_modules = null;
            $scope.loaderror = 1;
        })
    };

    $scope.get_last_modules() // 从微擎商城获取最新模块应用
}
]);

angular.module("homeApp").controller("systemWelcomeCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.account_num = a.account_num,
        e.last_accounts_modules = a.last_accounts_modules,
        e.message_list = a.message_list,
        e.links = a.links,
        e.user_info = a.user_info,
        e.setTop = function (a) {
            t.post(e.links.setTop, {
                id: a
            }).success(function (e) {
                0 == e.message.errno && location.reload()
            })
        }
}
]);

angular.module("we7job", ["we7app"]);

angular.module("we7job").controller("we7job-base-controller", ["$scope", "$http", "config", function ($scope, $http, config) {
    var list = config.list
        , jobid = config.jobid
        , worker = new Worker("resource/js/app/job.js");

    $scope.list = list;

    /**
     * 启动或关闭job
     * @param item
     */
    $scope.start = function (item) {
        item.start = !item.start; // 开启或关闭job
        worker.postMessage(item); // 传递消息给worker线程
    };

    /**
     * 接收来自worker线程的消息
     * @param event
     */
    worker.onmessage = function (event) {
        var itemid = event.data.id;
        $scope.list[itemid].progress = event.data.progress;
        $scope.$apply();
    };

    if (jobid > 0) {
        var item = list[jobid];
        item && $scope.start(item);
    }
}
]);

angular.module("massApp", ["we7app"]);

angular.module(["massApp"]).controller("MassSend", ["$scope", "$http", "config", function ($scope, $http, a) {

    $scope.showLog = function (e) {
        var n = parseInt(e)
            , i = $("#" + n);
        $http.post(a.logUrl, {
            tid: n,
            type: "mass",
            module: "task"
        }).success(function (e) {
            var t = "";
            (e = angular.toJson(e)).message && 0 != e.message.items.length ? $.each(e.message.items, function (e, a) {
                t += "<tr><td>" + a.createtime + " " + a.note + "</td></tr>"
            }) : t = '<tr><td class="text-center"><i class="fa fa-info-circle"></i> 暂无数据</td></tr>',
                i.popover({
                    html: true,
                    placement: "left",
                    trigger: "manual",
                    title: "触发日志",
                    content: '<table class="table-cron table">' + t + "</table>"
                }),
                i.popover("toggle")
        })
    };

    $scope.hideLog = function (e) {
        var t = parseInt(e);
        $("#" + t).popover("toggle")
    }
}
]);

angular.module("massApp").controller("MassPost", ["$scope", "config", function ($scope, config) {
    $scope.groups = config.groups;
    $scope.massdata = config.massdata;
    $scope.clock = config.massdata ? config.massdata.clock : "08:00";

    $.isFunction(window.initReplyController) && window.initReplyController($scope);
    1 == $scope.massdata.type ? $(".sendtime").show() : $(".sendtime").hide();
    $(".mass-type").change(function () {
        1 == $("select[name='type']").val() ? $(".sendtime").show() : $(".sendtime").hide()
    });

    $scope.checkSubmit = function ($event) {
        var selectedGroup = $(".mass-group").val();
        if ("" == selectedGroup)
            return $event.preventDefault(),
                util.message("请选择群发对象"),
                false;
        if (-1 == selectedGroup) {
            var group_fans_all = {
                id: -1,
                name: "全部粉丝",
                count: 0
            };
            $(':hidden[name="group"]').val(angular.toJson(group_fans_all))
        } else
            angular.forEach($scope.groups, function (e, t) {
                e.id == selectedGroup && $(':hidden[name="group"]').val(angular.toJson(e))
            });
        if ("" == $scope.clock)
            return $event.preventDefault(),
                util.message("请选择群发具体时间"),
                false;
        if ("0" == config.day) {
            var selectedTime = $scope.clock.split(":")
                , d = new Date
                , hours = d.getHours()
                , minutes = d.getMinutes();
            if (selectedTime[0] < hours || selectedTime[0] == hours && selectedTime[1] < minutes)
                return $event.preventDefault(),
                    util.message("发送时间不能小于当前时间"),
                    false
        }
        var reply_news = $(':hidden[name="reply[reply_news]"]').val()
            , reply_image = $(':hidden[name="reply[reply_image]"]').val()
            , reply_music = $(':hidden[name="reply[reply_music]"]').val()
            , reply_voice = $(':hidden[name="reply[reply_voice]"]').val()
            , reply_video = $(':hidden[name="reply[reply_video]"]').val();
        if ("" == reply_news && "" == reply_image && "" == reply_music && "" == reply_voice && "" == reply_video)
            return $event.preventDefault(),
                util.message("请选择群发素材"),
                false;
        if ("" != reply_news) {
            if ("perm" != (reply_news = eval("(" + reply_news + ")")).model)
                return $event.preventDefault(),
                    util.message("群发不支持本地/服务器素材，请选择微信素材"),
                    false;
            $(':hidden[name="reply[reply_news]"]').val(reply_news.mediaid)
        }
        "" != reply_image && (reply_image = eval("(" + reply_image + ")"),
            $(':hidden[name="reply[reply_image]"]').val(reply_image)),
        "" != reply_music && (reply_music = eval("(" + reply_music + ")"),
            $(':hidden[name="reply[reply_music]"]').val(reply_music)),
        "" != reply_voice && (reply_voice = eval("(" + reply_voice + ")"),
            $(':hidden[name="reply[reply_voice]"]').val(reply_voice)),
        "" != reply_video && (reply_video = eval("(" + reply_video + ")"),
            $(':hidden[name="reply[reply_video]"]').val(reply_video.mediaid))
    };

    $(".clockpicker").clockpicker({
        autoclose: true
    });
}
]);

angular.module("massApp").controller("MassDisplay", ["$scope", "$http", "config", function (e, t, a) {
    e.days = a.days,
        e.delMass = function (a, n) {
            var a = parseInt(a)
                , n = parseInt(n);
            return !!confirm("确认清空这条群发吗?") && (t.post("./index.php?c=platform&a=mass&do=del", {
                id: a
            }).success(function (t, a) {
                t.message.errno ? util.message("清空群发失败:<br>" + t.message.message, "", "error") : e.days[n].info = ""
            }),
                false)
        }
        ,
        e.toEdit = function (e) {
            var e = parseInt(e);
            window.location.href = "./index.php?c=platform&a=mass&do=post&day=" + e
        }
        ,
        e.preview = function (a) {
            var a = parseInt(a);
            if (!e.days[a].info)
                return util.message("群发内容错误！"),
                    false;
            var n = e.days[a].info.media_id
                , i = e.days[a].info.msgtype;
            $("#modal-view").modal("show"),
                $("#modal-view .btn-view").unbind().click(function () {
                    var e = $.trim($("#modal-view #wxname").val());
                    return e ? ($("#modal-view").modal("hide"),
                        t.post("./index.php?c=platform&a=mass&do=preview", {
                            media_id: n,
                            wxname: e,
                            type: i
                        }).success(function (e) {
                            0 != e.message.errno ? util.message(e.message.message) : util.message("发送成功", "", "success")
                        }),
                        false) : (util.message("微信号不能为空", "", "error"),
                        false)
                })
        }
}
]);

angular.module("materialApp", ["we7app"]);

angular.module("materialApp").directive("ngMyEditor", function () {
    return {
        scope: {
            value: "=ngMyValue",
            imguploadurl: "@ngMyUpurl"
        },
        template: '<textarea id="editor" style="height:600px;width:100%;"></textarea>',
        link: function (e, t, a) {
            t.data("editor") || util.editor("editor", {
                allow_upload_video: 0,
                callback: function (a, n) {
                    t.data("editor", n),
                        n.addListener("contentChange", function () {
                            e.value = n.getContent(),
                            e.$root.$$phase || e.$apply("value")
                        }),
                        n.addListener("ready", function () {
                            n && n.getContent() != e.value && n.setContent(e.value),
                                e.$watch("value", function (e) {
                                    n && n.getContent() != e && n.setContent(e || "")
                                })
                        }),
                        n.setOpt("imageActionName", "uploadimage"),
                        n.setOpt("imageFieldName", "file"),
                        n.setOpt("imageUrlPrefix", ""),
                        UE.Editor.prototype._bkGetActionUrl = UE.Editor.prototype.getActionUrl,
                        UE.Editor.prototype.getActionUrl = function (t) {
                            return "uploadimage" == t ? e.imguploadurl : this._bkGetActionUrl.call(this, t)
                        }
                }
            }, true)
        }
    }
}).controller("materialDisplay", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.materialList = a.materialList;
    $scope.groups = a.group;
    $scope.config = a;
    $scope.group = "";
    $scope.materialType = "";
    $scope.materialId = "";
    $scope.syncNews = a.syncNews;
    $scope.hidenbutton = 0;

    $scope.sync = function (type, i, s, o, r) {
        $(window).bind("beforeunload", function () {
            return "您输入的内容尚未保存，确定离开此页面吗？"
        }),
            void 0 == i ? util.message("正在同步素材，请勿关闭浏览器...") : util.message("已同步" + parseInt((i - 1) / s * 100) + "%，请勿关闭浏览器..."),
            $http.post(a.sync_url, {
                type: type,
                pageindex: i,
                total: s,
                wechat_existid: o,
                original_newsid: r
            }).success(function (t) {
                0 == t.message.errno ? ($(window).unbind("beforeunload"),
                    util.message("同步素材成功", "./index.php?c=platform&a=material&type=" + type, "success")) : (sync_info = t.message.message,
                    $scope.sync(sync_info.type, sync_info.pageindex, sync_info.total, sync_info.wechat_existid, sync_info.original_newsid))
            })
    };

    1 == $scope.syncNews && $scope.sync("news"),
        $scope.upload = function (e, t, a) {
            require(["fileUploader"], function (n) {
                n.init(function () {
                    util.message("上传成功", location.href, "success")
                }, {
                    type: e,
                    direct: true,
                    multiple: t,
                    isWechat: a
                })
            })
        };

    $scope.del_material = function (e, n, i) {
        if (!confirm("删除不可恢复确认删除吗？"))
            return false;
        $http.post(a.del_url, {
            material_id: n,
            type: e,
            server: i
        }).success(function (t) {
            0 != t.message.errno ? util.message("删除失败,具体原因:" + t.message.message, "", "info") : util.message("删除成功", "./index.php?c=platform&a=material&type=" + e + ("local" == i ? "&islocal=true" : ""), "success")
        })
    };

    $scope.checkGroup = function (t, a) {
        $("#check-group").modal("show"),
            $scope.materialType = t,
            $scope.materialId = a,
            $scope.group = ""
    };

    $scope.transToWechat = function (n, i) {
        util.message("素材转换将在后台运行，成功后后自动刷新页面，请勿关闭浏览器..."),
            $http.post(a.trans_url, {
                material_id: i
            }).success(function (t) {
                0 != t.message.errno ? util.message("转换失败,具体原因:" + t.message.message, "", "info") : $scope.sync(n)
            })
    };

    $scope.newsToWechat = function (a) {
        util.message("素材转换将在后台运行，成功后后自动刷新页面，请勿关闭浏览器..."),
            $http.post($scope.config.postwechat_url, {
                material_id: a
            }).success(function (e) {
                0 == e.message.errno ? util.message("已保存", "./index.php?c=platform&a=material", "success") : alert("创建图文失败" + e.message.message)
            })
    };

    $scope.sendMaterial = function () {
        $http.post($scope.config.send_url, {
            type: $scope.materialType,
            id: $scope.materialId,
            group: $scope.group
        }).success(function (t) {
            1 == t.message.errno ? util.message(t.message.message, "", "info") : util.message("群发成功", "./index.php?c=platform&a=material&type=" + $scope.materialType, "success")
        })
    };

    $scope.createNew = function (type) {
        var a = $scope.config.create_new_url + "&new_type=" + type;
        window.location = a
    };

    $scope.choiceSendType = function (e, t, a) {
        $(".web-mobile-choice-type a[class = 'we7-margin-bottom']").attr("data-url", e),
            $(".web-mobile-choice-type a[class = 'we7-mobile-material-preview']").attr("data-type", t),
            $(".web-mobile-choice-type a[class = 'we7-mobile-material-preview']").attr("data-media-id", a)
    };

    $scope.wabPreview = function () {
        $("#modalWechatView").modal("hide"),
            window.open($(".web-mobile-choice-type a[class = 'we7-margin-bottom']").attr("data-url"), "_blank")
    };

    $scope.mobilePreview = function () {
        var e = $(".web-mobile-choice-type a[class = 'we7-mobile-material-preview']").attr("data-media-id")
            , a = $(".web-mobile-choice-type a[class = 'we7-mobile-material-preview']").attr("data-type");
        $(".material-wechat-view").addClass("hidden"),
            $("#weixin-dialog").removeClass("hidden"),
            $("#modalWechatView .btn-send").unbind().click(function () {
                var n = $.trim($("#modalWechatView #wxname").val());
                return n ? ($("#weixin-dialog").addClass("hidden"),
                    $(".material-wechat-view").removeClass("hidden"),
                    $("#modalWechatView #wxname").val(""),
                    $("#modalWechatView").modal("hide"),
                    $http.post("./index.php?c=platform&a=mass&do=preview", {
                        media_id: e,
                        wxname: n,
                        type: a
                    }).success(function (e) {
                        0 != e.message.errno ? util.message(e.message.message) : util.message("发送成功", "", "success")
                    }),
                    false) : (util.message("微信号不能为空", "", "error"),
                    false)
            })
    };

    $scope.previewBack = function () {
        $("#weixin-dialog").addClass("hidden"),
            $(".material-wechat-view").removeClass("hidden")
    }
}
]).controller("materialAdd", ["$scope", "material", "$http", "$timeout", function ($scope, material, a, $timeout) {

    $scope.config = material;
    $scope.operate = material.operate;
    $scope.model = material.model;
    $scope.new_type = material.new_type;
    $scope.hidenbutton = "reply" == material.new_type ? 0 : 1;

    $scope.changeClass = function () {
        angular.forEach($scope.materialList, function (t, a) {
            $scope.materialList[a].class = "0" == a ? $scope.activeIndex == a ? "cover-appmsg-item active" : "cover-appmsg-item" : $scope.activeIndex == a ? "appmsg-item active" : "appmsg-item"
        })
    };

    $scope.tomedia = function (e) {
        var a = "";
        return $.ajax({
            url: material.url,
            async: false,
            data: {
                url: e
            },
            success: function (e) {
                var e = $.parseJSON(e);
                a = e.message.message
            }
        }),
            a
    };

    $scope.changeOrder = function (direction, index) {
        material = {};
        if ("down" == direction) {
            material = $scope.materialList[index];
            $scope.materialList[index] = $scope.materialList[index + 1];
            $scope.materialList[index + 1] = material;
        } else {
            material = $scope.materialList[index];
            $scope.materialList[index] = $scope.materialList[index - 1];
            $scope.materialList[index - 1] = material;
        }
    };

    $scope.deleteMaterial = function (index) {
        if (confirm("确定要删除吗？")) {
            $scope.materialList.splice(index, 1);
            $scope.activeIndex = $scope.activeIndex - 1;
        }
    };

    $scope.changeIndex = function (index) {
        $scope.activeIndex = index;
        $scope.changeClass();
    };

    $scope.addMaterial = function () {
        if (void 0 == $scope.materialList) {
            $scope.materialList = [];
            $scope.activeIndex = 0;
        } else {
            $scope.activeIndex = $scope.materialList.length;
        }

        $scope.materialList.push({
            id: "",
            title: "",
            author: "",
            thumb: "",
            media_id: "",
            displayorder: "0",
            digest: "",
            content: "",
            content_source_url: "",
            show_cover_pic: 0,
            class: ""
        });
        $scope.changeClass();
    };

    if ("add" == $scope.operate && "reply" != $scope.config.type) {
        $scope.addMaterial();
    } else {
        $scope.activeIndex = 0;
        $scope.materialList = [];

        angular.forEach(material.materialList, function (t, a) {
            t.thumb_url = $scope.tomedia(t.thumb_url);
            $scope.materialList[a] = {
                id: t.id,
                title: t.title,
                author: t.author,
                thumb: t.thumb_url,
                media_id: t.thumb_media_id,
                displayorder: a,
                digest: t.digest,
                content: t.content,
                content_source_url: t.content_source_url,
                url: t.url,
                show_cover_pic: isNaN(Number(t.show_cover_pic)) ? 0 : Number(t.show_cover_pic),
                class: ""
            }
        });

        $scope.changeClass();
    }

    // 获取图文的缩略图
    $scope.pickPicture = function (type) {
        isWechat = "wechat" == type;
        require(["fileUploader"], function (t) {
            t.init(function (t) {
                $scope.materialList[$scope.activeIndex].thumb = t.url,
                    $scope.materialList[$scope.activeIndex].media_id = t.media_id,
                    $scope.$apply()
            }, {
                type: "image",
                direct: true,
                multiple: false,
                isWechat: isWechat,
                image_limit: $scope.config.image_limit,
                voice_limit: $scope.config.voice_limit,
                video_limit: $scope.config.video_limit
            });
        });
    };

    $scope.updateSelection = function () {
        $scope.materialList[$scope.activeIndex].show_cover_pic = isNaN(Number(!$scope.materialList[$scope.activeIndex].show_cover_pic)) ? 0 : Number(!$scope.materialList[$scope.activeIndex].show_cover_pic)
    };

    $scope.saveNews = function (type) {
        news = [];
        var n = ""
            , i = "";

        angular.forEach($scope.materialList, function (a, s) {

            if ("" == a.title) {
                n = s;
                i = "请输入标题后,再点击保存按钮";
            } else {
                if ("" != a.content || "wechat" != type && "reply" != $scope.new_type) {
                    if ("" == a.content && "wechat" == type) {
                        n = s;
                        i = "图文内容中图片上传失败，请重新上传";
                    } else {
                        a.displayorder = s + 1;
                        news[s] = a;
                    }
                } else {
                    n = s;
                    i = "请输入一段正文,再点击保存按钮";
                }
            }
        });

        if ("" !== n) {
            $scope.activeIndex = n;
            $scope.changeClass();
            alert(i);
            return false;
        }
        util.message("正在生成图文消息，请勿关闭浏览器...");
        var s = "add" == $scope.config.operate ? "" : $scope.config.materialList[0].attach_id;
        a.post($scope.config.newsUpload_url, {
            news: news,
            operate: $scope.operate,
            attach_id: s,
            type: $scope.config.type,
            target: type,
            news_rid: $scope.config.news_rid
        }).success(function (t) {
            0 == t.message.errno ? util.message("已保存", $scope.config.msg_url, "success") : alert("创建图文失败" + t.message.message)
        })
    };

    $scope.exportFromCms = function () {
        $scope.searchCms()
    };

    $scope.searchCms = function (t) {
        var n = {};
        n.header = '<ul role="tablist" class="nav nav-pills" style="font-size:14px; margin-top:-20px;">\t<li role="presentation" class="active" id="li_goodslist"><a data-toggle="tab" role="tab" aria-controls="articlelist" href="#articlelist">文章列表</a></li></ul>';
        n.content = '<div class="tab-content"><div id="articlelist" class="tab-pane active" role="tabpanel">\t<table class="table table-hover">\t\t<thead class="navbar-inner">\t\t\t<tr>\t\t\t\t<th style="width:40%;">标题</th>\t\t\t\t<th style="width:30%">创建时间</th>\t\t\t\t<th style="width:30%; text-align:right">\t\t\t\t\t<div class="input-group input-group-sm hide">\t\t\t\t\t\t<input type="text" class="form-control">\t\t\t\t\t\t<span class="input-group-btn">\t\t\t\t\t\t\t<button class="btn btn-default" type="button"><i class="fa fa-search"></i></button>\t\t\t\t\t\t</span>\t\t\t\t\t</div>\t\t\t\t</th>\t\t\t</tr>\t\t</thead>\t\t<tbody></tbody>\t</table>\t<div id="pager" style="text-align:center;"></div></div></div>';
        n.footer = "";
        n.articleitem = '<%_.each(list, function(item) {%> \n<tr>\n\t<td><a href="#" data-cover-attachment-url="<%=item.attachment%>" title="<%=item.title%>"><%=item.title%></a></td>\n\t<td><%=item.createtime%></td>\n\t<td class="text-right">\n\t\t<button class="btn btn-default js-btn-select" js-id="<%=item.id%>">选取</button>\n\t</td>\n</tr>\n<%});%>\n';

        if ($("#link-search-cms")[0]) {
            $scope.modalobj = $("#link-search-cms").data("modal");
        } else {
            $scope.modalobj = util.dialog(n.header, n.content, n.footer, {
                containerName: "link-search-cms"
            });
            $scope.modalobj.find(".modal-body").css({
                height: "680px",
                "overflow-y": "auto"
            });
            $scope.modalobj.modal("show");
            $scope.modalobj.on("hidden.bs.modal", function () {
                $scope.modalobj.remove()
            });
            $("#link-search-cms").data("modal", $scope.modalobj)
        }

        t = t || 1;
        a.get("./index.php?c=utility&a=link&do=articlelist&page=" + t).success(function (t, a, i, s) {

            if (t.message.message.list) {
                $scope.modalobj.find("#articlelist").data("articles", t.message.message.list);
                $scope.modalobj.find("#articlelist tbody").html(_.template(n.articleitem)(t.message.message));
                $scope.modalobj.find("#pager").html(t.message.message.pager);
                $scope.modalobj.find("#pager .pagination li[class!='active'] a").click(function () {
                    $scope.searchCms($(this).attr("page"));
                    return false;
                });
                $scope.modalobj.find(".js-btn-select").click(function () {
                    $scope.addCms($(this).attr("js-id"));
                    $scope.$apply();
                    $scope.modalobj.modal("hide");
                });
            }
        });
    };

    $scope.addCms = function (t) {
        var a = $scope.modalobj.find("#articlelist").data("articles")[t];

        $scope.materialList[$scope.activeIndex].title = a.title;
        $scope.materialList[$scope.activeIndex].thumb = a.thumb_url;
        $scope.materialList[$scope.activeIndex].author = a.author;
        $scope.materialList[$scope.activeIndex].incontent = 1 == a.incontent;
        $scope.materialList[$scope.activeIndex].description = a.description;
        $scope.materialList[$scope.activeIndex].content = a.content;
        $scope.materialList[$scope.activeIndex].content_source_url = a.linkurl;
        $scope.materialList[$scope.activeIndex].detail = "" != a.content;
    }
}
]);

angular.module("memberAPP", ["we7app"]);

angular.module("memberAPP").controller("group", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.config = a;
    $scope.group_level = $scope.config.group_level;
    $scope.group_person_count = $scope.config.group_person_count;
    $scope.group_list = $scope.config.group_list;
    $scope.default_group = $scope.config.default_group;

    $scope.set_group_detail_info = function (a) {
        $scope.group_detail = {},
            $http.post($scope.config.get_group_url, {
                group_id: a
            }).success(function (t) {
                1 == t.message.errno ? util.message(t.message.message, "", "error") : $scope.group_detail = t.message.message
            }),
            $("#group_detail").modal("show")
    };

    $scope.change_group_level = function () {
        $http.post($scope.config.change_group_level_url, {
            group_level: $scope.group_level
        }).success(function (e) {
            0 == e.message.errno ? util.modal_message("", "设置成功", "", "success") : util.message("设置失败", "", "error")
        })
    };

    $scope.save_group = function () {
        if ("" == $scope.group_detail.title)
            return util.message("请填写会员组名称", "", "error"),
                false;
        $http.post($scope.config.save_group_url, {
            group: $scope.group_detail
        }).success(function (t) {
            1 == t.message.errno && util.message(t.message.message, "", "error"),
            2 == t.message.errno && ($("#group_detail").modal("hide"),
                $scope.group_list[$scope.group_detail.groupid] = $scope.group_detail,
                util.message(t.message.message, "", "success")),
            3 == t.message.errno && (groupid = t.message.message.groupid,
                $scope.group_list[groupid] = t.message.message,
                $("#group_detail").modal("hide"),
                util.message("添加成功", "", "success"))
        })
    };

    $scope.set_default = function (a) {
        $http.post($scope.config.set_default_url, {
            group_id: a
        }).success(function (t) {
            0 == t.message.errno ? ($scope.group_list[a].isdefault = 1,
                $scope.group_list[$scope.default_group.groupid].isdefault = 0,
                $scope.default_group = $scope.group_list[a],
                $scope.apply($scope),
                util.message("设置成功", "", "success")) : util.message("设置失败", "", "error")
        })
    };

    $scope.del_group = function (a) {
        if (!confirm("确定要删除吗？"))
            return false;
        $http.post($scope.config.del_group_url, {
            group_id: a
        }).success(function (t) {
            0 == t.message.errno ? (delete $scope.group_list[a],
                util.message("删除成功", "", "success")) : util.message("删除失败", "", "error")
        })
    }
}
]);

angular.module("memberAPP").controller("baseInformation", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.config = a;
    $scope.profile = $scope.config.profile;
    $scope.groups = $scope.config.groups;
    $scope.addresses = $scope.config.addresses;
    $scope.custom_fields = $scope.config.custom_fields;
    $scope.all_fields = $scope.config.all_fields;
    $scope.uniacid_fields = $scope.config.uniacid_fields;
    $scope.sexes = [{
        id: 0,
        name: "保密"
    }, {
        id: 1,
        name: "男"
    }, {
        id: 2,
        name: "女"
    }];
    $scope.educations = ["博士", "硕士", "本科", "专科", "中学", "小学", "其它"];
    $scope.constellations = ["水瓶座", "双鱼座", "白羊座", "金牛座", "双子座", "巨蟹座", "狮子座", "处女座", "天秤座", "天蝎座", "射手座", "摩羯座"];
    $scope.zodiacs = ["鼠", "牛", "虎", "兔", "龙", "蛇", "马", "羊", "猴", "鸡", "狗", "猪"];
    $scope.bloodtypes = ["A", "B", "AB", "O", "其它"];
    $scope.profile.births = $scope.profile.birthyear + "-" + $scope.profile.birthmonth + "-" + $scope.profile.birthday;
    $scope.profile.resides = $scope.profile.nationality + $scope.profile.resideprovince + $scope.profile.residecity + $scope.profile.residedist;
    $scope.other_field_name = "";
    $scope.other_field_title = "";
    $scope.addAddress = {
        name: "",
        phone: "",
        code: "",
        province: "",
        city: "",
        district: "",
        detail: ""
    };
    $scope.editAddress = {};
    $scope.uid = $scope.config.uid;

    angular.forEach($scope.addresses, function (e, t) {
        e.pcda = e.province + "-" + e.city + "-" + e.district + "-" + e.address;
    });

    $scope.addAdd = function () {
        $scope.addAddress.province = $(".tpl-province").eq(1).val();
        $scope.addAddress.city = $(".tpl-city").eq(1).val();
        $scope.addAddress.district = $(".tpl-district").eq(1).val();
        $("#address-add").modal("hide");

        $http.post(a.links.addAddressUrl, $scope.addAddress).success(function (t) {
            if (0 == t.message.errno) {
                var a = t.message.message;
                a.pcda = a.province + "-" + a.city + "-" + a.district + "-" + a.address,
                    $scope.addresses.push(a),
                    util.message("收货地址添加成功", "", "success")
            } else
                1 == t.message.errno && util.message(t.message.message, "", "error")
        })
    };

    $scope.choseEditAdd = function (addressId) {
        angular.forEach($scope.addresses, function (a, n) {
            if (a.id == addressId) {
                $scope.editAddress = {
                    id: addressId,
                    name: a.username,
                    phone: a.mobile,
                    code: a.zipcode,
                    province: a.province,
                    city: a.city,
                    district: a.district,
                    detail: a.address,
                    uniacid: a.uniacid
                };
                $(".tpl-province").eq(2).attr("data-value", $scope.editAddress.province);
                $(".tpl-city").eq(2).attr("data-value", $scope.editAddress.city);
                $(".tpl-district").eq(2).attr("data-value", $scope.editAddress.district);

                require(["district"], function (e) {
                    $(".tpl-district-container").each(function () {
                        var t = {};
                        t.province = $(this).find(".tpl-province")[0];
                        t.city = $(this).find(".tpl-city")[0];
                        t.district = $(this).find(".tpl-district")[0];
                        var a = {};
                        a.province = $(t.province).attr("data-value");
                        a.city = $(t.city).attr("data-value");
                        a.district = $(t.district).attr("data-value");
                        e.render(t, a, {
                            withTitle: true
                        });
                    })
                })
            }
        })
    };

    $scope.editAdd = function (n) {
        $scope.editAddress.province = $(".tpl-province").eq(2).val();
        $scope.editAddress.city = $(".tpl-city").eq(2).val();
        $scope.editAddress.district = $(".tpl-district").eq(2).val();
        $("#address-edit").modal("hide");

        $http.post(a.links.editAddressUrl, $scope.editAddress).success(function (t) {
            if (0 == t.message.errno) {
                var a = t.message.message;
                a.pcda = a.province + "-" + a.city + "-" + a.district + "-" + a.address;
                angular.forEach($scope.addresses, function (e, t) {
                    a.id == e.id && (e.pcda = a.pcda)
                });
                util.message("收货地址修改成功", "", "success");
            } else
                1 == data.message.errno && util.message(t.message.message, "", "error");
        })
    };

    $scope.delAdd = function (addressId) {
        $http.post(a.links.delAddressUrl, {
            id: addressId
        }).success(function (t) {

            if (0 == t.message.errno) {
                angular.forEach($scope.addresses, function (t, a) {
                    addressId == t.id && $scope.addresses.splice(a, 1);
                });
                util.message("收货地址删除成功", "", "success");
            } else {
                1 == data.message.errno && util.message(t.message.message, "", "error");
            }
        });
    };

    $scope.setDefaultAdd = function (addressId) {
        $http.post(a.links.setDefaultAddressUrl, {
            id: addressId,
            uid: $scope.uid
        }).success(function (t) {

                if (0 == t.message.errno) {
                    angular.forEach($scope.addresses, function (e, t) {
                        addressId == e.id ? e.isdefault = 1 : e.isdefault = 0
                    });
                    util.message("设置成功", "", "success");
                } else {
                    util.message("设置失败", "", "success");

                }
            }
        );
    };

    $scope.changeImage = function (t) {
        "avatar" == t && require(["fileUploader"], function (fileUploader) {
            fileUploader.init(function (a) {
                $scope.profile.avatar = a.attachment;
                $scope.profile.avatarUrl = a.url;
                $scope.$apply($scope.profile);
                $scope.httpChange(t);
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $scope.editInfo = function (field, fieldVaule) {
        $scope.userOriginal = {};

        if ("other_field" == field) {
            $scope.userOriginal[fieldVaule] = $scope.profile[fieldVaule];
            $scope.other_field_name = $scope.all_fields[fieldVaule];
            $scope.other_field_title = fieldVaule;
        } else {
            $scope.userOriginal[field] = fieldVaule;
        }
    };

    $scope.httpChange = function (field, i) {
        switch (field) {
            case "avatar":
                $http.post(a.links.basePost, {
                    type: field,
                    imgsrc: $scope.profile.avatar
                }).success(function (e) {
                    if (0 == e.message.errno) {
                        util.message("修改成功！", "", "success")
                    } else {
                        -1 == e.message.errno && util.message(e.message.message, e.redirect, "error");
                        1 == e.message.errno && util.message(e.message.message, "", "error");
                    }
                });
                break;
            case "groupid":
            case "gender":
            case "education":
            case "nickname":
            case "realname":
            case "address":
            case "mobile":
            case "qq":
            case "email":
            case "telephone":
            case "msn":
            case "taobao":
            case "alipay":
            case "graduateschool":
            case "grade":
            case "studentid":
            case "revenue":
            case "position":
            case "occupation":
            case "company":
            case "nationality":
            case "height":
            case "weight":
            case "idcard":
            case "zipcode":
            case "site":
            case "affectivestatus":
            case "lookingfor":
            case "bio":
            case "interest":
            case "constellation":
            case "zodiac":
            case "bloodtype":
                $("#" + field).modal("hide");
                if ("" == $scope.userOriginal[field]) {
                    util.message("不可为空！", "", "error");
                    return false;
                }
                if ("mobile" == field && !/^\d{11}$/.test($scope.userOriginal[field])) {
                    util.message("手机号格式错误", "", "error");
                    return false;
                }
                $http.post(a.links.basePost, {
                    type: field,
                    request_data: $scope.userOriginal[field]
                }).success(function (t) {
                    0 == t.message.errno ? ($scope.profile[field] = $scope.userOriginal[field],
                        util.message("修改成功！", "", "success")) : (-1 == t.message.errno && util.message(t.message.message, t.redirect, "error"),
                    1 == t.message.errno && util.message(t.message.message, "", "error"))
                });
                break;
            case "other_field":
                $("#" + field).modal("hide");
                if ("" == $scope.userOriginal[$scope.other_field_title]) {
                    util.message("不可为空！", "", "error");
                    return false;
                }
                $http.post(a.links.basePost, {
                    type: $scope.other_field_title,
                    request_data: $scope.userOriginal[$scope.other_field_title]
                }).success(function (t) {
                    0 == t.message.errno ? ($scope.profile[$scope.other_field_title] = $scope.userOriginal[$scope.other_field_title],
                        util.message("修改成功！", "", "success")) : (-1 == t.message.errno && util.message(t.message.message, t.redirect, "error"),
                    1 == t.message.errno && util.message(t.message.message, "", "error"))
                });
                break;
            case "births":
                $(".modal").modal("hide");
                var s = $(".tpl-year").val()
                    , o = $(".tpl-month").val()
                    , r = $(".tpl-day").val();
                $http.post(a.links.basePost, {
                    type: field,
                    birthyear: s,
                    birthmonth: o,
                    birthday: r
                }).success(function (t) {
                    0 == t.message.errno ? ($scope.profile.births = s + "-" + o + "-" + r,
                        util.message("修改成功！", "", "success")) : (-1 == t.message.errno && util.message(t.message.message, t.redirect, "error"),
                    1 == t.message.errno && util.message(t.message.message, "", "error"))
                });
                break;
            case "resides":
                $(".modal").modal("hide");
                var l = $(".tpl-province").eq(0).val()
                    , c = $(".tpl-city").eq(0).val()
                    , u = $(".tpl-district").eq(0).val();
                $http.post(a.links.basePost, {
                    type: field,
                    resideprovince: l,
                    residecity: c,
                    residedist: u
                }).success(function (t) {
                    0 == t.message.errno ? ($scope.profile.resides = $scope.profile.nationality + l + c + u,
                        util.message("修改成功！", "", "success")) : (-1 == t.message.errno && util.message(t.message.message, t.redirect, "error"),
                    1 == t.message.errno && util.message(t.message.message, "", "error"))
                });
                break;
            case "password":
                $(".modal").modal("hide");
                var d = $(".new-password").val()
                    , p = $(".renew-password").val();
                if ("" == d)
                    return util.message("新密码不可为空！"),
                        false;
                if ("" == p)
                    return util.message("确认新密码不可为空！"),
                        false;
                if (d != p)
                    return util.message("两次密码不一致！"),
                        false;
                $http.post(a.links.basePost, {
                    type: field,
                    password: d
                }).success(function (e) {
                    0 == e.message.errno ? util.message("密码修改成功！") : (-1 == e.message.errno && util.message(e.message.message, e.redirect, "error"),
                    1 == e.message.errno && util.message(e.message.message, "", "error"))
                })
        }
    }
}
]);

angular.module("menuApp", ["we7app"]);

angular.module("menuApp").controller("menuDisplay", ["$scope", "config", "$http", function ($scope, config, a) {

    $scope.changeStatus = function (e, n, i) {
        n = 1 == n ? 2 : 1;
        3 == i && (1 == n ? $(".js-switch-" + e).addClass("switchOn") : 2 == n && $(".js-switch-" + e).removeClass("switchOn"));

        a.post(config.push_url, {
            id: e
        }).success(function (e) {
            0 == e.message.errno ? util.message(e.message.message, e.redirect) : 3 == i ? util.message(e.message.message, "error") : util.message(e.message.message, e.redirect, "error")
        });
    }
}
]);

angular.module("menuApp").controller("conditionMenuDesigner", ["$scope", "config", "$http", function ($scope, config, a) {
    current_menu_url = config.current_menu_url;

    require(["underscore", "jquery.ui", "jquery.caret", "district"], function (underscore, jqueryUi, jqueryCaret, a) {
        jqueryUi(".tpl-district-container").each(function () {
            var e = {};
            e.province = jqueryUi(this).find(".tpl-province")[0],
                e.city = jqueryUi(this).find(".tpl-city")[0];
            var n = {};
            n.province = jqueryUi(e.province).data("value"),
                n.city = jqueryUi(e.city).data("value"),
                a.render(e, n, {
                    withTitle: true,
                    wechat: true
                })
        });
        jqueryUi(".sub-designer-y").sortable({
            items: ".sub-js-sortable",
            axis: "y",
            cancel: ".sub-js-not-sortable"
        });
        jqueryUi(".designer-x").sortable({
            items: ".js-sortable",
            axis: "x"
        });
    });

    $scope.context = {};
    $scope.context.group = config.group;
    config.id > 0 && 1 != config.type && 1 == config.status && ($scope.context.group.disabled = 1);

    $scope.initGroup = function () {
        $scope.context.group = {
            title: "",
            type: config.type,
            button: [{
                name: "菜单名称",
                type: "click",
                url: "",
                key: "",
                media_id: "",
                appid: "",
                pagepath: "",
                sub_button: []
            }],
            matchrule: {
                sex: 0,
                client_platform_type: 0,
                group_id: -1,
                country: "",
                province: "",
                city: "",
                language: ""
            }
        }
    };

    $scope.context.group && $scope.context.group.button || $scope.initGroup();

    $scope.$watch("context.group.matchrule.province", function (e, t) {
        "" == e ? $(".tpl-city").hide() : $(".tpl-city").show()
    });

    $scope.context.activeIndex = 0;
    $scope.context.activeBut = $scope.context.group.button[$scope.context.activeIndex];
    $scope.context.activeItem = $scope.context.activeBut;
    $scope.context.activeType = 1;

    $scope.context.remove = function () {
        return !!confirm("删除默认菜单会清空所有菜单记录，确定吗？") && (location.href = config.delete_url, false)
    };

    $scope.context.submit = function (n) {
        var i = $scope.context.group;
        i.button = _.sortBy(i.button, function (e) {
            return $(':hidden[data-role="parent"][data-hash="' + e.$$hashKey + '"]').parent().index()
        });

        angular.forEach(i.button, function (e) {
            e.sub_button = _.sortBy(e.sub_button, function (e) {
                return $(':hidden[data-role="sub"][data-hash="' + e.$$hashKey + '"]').parent().index()
            })
        });
        $(':hidden[name="menu_media"]').val();
        if (!$.trim(i.title))
            return util.message("没有设置菜单组名称", "", "error"),
                false;
        if (2 == config.type && !(i.matchrule.sex || i.matchrule.client_platform_type || -1 != i.matchrule.group_id || i.matchrule.province || i.matchrule.city))
            return util.message("没有设置个性化菜单的匹配规则", "", "error"),
                false;
        if (i.button.length < 1)
            return util.message("没有设置菜单", "", "error"),
                false;
        var s = {
            name: "",
            action: ""
        };
        angular.forEach(i.button, function (e, t) {
            "" == $.trim(e.name) && (this.name += "第" + (t + 1) + "个一级菜单未设置菜单名称<br>"),
                e.sub_button.length > 0 ? angular.forEach(e.sub_button, function (a, n) {
                    "" == $.trim(a.name) && (this.name += "第" + (t + 1) + "个一级菜单中的第" + (n + 1) + "个二级菜单未设置菜单名称<br>"),
                    "view" == a.type && a.url.indexOf("http") < 0 && (this.action += "第" + (t + 1) + "个一级菜单中的第" + (n + 1) + "个二级菜单跳转链接缺少http标识<br>"),
                    "miniprogram" == a.type && ("" == $.trim(a.appid) && (this.action += "第" + (t + 1) + "个一级菜单中的第" + (n + 1) + "个二级菜单需设置APPID<br>"),
                    "" == $.trim(a.pagepath) && (this.action += "第" + (t + 1) + "个一级菜单中的第" + (n + 1) + "个二级菜单需设置页面跳转地址<br>"),
                    "" == $.trim(a.url) && (this.action += "第" + (t + 1) + "个一级菜单中的第" + (n + 1) + "个二级菜单需设置备用页跳转地址<br>")),
                    ("view" == a.type && "" == $.trim(a.url) || "click" == a.type && "" == a.media_id && "" == a.key || "view" != a.type && "click" != a.type && "miniprogram" != a.type && "" == $.trim(a.key)) && (this.action += "菜单【" + e.name + "】的子菜单【" + a.name + "】未设置操作选项. <br />")
                }, s) : ("view" == e.type && e.url.indexOf("http") < 0 && (this.action += "菜单【" + e.name + "】跳转链接缺少http标识. <br />"),
                "miniprogram" == e.type && ("" == $.trim(e.appid) && (this.action += "菜单【" + e.name + "】需设置APPID. <br />"),
                "" == $.trim(e.pagepath) && (this.action += "菜单【" + e.name + "】需设置页面跳转地址. <br />"),
                "" == $.trim(e.url) && (this.action += "菜单【" + e.name + "】需设置备用页跳转地址. <br />")),
                ("view" == e.type && "" == $.trim(e.url) || "click" == e.type && "" == e.media_id && "" == e.key || "view" != e.type && "click" != e.type && "miniprogram" != e.type && "" == $.trim(e.key)) && (this.action += "菜单【" + e.name + "】不存在子菜单并且未设置操作选项. <br />"))
        }, s),
            s.name ? util.message(s.title, "", "error") : s.action ? util.message(s.action, "", "error") : ($("#btn-submit").attr("disabled", true),
                a.post(location.href, {
                    group: i,
                    method: "post",
                    submit_type: n
                }).success(function (e) {
                    0 != e.message.errno ? ($("#btn-submit").attr("disabled", false),
                        util.message(e.message.message, "", "error")) : util.message("创建菜单成功. ", e.redirect, "success")
                }))
    };

    $scope.context.triggerActiveBut = function (t) {
        var a = $.inArray(t, $scope.context.group.button);
        if (-1 == a)
            return false;
        $scope.context.activeIndex = a,
            $scope.context.activeBut = $scope.context.group.button[$scope.context.activeIndex],
            $scope.context.activeItem = $scope.context.activeBut,
            $scope.context.activeType = 1,
            $scope.context.activeItem.forceHide = 0
    };

    $scope.context.editBut = function (t, n, i) {
        $scope.context.triggerActiveBut(n),
            t ? ($scope.context.activeItem = t,
                $scope.context.activeType = 2) : ($scope.context.activeItem = n,
                $scope.context.activeType = 1),
            1 == $scope.context.activeType && $scope.context.activeItem.sub_button.length > 0 ? $scope.context.activeItem.forceHide = 1 : $scope.context.activeItem.forceHide = 0,
        i && ($scope.context.activeItem.material = [],
        "view" != $scope.context.activeItem.type && "click" != $scope.context.activeItem.type && ($scope.context.activeItem.key ? current_type = $scope.context.activeItem.key.substr(0, 6) : current_type = "click",
            "module" == current_type ? $scope.context.activeItem.etype = "module" : $scope.context.activeItem.etype = "click"),
            a.post(current_menu_url, {
                current_menu: $scope.context.activeItem
            }).success(function (t) {
                0 == t.message.errno && $scope.context.activeItem.material.push(t.message.message)
            }))
    };

    $scope.context.addBut = function () {
        if (!($scope.context.group.button.length >= 3)) {
            $scope.context.group.button.push({
                name: "菜单名称",
                type: "click",
                url: "",
                key: "",
                media_id: "",
                appid: "",
                pagepath: "",
                sub_button: []
            });
            var t = $scope.context.group.button[$scope.context.group.button.length - 1];
            $scope.context.triggerActiveBut(t),
                $(".designer-x").sortable({
                    items: ".js-sortable",
                    axis: "x"
                })
        }
    };

    $scope.context.removeBut = function (t, a) {
        if (1 == a) {
            if (!confirm("将同时删除所有子菜单,是否继续"))
                return false;
            $scope.context.group.button = _.without($scope.context.group.button, t),
                $scope.context.triggerActiveBut($scope.context.group.button[0])
        } else
            $scope.context.activeBut.sub_button = _.without($scope.context.activeBut.sub_button, t),
                $scope.context.triggerActiveBut($scope.context.activeBut);
        $scope.context.activeItem.sub_button.length > 0 ? $scope.context.activeItem.forceHide = 1 : $scope.context.activeItem.forceHide = 0
    };

    $scope.context.addSubBut = function (t) {
        if (1 == $scope.context.group.disabled)
            return false;
        $scope.context.triggerActiveBut(t),
        $scope.context.activeBut.sub_button.length >= 5 || ($scope.context.activeBut.sub_button.push({
            name: "子菜单名称",
            type: "click",
            url: "",
            key: "",
            appid: "",
            pagepath: "",
            media_id: ""
        }),
            $(".sub-designer-y").sortable({
                items: ".sub-js-sortable",
                axis: "y",
                cancel: ".sub-js-not-sortable"
            }),
            $scope.context.activeItem = $scope.context.activeBut.sub_button[$scope.context.activeBut.sub_button.length - 1],
            $scope.context.activeType = 2,
            $scope.context.activeItem.forceHide = 0)
    };

    $scope.context.selectEmoji = function () {
        util.emojiBrowser(function (t) {
            var a = "::" + t.find("span").text() + "::";
            $("#title").setCaret(),
                $("#title").insertAtCaret(a),
                $scope.context.activeItem.name = $("#title").val(),
                $scope.$digest()
        })
    };

    $scope.context.select_link = function () {
        $(this).parent().prev();
        util.linkBrowser(function (a) {
            var n = config.site_url;
            "tel:" != a.substring(0, 4) ? (-1 == a.indexOf("http://") && -1 == a.indexOf("https://") && (a = n + "app" + (a = a.replace("./index.php?", "/index.php?"))),
                $scope.context.activeItem.url = a,
                $scope.$digest()) : util.message("自定义菜单不能设置为一键拨号")
        })
    };

    $scope.context.search = function () {
        var a = $("#ipt-forward").val();
        $.post(config.search_key_url, {
            key_word: a
        }, function (t) {
            var a = (t = $.parseJSON(t)).length
                , n = "";
            if (a > 0)
                for (var i = 0; i < a; i++)
                    n += '<li><a href="javascript:;">' + t[i] + "</a></li>";
            else
                n += '<li><a href="javascript:;" id="no-result">没有找到您输入的关键字</a></li>';
            $("#key-result ul").html(n),
                $('#key-result ul li a[id!="no-result"]').click(function () {
                    $("#ipt-forward").val($(this).html()),
                        $scope.context.activeItem.key = $(this).html(),
                        $("#key-result").hide()
                }),
                $("#key-result").show()
        })
    };

    $scope.context.select_mediaid = function (t, a) {
        var n = {
            type: t,
            isWechat: true,
            needType: 1
        };
        util.material(function (n) {
            $scope.context.activeItem.key = "",
                $scope.context.activeItem.media_id = n.media_id,
                $scope.context.activeItem.material = [],
                "keyword" == t ? ($scope.context.activeItem.material.push(n),
                    $scope.context.activeItem.material[0].type = "keyword",
                    $scope.context.activeItem.key = "keyword:" + n.content,
                    $scope.context.activeItem.media_id = "",
                "1" == a && ($scope.context.activeItem.material[0].etype = "click",
                    $scope.context.activeItem.material[0].name = n.name,
                    $scope.context.activeItem.material[0].content = n.content)) : "image" == t ? $scope.context.activeItem.material.push(n) : "news" == t ? $scope.context.activeItem.material.push(n) : "voice" == t ? $scope.context.activeItem.material.push(n) : "video" == t ? $scope.context.activeItem.material.push(n) : "module" == t && ($scope.context.activeItem.key = "module:" + n.name,
                    $scope.context.activeItem.material.push(n),
                    $scope.context.activeItem.material[0].module_type = $scope.context.activeItem.material[0].type,
                    $scope.context.activeItem.material[0].type = "module",
                    $scope.context.activeItem.material[0].etype = "module"),
                $scope.$digest()
        }, n)
    };

    $scope.context.editBut("", $scope.context.group.button[0], $scope.context.group.id)
}
]);

angular.module("messageApp", ["we7app"]);

angular.module("messageApp").controller("messageNoticeCtrl", ["$scope", "$http", "config", function ($scope, $http, config) {

    $scope.type = config.type; // 通知类型
    $scope.lists = config.lists; // 通知列表
    $scope.is_read = config.is_read; // 通知是否已经读取
    $scope.all_read_url = config.all_read_url; // 把所有通知标记为已读链接

    $scope.allRead = function () {
        $http.post($scope.all_read_url, {
            type: $scope.type
        }).success(function (e) {
            util.message(e.message.message, e.redirect, "ajax");
        })
    }
}
]);

angular.module("moduleApp", ["we7app", "infinite-scroll"]); // 无限滚动

angular.module("moduleApp").controller("ModuleMoreCtrl", ["$scope", "config", function ($scope, config) {
    $scope.activeLetter = "";
    $scope.searchModule = function (e) {
        location.href = config.searchurl + "&letter=" + e;
    }
}
]).controller("moduleGroupCtrl", ["$scope", function ($scope) {
    $scope.changeText = function ($event) {
        var text = $event.target.text;
        $event.target.text = "展开" == text ? "收起" : "展开"
    }
}
]).controller("moduleGroupPostCtrl", ["$scope", "$http", "config", function ($scope, $http, config) {

    function selecteModule(modules, allmodulesel, n) {
        $scope.selectedModules = [];
        if (!allmodulesel) {
            $scope.selectedModules = [];
            angular.forEach(modules, function (e) {
                e.selected = false
            });
            return void 0;
        }
        angular.forEach(modules, function (module) {
            module.selected = true;
            $scope.selectedModules.push(module);
            module.main_module && "" != module.main_module && void 0 != modules[module.main_module] && $scope.selectedModules.push(modules[module.main_module]);
        });
    }

    $scope.config = config;
    $scope.moduleGroup = null === config.moduleGroup ? {
        title: ""
    } : config.moduleGroup;
    $scope.groupHaveModuleApp = 0 == config.groupHaveModuleApp.length ? {} : config.groupHaveModuleApp;
    $scope.groupHaveModuleWxapp = 0 == config.groupHaveModuleWxapp.length ? {} : config.groupHaveModuleWxapp;
    $scope.groupHaveModuleWebapp = 0 == config.groupHaveModuleWebapp.length ? {} : config.groupHaveModuleWebapp;
    $scope.groupHaveModulePhoneapp = 0 == config.groupHaveModulePhoneapp.length ? {} : config.groupHaveModulePhoneapp;
    $scope.groupNotHaveModuleApp = config.groupNotHaveModuleApp;
    $scope.groupNotHaveModuleWxapp = config.groupNotHaveModuleWxapp;
    $scope.groupNotHaveModuleWebapp = config.groupNotHaveModuleWebapp;
    $scope.groupNotHaveModulePhoneapp = config.groupNotHaveModulePhoneapp;
    $scope.groupHaveTemplate = 0 == config.groupHaveTemplate.length ? {} : config.groupHaveTemplate;
    $scope.groupNotHaveTemplate = config.groupNotHaveTemplate; //TODO
    $scope.selectedModules = [];
    $scope.allmodulesel = false;
    $scope.allwxappsel = false;
    $scope.alltemplatesel = false;
    $scope.allwebsel = false;
    $scope.keyword = "";

    /**
     * 根据模块标题过滤待选择模块
     * @param keyword
     */
    $scope.filterKeyword = function (keyword) {
        angular.forEach($scope.groupNotHaveModuleApp, function (module) {
            module.hide = false;
            "" != keyword && -1 == module.title.indexOf(keyword) && (module.hide = true);
        })
    };

    $scope.addModule = function () {
        $("#add_module").modal("show")
    };

    $scope.addModuleWxapp = function () {
        $("#add_module_wxapp").modal("show")
    };

    $scope.addTemplate = function () {
        $("#add_template").modal("show")
    };

    $scope.addModuleWebapp = function () {
        $("#add_module_webapp").modal("show")
    };

    $scope.addModulePhoneapp = function () {
        $("#add_module_phoneapp").modal("show")
    };

    $scope.selectOrCancelModule = function (module, type) {
        module.selected = !module.selected;
        module.selected ? $scope.selectModule(module, type) : $scope.cancleModule(module, type);
    };

    $scope.selecteAllModule = function (allmodulesel) {
        selecteModule($scope.groupNotHaveModuleApp, allmodulesel)
    };

    $scope.selecteAllWxapp = function (allmodulesel) {
        selecteModule($scope.groupNotHaveModuleWxapp, allmodulesel)
    };

    $scope.selecteAllTemplate = function (allmodulesel) {
        selecteModule($scope.groupNotHaveTemplate, allmodulesel)
    };

    $scope.selecteAllWebapp = function (allmodulesel) {
        selecteModule($scope.groupNotHaveModuleWebapp, allmodulesel)
    };

    $scope.selecteAllPhoneapp = function (allmodulesel) {
        selecteModule($scope.groupNotHaveModulePhoneapp, allmodulesel)
    };

    $scope.selectModule = function (module, type) {
        $scope.selectedModules.push(module);
        "module" == type && "" != module.main_module && void 0 != $scope.groupNotHaveModuleApp[module.main_module] && $scope.selectedModules.push($scope.groupNotHaveModuleApp[module.main_module]);

        if ("module" == type) {
            $scope.selectedModules.length >= _.values($scope.groupNotHaveModuleApp).length && ($scope.allmodulesel = true);
        } else if ("module_wxapp" == type) {
            $scope.selectedModules.length == _.values($scope.groupNotHaveModuleWxapp).length && ($scope.allwxappsel = true);
        } else if ("module_webapp" == type) {
            $scope.selectedModules.length == _.values($scope.groupNotHaveModuleWebapp).length && ($scope.allwebappsel = true);
        } else if ("module_phoneapp" == type) {
            $scope.selectedModules.length == _.values($scope.groupNotHaveModulePhoneapp).length && ($scope.allphoneappsel = true);
        } else {
            $scope.selectedModules.length == _.values($scope.groupNotHaveTemplate).length && ($scope.alltemplatesel = true);
        }

    };

    $scope.cancleModule = function (t, type) {

        have_plugin = false;
        angular.forEach($scope.selectedModules, function (module) {
            module.main_module == t.name && (have_plugin = true)
        });
        if (1 == have_plugin) return false;
        var n = _.indexOf($scope.selectedModules, t);
        n > -1 && ($scope.selectedModules = _.without($scope.selectedModules, $scope.selectedModules[n]));

        if ("module" == type) {
            $scope.allmodulesel = false;
        } else if ("module_wxapp" == type) {
            $scope.allwxappsel = false;
        } else if ("module_webapp" == type) {
            $scope.allwebappsel = false;
        } else if ("module_phoneapp" == type) {
            $scope.allphoneappsel = false;
        } else {
            $scope.alltemplatesel = false;
        }
    };

    $scope.addHaveModule = function () {
        angular.forEach($scope.selectedModules, function (module, a) {
            delete $scope.groupNotHaveModuleApp[module.name];
            $scope.groupHaveModuleApp[module.name] = module;
        });
        $scope.selectedModules = [];
        $("#add_module").modal("hide");
        $scope.allmodulesel = false;
    };

    $scope.addHaveModuleWxapp = function () {
        angular.forEach($scope.selectedModules, function (module, a) {
            delete $scope.groupNotHaveModuleWxapp[module.name];
            $scope.groupHaveModuleWxapp[module.name] = module;
        });
        $scope.selectedModules = [];
        $("#add_module_wxapp").modal("hide");
        $scope.allwxappsel = false;
    };

    $scope.addHaveTemplate = function () {
        angular.forEach($scope.selectedModules, function (t, a) {
            delete $scope.groupNotHaveTemplate[t.name];
            $scope.groupHaveTemplate[t.name] = t;
        }),
            $scope.selectedModules = [];
        $("#add_template").modal("hide");
    };

    $scope.addHaveModuleWebapp = function () {
        angular.forEach($scope.selectedModules, function (module, a) {
            delete $scope.groupNotHaveModuleWebapp[module.name];
            $scope.groupHaveModuleWebapp[module.name] = module;
        }),
            $scope.selectedModules = [];
        $("#add_module_webapp").modal("hide");
    };

    $scope.addHaveModulePhoneapp = function () {
        angular.forEach($scope.selectedModules, function (module, a) {
            delete $scope.groupNotHaveModulePhoneapp[module.name];
            $scope.groupHaveModulePhoneapp[module.name] = module;
        });
        $scope.selectedModules = [];
        $("#add_module_phoneapp").modal("hide");
    };

    /**
     * 删除已有模块
     * @param module
     */
    $scope.delHaveModule = function (module) {
        module.selected = false;
        delete $scope.groupHaveModuleApp[module.name];
        $scope.groupNotHaveModuleApp[module.name] = module;

        if ("" != module.plugin) {
            angular.forEach($scope.groupHaveModuleApp, function (module) {
                if (module.main_module == module.name) {
                    delete $scope.groupHaveModuleApp[module.name];
                    $scope.groupNotHaveModuleApp[module.name] = module;
                }
            });
        }
    };

    $scope.delHaveModuleWxapp = function (module) {
        module.selected = false;
        delete $scope.groupHaveModuleWxapp[module.name];
        $scope.groupNotHaveModuleWxapp[module.name] = module;
    };

    $scope.delHaveModuleWebapp = function (module) {
        module.selected = false;
        delete $scope.groupHaveModuleWebapp[module.name];
        $scope.groupNotHaveModuleWebapp[module.name] = module;
    };

    $scope.delHaveModulePhoneapp = function (module) {
        module.selected = false;
        delete $scope.groupHaveModulePhoneapp[module.name];
        $scope.groupNotHaveModulePhoneapp[module.name] = module;
    };

    $scope.delHaveTemplate = function (template) {
        template.selected = false;
        delete $scope.groupHaveTemplate[template.name];
        $scope.groupNotHaveTemplate[template.name] = template;
    };

    $scope.cancel = function (id) {
        angular.forEach($scope.selectedModules, function (module) {
            module.selected = false
        });
        $scope.selectedModules = [];
        $scope.allmodulesel = false;
        $scope.allwxappsel = false;
        $scope.alltemplatesel = false;
        $scope.allwebappsel = false;
        $scope.allphoneappsel = false;
        $("#" + id).modal("hide");
    };

    $scope.saveGroup = function () {
        var a = [];
        angular.forEach($scope.groupHaveModuleApp, function (module, t) {
            a.push(module.name);
        });
        var n = [];
        angular.forEach($scope.groupHaveModuleWxapp, function (module, t) {
            n.push(module.name);
        });
        var data = {
            id: $scope.moduleGroup.id,
            name: $scope.moduleGroup.name,
            modules: a,
            wxapp: n,
            templates: $scope.groupHaveTemplate,
            webapp: $scope.groupHaveModuleWebapp,
            phoneapp: $scope.groupHaveModulePhoneapp
        };
        if ("" === data.name || void 0 === data.name) {
            util.message("请输入套餐名", "", "info");
            return false;
        }
        $http({
            method: "POST",
            url: $scope.config.url,
            data: data,
            beforeSend: function () {
                $(".loader").show();
            },
            complete: function () {
                $(".loader").hide();
            }
        }).success(function (e) {
            if (1 == e.message.errno) {
                util.message(e.message.message);
                return false;
            }
            util.message("提交成功", e.redirect, "success");
        })
    }
}
]).controller("installedCtrl", ["$scope", "$http", "config", "$sce", function ($scope, $http, a, $sce) {
    $scope.config = a;
    $scope.isFounder = a.isFounder;
    $scope.letters = ["全部"];

    angular.forEach(a.letters, function (t) {
        $scope.letters.push(t);
    });

    $scope.letter = a.letter;
    $scope.module_list = a.module_list;
    $scope.allModules = a.allModules;
    $scope.moduleinfo = {};
    $scope.cloudModule = a.cloudModule;
    $scope.upgradeInfo = {};
    $scope.pager = a.pager;
    $scope.new_branch = 0;
    $scope.upgrade_branch = 0;
    $scope.welcome_module = a.welcome_module;

    $scope.change_welcome_module = function (n) {
        n == $scope.welcome_module && (n = "");
        $http.post(a.set_site_welcome_url, {
            name: n
        }).success(function (t) {
            if (0 != t.message.errno)
                return util.message(t.message.message, "", "error"),
                    false;
            $scope.welcome_module = n,
                util.message("设置成功", "", "success")
        })
    };

    check_module = [];

    angular.forEach($scope.module_list, function (e, t) {
        check_module.push(t)
    });

    $http.post($scope.config.checkUpgradeUrl, {
        module_list: check_module
    }).success(function (e) {
    });

    // 注意，这是控制器内部函数
    filter = function (type, i) {
        if ("new_branch" == type || "upgrade_branch" == type) {
            $scope[type] = 1 == $scope[type] ? 0 : 1;
        }
        $http.post($scope.config.filterUrl, {
            condition: {
                new_branch: $scope.new_branch,
                upgrade_branch: $scope.upgrade_branch
            },
            pageindex: i
        }).success(function (t) {
            $scope.module_list = t.message.message.modules;
            $scope.pager = $sce.trustAsHtml(t.message.message.pager);
        })
    };

    $scope.searchLetter = function (letter) {
        $(':hidden[name="letter"]').val(letter);
        $("#search").click();
    };

    // 作废？？
    $scope.editModule = function (mid) {
        $("#module-info").modal("show"),
        "" != mid && $http.post($scope.config.editModuleUrl, {
            mid: mid
        }).success(function (t) {
            $scope.moduleinfo = t.message.message,
                $scope.moduleinfo.logo = $scope.moduleinfo.logo + "?v=" + (new Date).getTime(),
                $scope.moduleinfo.preview = $scope.moduleinfo.preview + "?v=" + (new Date).getTime()
        })
    };

    $scope.changePicture = function (t) {
        require(["fileUploader"], function (a) {
            a.init(function (a) {
                $scope.moduleinfo[t] = a.url,
                    $scope.$apply($scope.moduleinfo)
            }, {
                type: "image",
                direct: true,
                multiple: false
            })
        })
    };

    $scope.delPicture = function (t) {
        $scope.moduleinfo[t] = ""
    };

    $scope.save = function () {
        $http.post($scope.config.saveModuleUrl, {
            moduleinfo: $scope.moduleinfo
        }).success(function (t) {
            0 == t.message.message && ($scope.moduleinfo.logo = $scope.moduleinfo.logo + "?v=" + (new Date).getTime(),
                $scope.moduleinfo.preview = $scope.moduleinfo.preview + "?v=" + (new Date).getTime(),
                $scope.module_list[$scope.moduleinfo.name].title = $scope.moduleinfo.title,
                $scope.module_list[$scope.moduleinfo.name].logo = $scope.moduleinfo.logo)
        })
    };

    $scope.setUpgradeInfo = function (a) {
        $http.post($scope.config.get_upgrade_info_url, {
            name: a
        }).success(function (t) {
            0 == t.message.errno ? ($scope.upgradeInfo = t.message.message,
                $("#upgrade-info").modal("show")) : 1 == t.message.errno && ($("#upgrade-info").modal("show"),
                $("#upgrade-info").html(t.message.message),
                util.message(t.message.message))
        })
    }
}
]).controller("notInstalledCtrl", ["$scope", "config", function ($scope, config) {
    $scope.letters = ["全部"];
    angular.forEach(config.letters, function (t) {
        $scope.letters.push(t);
    });
    $scope.letter = config.letter;
    $scope.module_list = config.module_list;
    $scope.searchLetter = function (e) {
        $(':hidden[name="letter"]').val(e),
            $("#search").click()
    };
}
]).controller("detailCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.config = a;
    $scope.isFounder = a.isFounder;
    $scope.receive_ban = a.receive_ban;
    $scope.moduleinfo = a.moduleInfo;
    $scope.subscribe = 2;
    $scope.checkupgrade = 0;
    $scope.show = a.show;
    $scope.editType = "";

    $http.post($scope.config.checkReceiveUrl, {
        module_name: a.modulename
    }).success(function (t) {
        0 == t.message.errno && ($scope.subscribe = 1)
    });

    $http({
        method: "POST",
        url: $scope.config.checkUpgradeUrl,
        data: {
            module_list: {
                0: a.modulename
            }
        },
        beforeSend: function () {
            "upgrade" == $scope.show && $(".loader").show()
        },
        complete: function () {
            $(".loader").hide()
        }
    }).success(function (a) {
        0 == a.message.errno && (1 != a.message.message[0].upgrade && 1 != a.message.message[0].new_branch || ($scope.checkupgrade = 1,
            "cloud" == a.message.message[0].from ? $http.post($scope.config.get_upgrade_info_url, {
                name: $scope.moduleinfo.name
            }).success(function (t) {
                if (0 == t.message.errno) {
                    $scope.upgradeInfo = t.message.message;
                    var a = (new Date).getTime();
                    a = a.toString().substr(0, 10),
                        $scope.upgradeInfo.service_expiretime > 0 && a > $scope.upgradeInfo.service_expiretime ? $scope.upgradeInfo.service_expire = true : $scope.upgradeInfo.service_expire = false
                } else
                    1 == t.message.errno && util.message(t.message.message)
            }) : $scope.upgradeInfo = a.message.message[0]))
    });

    $scope.changeShow = function (showType) {
        $scope.show = showType
    };

    $scope.changeSwitch = function () {
        $scope.receive_ban = 1 == $scope.receive_ban ? 2 : 1;
        $http.post($scope.config.url, {
            modulename: $scope.config.modulename
        }).success(function (e) {
            0 == e.message.errno && util.message("更新成功！")
        })
    };

    $scope.editModule = function (field, fieldValue) {
        $scope.moduleOriginal = {};
        $scope.moduleOriginal[field] = fieldValue;
        $scope.editType = field;
        "preview" == field || "logo" == field ? $scope.changePicture(field) : $("#module-info").modal("show");
    };

    $scope.changePicture = function (t) {
        require(["fileUploader"], function (fileUploader) {
            fileUploader.init(function (a) {
                $scope.moduleOriginal[t] = a.url;
                $scope.moduleinfo[t] = a.url;
                $scope.$apply($scope.moduleOriginal);
                $scope.save();
            }, {
                type: "image",
                direct: true,
                multiple: false
            })
        })
    };

    $scope.delPicture = function (t) {
        $scope.moduleOriginal[t] = ""
    };

    $scope.upgrade = function (e, t, a) {
        window.open("http://s.we7.cc/module-" + a + ".html")
    };

    $scope.notice = function (e, t, a) {
        var n = e ? '升级服务已到期，请到商城<a class="color-default" target="_blank" href="http://s.we7.cc/module-' + t + '.html">续费。' : "确认升级到本分支的最高版本吗";
        return e ? (util.message(n, "", "info", "去续费", "http://s.we7.cc/module-" + t + ".html"),
            false) : !!confirm(n) && void (location.href = "./index.php?c=cloud&a=process&m=" + a + "&is_upgrade=1")
    };

    $scope.save = function () {
        $http.post($scope.config.saveModuleUrl, {
            moduleinfo: $scope.moduleOriginal,
            type: $scope.editType,
            modulename: $scope.moduleinfo.name
        }).success(function (t) {
            0 == t.message.errno ? (util.message("修改成功", "", "success"),
                $scope.moduleinfo[$scope.editType] = $scope.moduleOriginal[$scope.editType],
            "logo" == $scope.editType && ($scope.moduleinfo.logo = $scope.moduleOriginal.logo + "?v=" + (new Date).getTime()),
            "preview" == $scope.editType && ($scope.moduleinfo.preview = $scope.moduleOriginal.preview + "?v=" + (new Date).getTime()),
                $scope.$apply($scope.moduleinfo)) : util.message("修改失败", "", "fail")
        })
    };

    change = function (e) {
        branch = e.data("id"),
            $("#version-detail-" + branch).toggle(),
            clas = "wi wi-angle-down" == e.find("i").prop("class") ? "wi wi-angle-up" : "wi wi-angle-down",
            text = "wi wi-angle-down" == clas ? "查看详情" : "收起",
            e.html(text + '<i class="' + clas + '"></i>')
    };
}
]).controller("templateCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.config = a,
        e.templateList = a.templateList,
        e.upgradeInfo = {},
        e.checkUpgrade = function () {
            t.post(e.config.url, {
                template: e.templateList
            }).success(function (t) {
                0 == t.message.errno && (e.templateList = t.message.message)
            })
        }
        ,
        e.checkUpgrade(),
        e.setUpgradeInfo = function (a) {
            t.post(e.config.get_upgrade_info_url, {
                name: a
            }).success(function (t) {
                0 == t.message.errno ? (e.upgradeInfo = t.message.message,
                    $("#upgradeInfo").modal("show")) : 1 == t.message.errno && util.message(t.message.message)
            })
        }
        ,
        e.upgrade = function (e) {
            return confirm("本次升级需要花费" + e + "个交易币。确认升级？")
        }
}
]).controller("userModuleDisplayCtrl", ["$scope", "$http", "$timeout", "config", function ($scope, $http, a, config) {

    var userModules = config.userModule ? Object.keys(config.userModule) : {};
    $scope.userModule = [];
    $scope.alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "全部"];
    $scope.activeLetter = config.activeLetter;
    $scope.searchKeyword = "";

    /**
     * 显示使用它的统一帐号
     * @param $event
     * @param moduleName
     */
    $scope.showAccounts = function ($event, moduleName) {
        require(["underscore"], function () {
            var s = _.findIndex($scope.userModule, {
                name: moduleName
            });
            $http.post(config.links.moduleAccounts, {
                module_name: moduleName
            }).success(function (t) {
                $scope.userModule[s].accounts = t.message.message;
            });
            var o = $($event.target).parents(".mask").next(".cut-select");
            if ("none" == o.css("display")) {
                o.css("display", "block");
                o.parent(".module-list-item").siblings().find(".cut-select").css("display", "none");
            } else {
                o.css("display", "none");
            }
        })
    };

    $scope.hideSelect = function ($event) {
        $($event.target).css("display", "none");
    };

    /**
     * 按模块名称搜索
     */
    $scope.searchKeywordModule = function () {
        if ($scope.searchKeyword) {
            $scope.keywordModule = [];
            angular.forEach(config.userModule, function (userModule, a) {
                userModule.title.match($scope.searchKeyword) && $scope.keywordModule.push(userModule)
            });
            $scope.userModule = $scope.keywordModule
        } else {
            $scope.userModule = config.userModule;
        }
    };

    /**
     * 按模块名称首字母搜索
     * @param letter
     */
    $scope.searchLetterModule = function (letter) {
        $scope.activeLetter = letter;
        if ("全部" == $scope.activeLetter) {
            $scope.userModule = config.userModule;
        } else {
            $scope.letterModule = [];
            angular.forEach(config.userModule, function (userModule, a) {
                userModule.title_initial == $scope.activeLetter && $scope.letterModule.push(userModule);
            });
            $scope.userModule = $scope.letterModule;
        }
    };

    $scope.getall_last_switch = function () {
        $http.post(config.links.getall_last_switch).success(function (e) {
            var t = e.message.message;
            angular.forEach(config.userModule, function (e, a) {
                config.userModule[a].last_switch = t[e.name]
            });
        });
    };

    /**
     * 无限滚动回调
     * @param currentPage
     * @returns {boolean}
     */
    $scope.addMoreModule = function (currentPage) {
        var a = 15 * (Math.max(1, parseInt(currentPage)) - 1), s = 0;

        if (!(userModules.length < a)) {
            angular.forEach(config.userModule, function (userModule, n) {
                s >= a && s < a + 15 && $scope.userModule.push(userModule); // 增加一页数量
                s++;
            });
            return true;
        }
        return false;
    };

    $scope.currentPage = 1;
    $scope.loadMore = function () {
        $scope.addMoreModule($scope.currentPage);
        $scope.currentPage++;
    };
}
]).controller("subscribeCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.subscribe_module = a.subscribe_module;
    $scope.types = a.types;
    $scope.change_ban_url = a.change_ban_url;
    $scope.check_receive_url = a.check_receive_url;

    $scope.change_ban = function (name) {
        $http.post($scope.change_ban_url, {
            modulename: name
        }).success(function (t) {
            0 != t.message.errno ? util.message(t.message.message, "", "error") : $scope.subscribe_module[name].receive_ban = 1 == $scope.subscribe_module[name].receive_ban ? 0 : 1
        })
    };

    angular.forEach($scope.subscribe_module, function (a, name) {
        $http.post($scope.check_receive_url, {
            module_name: name
        }).success(function (t) {
            0 == t.message.errno && ($scope.subscribe_module[name].subscribe_success = 1)
        })
    });
}
]);

angular.module("paycenterApp", ["cfp.hotkeys"]).controller("microPay", ["$scope", "$timeout", "config", "$http", "hotkeys", "servicePaycenterBase", function (e, t, a, n, i, s) {
    card = $.parseJSON(a.card_set_str),
        i.add({
            combo: "return+up",
            description: "Description goes here",
            allowIn: ["INPUT"],
            callback: function (t, a) {
                e.micro.submit()
            }
        }),
        i.add({
            combo: "esc",
            description: "Description goes here",
            allowIn: ["INPUT"],
            callback: function (t, a) {
                e.micro.reset()
            }
        }),
        i.add({
            combo: "backspace",
            description: "Description goes here",
            allowIn: ["INPUT"],
            callback: function (t, a) {
                e.micro.counter_handler("backspace"),
                    t.preventDefault()
            }
        }),
        i.add({
            combo: "-",
            description: "Description goes here",
            allowIn: ["INPUT"],
            callback: function (t, a) {
                "0" != e.micro.config.fee ? e.micro.mcardPayManage() : util.message("请输入金额", "", "error")
            }
        }),
        i.add({
            combo: "+",
            description: "Description goes here",
            allowIn: ["INPUT"],
            callback: function (t, a) {
                "0" != e.micro.config.fee ? e.micro.wechatPayManage() : util.message("请输入金额", "", "error")
            }
        }),
        nums = ["7", "8", "9", "4", "5", "6", "1", "2", "3", "0", "."],
        e.micro = s.paycenterBaseData(card);

    angular.forEach(nums, function (t, a) {
        i.add({
            combo: t,
            description: "Description goes here",
            allowIn: ["INPUT"],
            callback: function (t, a) {
                e.micro.counter_handler(t.key)
            }
        })
    }),
        e.micro.mcardPayManage = function () {
            $("#mcard-pay").on("shown.bs.modal", function () {
                $(".js-input").focus();
                var t = 2;
                i.add({
                    combo: "return",
                    description: "Description goes here",
                    allowIn: ["INPUT"],
                    callback: function (a, n) {
                        input_count = e.micro.input_count(),
                        t > input_count && e.micro.submit(),
                            $('input[tabindex="' + t + '"]').focus(),
                            t++
                    }
                }),
                    i.del("backspace");

                angular.forEach(nums, function (e, t) {
                    i.del(e)
                })
            }),
                $("#mcard-pay").on("hidden.bs.modal", function () {
                    i.del("return");

                    angular.forEach(nums, function (t, a) {
                        i.add({
                            combo: t,
                            description: "Description goes here",
                            allowIn: ["INPUT"],
                            callback: function (t, a) {
                                e.micro.counter_handler(t.key)
                            }
                        })
                    })
                }),
                $("#mcard-pay").modal("show")
        }
        ,
        e.micro.wechatPayManage = function () {
            $("#wechat-pay").on("shown.bs.modal", function () {
                $(".js-input").focus(),
                    i.add({
                        combo: "return",
                        description: "Description goes here",
                        allowIn: ["INPUT"],
                        callback: function (t, a) {
                            e.micro.submit()
                        }
                    }),
                    i.del("backspace");

                angular.forEach(nums, function (e, t) {
                    i.del(e)
                })
            }),
                $("#wechat-pay").on("hidden.bs.modal", function () {
                    i.del("return");

                    angular.forEach(nums, function (t, a) {
                        i.add({
                            combo: t,
                            description: "Description goes here",
                            allowIn: ["INPUT"],
                            callback: function (t, a) {
                                e.micro.counter_handler(t.key)
                            }
                        })
                    })
                }),
                $("#wechat-pay").modal("show")
        }
        ,
        e.micro.num = function (t) {
            e.micro.counter_handler(t)
        }
        ,
        e.$watch("micro.config.code", function (e, t) {
            e && e.length > 0 && $(".js-pay-warning").html("")
        }),
        e.micro.counter_handler = function (t) {
            if ("backspace" == (t += ""))
                return current_fee_length = e.micro.config.fee.length,
                    void ("1" == current_fee_length ? e.micro.config.fee = "0" : e.micro.config.fee = e.micro.config.fee.substr(0, current_fee_length - 1));
            "clear" != t ? "0" != e.micro.config.fee || "1" != e.micro.config.fee.length || "." == t ? e.micro.config.fee.length >= 9 || 8 == e.micro.config.fee.length && "." == t || e.micro.config.fee.indexOf(".") > -1 && (float = e.micro.config.fee.split("."),
            float[1] && float[1].length >= 2 || "." == t) || (e.micro.config.fee += t) : e.micro.config.fee = t : e.micro.config.fee = "0"
        }
        ,
        e.micro.reset = function () {
            e.micro.config.fee = "0"
        }
        ,
        e.$watch("micro.config.offset_money", function (t, a) {
            var n = Math.floor(e.micro.config.member.credit1 / e.micro.config.card.offset_rate);
            e.micro.config.offset_money = parseInt(t),
            t >= n && (e.micro.config.offset_money = n),
            t || (e.micro.config.offset_money = 0),
                e.micro.config.credit1 = e.micro.config.card.offset_rate * e.micro.config.offset_money,
                e.micro.checkLast_money()
        }),
        e.$watch("micro.config.credit2", function (t, a) {
            reg = /^\d*\.{0,1}\d{0,1}\d{0,1}$/,
            reg.test(t) || (e.micro.config.credit2 = a),
            t > e.micro.config.member.credit2 && (e.micro.config.credit2 = e.micro.config.member.credit2),
                e.micro.checkLast_money()
        }),
        e.$watch("micro.config.last_money", function (t, a) {
            t < 0 && (e.config.last_money = 0),
                e.micro.checkLast_money()
        }),
        e.micro.checkBasic = function () {
            if (!$.trim(e.micro.config.body))
                return util.message("商品名称不能为空"),
                    false;
            var t = /^(([1-9]{1}\d*)|([0]{1}))(\.(\d){1,2})?$/
                , a = $.trim(e.micro.config.fee);
            return t.test(a) ? void 0 : (util.message("支付金额不能少于0.01元"),
                false)
        }
        ,
        e.micro.input_count = function () {
            return input_count = $("#mcard-pay input.js-input").length,
                input_count
        }
        ,
        e.$watch("micro.config.cardsn", function (t, a) {
            11 == t.length ? e.micro.checkCard() : (e.micro.config.member.uid = -1,
                e.micro.config.credit2 = 0,
            t.length > 11 && (e.micro.config.card_error = "会员卡卡号错误"))
        }),
        e.micro.mcardPay = function (t) {
            "0" == e.micro.config.fee ? util.message("请输入金额", "", "error") : (e.micro.config.cardsn = "",
                e.micro.config.member.uid = -1),
                "1" == t ? e.micro.mcardPayManage() : "2" == t && e.micro.wechatPayManage()
        }
        ,
        e.micro.is_showCode = function () {
            Math.floor(e.micro.config.member.credit1 / e.micro.config.card.offset_rate);
            e.micro.config.fact_fee <= e.micro.config.member.credit2 ? e.micro.config.is_showCode = 0 : e.micro.config.card.offset_rate > 0 ? (max = e.micro.config.fact_fee - e.micro.config.member.credit2 - Math.floor(e.micro.config.member.credit1 / e.micro.config.card.offset_rate),
                reg = /^-?[1-9]\d*$/,
                max > 0 ? e.micro.config.is_showCode = 1 : 0 == max ? e.micro.config.is_showCode = 0 : reg.test(max) ? e.micro.config.is_showCode = 0 : e.micro.config.is_showCode = 1) : (max = e.micro.config.fact_fee - e.micro.config.member.credit2,
                max > 0 ? e.micro.config.is_showCode = 1 : e.micro.config.is_showCode = 0)
        }
        ,
        e.micro.checkCard = function () {
            e.micro.checkBasic();
            var t = $.trim(e.micro.config.cardsn);
            if (11 != t.length)
                return util.message("卡号不足11位", "", "error"),
                    false;
            e.micro.config.loading = "加载中..",
                e.micro.config.card_error = "",
                n.post(a.card_check_url, {
                    cardsn: t
                }).success(function (t) {
                    if (e.micro.config.loading = "",
                    -1 != t.message.errno) {
                        e.micro.config.card_error = "",
                            e.micro.config.member = t.message.message,
                            e.micro.config.fact_fee = e.micro.config.fee;
                        var a = parseInt(e.micro.config.fee)
                            , n = parseInt(e.micro.config.member.discount.condition);
                        return e.micro.config.member.discount_type > 0 && e.micro.config.member.discount && a >= n && (1 == e.micro.config.member.discount_type ? (e.micro.config.fact_fee = e.micro.config.fee - e.micro.config.member.discount.discount,
                            e.micro.config.fact_fee = e.micro.config.fact_fee.toFixed(2)) : e.micro.config.fact_fee = e.micro.config.fee * e.micro.config.member.discount.discount,
                        e.micro.config.fact_fee < 0 && (e.micro.config.fact_fee = 0)),
                            e.micro.last_money = e.micro.config.fact_fee,
                            e.micro.checkCredit2(),
                            e.micro.is_showCode(),
                            false
                    }
                    e.micro.config.card_error = t.message.message
                })
        }
        ,
        e.micro.checkCredit2 = function () {
            e.micro.checkLast_money(),
                e.micro.config.credit2 = Math.min.apply(null, [e.micro.config.member.credit2, e.micro.last_money]),
                e.micro.checkLast_money()
        }
        ,
        e.micro.checkLast_money = function () {
            var t = e.micro.config.fact_fee - e.micro.config.credit2 - e.micro.config.offset_money;
            t < 0 && (e.config.last_money = 0),
                e.micro.last_money = t.toFixed(2)
        }
        ,
        e.micro.query = function () {
            if (!e.micro.uniontid)
                return util.message("系统错误", "", "error"),
                    false;
            n.post("{php echo url('paycenter/wxmicro/query');}", {
                uniontid: e.micro.uniontid
            }).success(function (e) {
                0 == e.message.errno ? (util.message("支付成功", "", "success"),
                    location.reload()) : util.message("支付失败:" + e.message.message, "", "error")
            })
        }
        ,
        e.micro.checkpay = function () {
            n.post(a.checkpay_url, {
                uniontid: e.micro.uniontid
            }).success(function (n) {
                console.dir(n),
                    "SUCCESS" == n.message.trade_state ? util.message("支付成功", a.redirect_url, "error") : "NOTPAY" == n.message.trade_state ? util.message("支付失败:用户取消支付", a.redirect_url, "error") : "USERPAYING" == n.message.trade_state ? t(function () {
                        e.micro.checkpay()
                    }, 5e3) : util.message(n.message.trade_state_desc, a.redirect_url, "error")
            })
        }
        ,
        e.micro.submit = function () {
            return !!confirm("确认支付吗?") && ((1 == e.micro.config.is_showCode || e.micro.config.member.uid <= 0) && !$.trim(e.micro.config.code) ? ($(".js-pay-warning").html("支付授权码不能为空"),
                false) : (1 == e.micro.config.is_showCode ? e.micro.config.cash = e.micro.last_money : e.micro.config.cash = 0,
                e.micro.config.member.uid > 0 && (e.micro.checkLast_money(),
                e.micro.last_money - e.micro.config.cash != 0) ? (util.message("支付方式设置的支付金额不等于实际支付金额", "", "error"),
                    false) : void n.post(a.pay_url, e.micro.config).success(function (a) {
                    return 0 == a.message.errno ? util.message(a.message.message, a.redirect, "success") : -1 == a.message.errno ? (util.message("支付失败:" + a.message.message, "", "error"),
                        $('#form1 :text[name="code"]').val("")) : -10 == a.message.errno && ($(".js-userpaying").show(),
                        e.micro.uniontid = a.message.uniontid,
                        t(function () {
                            e.micro.checkpay()
                        }, 5e3)),
                        false
                })))
        }
}
]);

angular.module("paycenterApp").filter("credit1_num", ["$rootScope", function (e) {
    return function (e) {
        return e = Math.floor(e)
    }
}
]);

angular.module("paycenterApp").service("servicePaycenterBase", ["$rootScope", function (e) {
    var t = {}
        , a = {
        config: {
            body: "刷卡支付收款",
            fee: "0",
            cardsn: "",
            card: "",
            credit1: 0,
            credit2: 0,
            last_money: 0,
            offset_money: 0,
            is_showCode: 0,
            loading: "",
            card_error: "",
            member: {
                uid: 0,
                credit2: 0
            },
            nums: [["7", "7"], ["8", "8"], ["9", "9"], ["4", "4"], ["5", "5"], ["6", "6"], ["1", "1"], ["2", "2"], ["3", "3"], ["0", "0"], [".", "."], ["clear", "清除"]]
        }
    };
    return t.paycenterBaseData = function (e) {
        return a.config.card = e,
            a
    }
        ,
        t
}
]);

angular.module("phoneApp", ["we7app"]);

angular.module("phoneApp").controller("phoneCreateCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.uniacid = a.uniacid;
    $scope.version_id = a.version_id;
    $scope.modules = a.modules;
    $scope.selectedModule = a.version_info.modules;
    $scope.phoneappinfo = a.version_info;

    $scope.selectOrCancelModule = function (t) {
        t.selected = !t.selected;
        if (t.selected) {
            $scope.selectedModule = [];
            $scope.selectedModule.push(t);
            $("#add_module").modal("hide");
            return void 0;
        }
    };

    $scope.savePhoneApp = function () {

        if (!$scope.phoneappinfo.name && !$scope.uniacid) {
            util.message("APP名称不可为空！");
            return false;
        } else if (!$scope.phoneappinfo.description) {
            util.message("请填写描述");
            return false;
        } else if ($scope.phoneappinfo.version && /^[0-9]{1,2}\.[0-9]{1,2}(\.[0-9]{1,2})?$/.test($scope.phoneappinfo.version)) {
            $http.post(a.links.create_phone_url, {
                uniacid: $scope.uniacid,
                version_id: $scope.version_id,
                module: $scope.selectedModule,
                name: $scope.phoneappinfo.name,
                description: $scope.phoneappinfo.description,
                version: $scope.phoneappinfo.version
            }).success(function (e) {
                if (0 != e.message.errno) {
                    util.message(e.message.message, "", "error");
                    return false;
                }
                util.message("设置成功", e.redirect, "success");
            });
        } else {
            util.message("版本号错误，只能是数字、点，数字最多两位，例如 1.1.1");
            return false;
        }
    };
}
]);

angular.module("phoneApp").controller("AccountDisplayPhoneappCtrl", ["$scope", "$http", "$timeout", "config", function ($scope, $http, a, config) {
    $scope.phoneapp_lists = config.phoneapp_lists;
    $scope.links = config.links;
    $scope.alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "#", "全部"];
    $scope.activeLetter = config.activeLetter;

    $scope.showVersions = function (e) {
        var t = $(e.target).parents(".mask").next(".cut-select");
        "none" == t.css("display") ? (t.css("display", "block"),
            t.parent(".wxapp-list-item").siblings().find(".cut-select").css("display", "none")) : t.css("display", "none")
    };

    $scope.hideSelect = function (e) {
        $(e.target).css("display", "none");
    };

    $scope.searchModule = function (t) {
        $scope.activeLetter = t;
        a(function () {
            $(".button").click()
        }, 500);
    }
}
]);

angular.module("phoneApp").controller("PhoneappWelcomeCtrl", ["$scope", "$http", "config", function ($scope, $http, config) {
    $scope.notices = config.notices
}
]);

angular.module("phoneApp").controller("AccountManagePhoneappCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.phoneapp_version_lists = a.phoneapp_version_lists;
    $scope.phoneapp_modules = a.phoneapp_modules;
    $scope.version_exist = a.version_exist;

    $scope.delPhoneappVersion = function (e) {
        var e = parseInt(e);
        $http.post(a.links.del_version, {
            version_id: e
        }).success(function (e) {
            0 == e.message.errno ? util.message(e.message.message, e.redirect, "success") : util.message(e.message.message)
        });
    }
}
]);

angular.module("profileApp", ["we7app"]);

angular.module("profileApp").controller("oauthCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {

    $scope.config = a;
    $scope.oauthHost = a.oauthHost;
    $scope.oauthAccount = a.oauthAccount;
    $scope.oauthtitle = a.oauthAccounts[a.oauthAccount];
    $scope.jsOauthAccount = a.jsOauth;
    $scope.jsOauthtitle = a.jsOauthAccounts[a.jsOauth];
    $scope.originalHost = $scope.oauthHost;

    $scope.recover = function () {
        $scope.oauthHost = $scope.originalHost
    };

    $scope.saveOauth = function (type) {
        param = {};
        "oauth" == type && (param = {
            type: "oauth",
            account: $scope.oauthAccount,
            host: $scope.oauthHost
        });
        "jsoauth" == type && (param = {
            type: "jsoauth",
            account: $scope.jsOauthAccount
        });
        $http.post($scope.config.oauth_url, param).success(function (e) {
            0 == e.message.errno ? location.reload() : util.message("域名不合法", "", "error")
        })
    }
}
]).controller("tplCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.tplList = a.tplList;
    $scope.active = "";
    $scope.activetpl = "";

    $scope.changeActive = function (key) {
        $scope.active = key;
        $scope.activetpl = $scope.tplList[key].tpl;
    };

    $scope.saveTpl = function () {
        original_tpl = $scope.tplList[$scope.active].tpl;
        $scope.tplList[$scope.active].tpl = $scope.activetpl;
        $http.post(a.url, {
            tpl: $scope.tplList
        }).success(function (t) {
            1 == t.message.errno ? ($scope.tplList[$scope.active].tpl = original_tpl,
                util.message("请填写正确的" + t.message.message + "模板id", "", "info")) : $(".modal").modal("hide")
        })
    }
}
]).controller("emailCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.config = a;
    $scope.setting = $scope.config.setting;
    $scope.type = void 0 == $scope.setting.smtp ? "163" : $scope.setting.smtp.type;
    $scope.changeType = function (e) {
        var t = $(e)[0].target;
        $(t).attr("type", "password")
    }
}
]).controller("paymentCtrl", ["$scope", "$http", "config", "$timeout", function ($scope, $http, a, $timeout) {
    $scope.config = a;
    $scope.paysetting = a.paysetting;
    $scope.aliaccounthelp = false;
    $scope.alipartnerhelp = false;
    $scope.alisecrethelp = false;

    $scope.saveEdit = function (paytype) {
        if ("wechat_facilitator" == paytype && (true === $scope.paysetting.wechat_facilitator.pay_switch || true === $scope.paysetting.wechat_facilitator.recharge_switch)) {
            if ("" == $scope.paysetting.wechat_facilitator.mchid)
                return util.message("请填写服务商商户号", "", "info"),
                    false;
            if ("" == $scope.paysetting.wechat_facilitator.signkey)
                return util.message("请填写服务商商户支付密钥", "", "info"),
                    false
        }
        if ("alipay" == paytype && (true === $scope.paysetting.alipay.pay_switch || true === $scope.paysetting.alipay.recharge_switch)) {
            if ("" == $scope.paysetting.alipay.partner)
                return util.message("请填写合作者身份", "", "info"),
                    false;
            if ("" == $scope.paysetting.alipay.account)
                return util.message("请填写收款支付宝账号", "", "info"),
                    false;
            if ("" == $scope.paysetting.alipay.secret)
                return util.message("请填写校验密钥", "", "info"),
                    false
        }
        if ("wechat" == paytype) {
            if (1 == $scope.paysetting.wechat.switch)
                if (1 == $scope.paysetting.wechat.version) {
                    if ("" == $scope.paysetting.wechat.partner)
                        return util.message("请填写商户身份", "", "info"),
                            false;
                    if ("" == $scope.paysetting.wechat.key)
                        return util.message("请填写商户秘钥", "", "info"),
                            false;
                    if ("" == $scope.paysetting.wechat.signkey)
                        return util.message("请填写通信秘钥", "", "info"),
                            false
                } else {
                    if ("" == $scope.paysetting.wechat.mchid)
                        return util.message("请填写商户号", "", "info"),
                            false;
                    if ("" == $scope.paysetting.wechat.apikey)
                        return util.message("请填写支付秘钥", "", "info"),
                            false
                }
            if (3 == $scope.paysetting.wechat.switch) {
                if ("" == $scope.paysetting.wechat.service)
                    return util.message("请选择服务商公众号", "", "info"),
                        false;
                if ("" == $scope.paysetting.wechat.sub_mch_id)
                    return util.message("请填写子商户号", "", "info"),
                        false
            }
        }
        if ("unionpay" == paytype) {
            if (1 == $scope.paysetting.unionpay.pay_switch || 1 == $scope.paysetting.unionpay.recharge_switch) {
                if ("" == $scope.paysetting.unionpay.merid)
                    return util.message("请填写商户号", "", "info"),
                        false;
                if ("" == $scope.paysetting.unionpay.signcertpwd)
                    return util.message("请填写商户私钥证书密码", "", "info"),
                        false
            }
            return $("#form1").submit(),
                false
        }
        if ("baifubao" == paytype && (true === $scope.paysetting.baifubao.pay_switch || true === $scope.paysetting.baifubao.recharge_switch)) {
            if ("" == $scope.paysetting.baifubao.mchid)
                return util.message("请填写商户号", "", "info"),
                    false;
            if ("" == $scope.paysetting.baifubao.signkey)
                return util.message("请填写商户支付密钥", "", "info"),
                    false
        }
        if ("line" == paytype && (true === $scope.paysetting.line.pay_switch || true === $scope.paysetting.line.recharge_switch) && "" == $scope.paysetting.line.message)
            return util.message("请填写账户信息", "", "info"),
                false;
        if ("jueqiymf" == paytype && (true === $scope.paysetting.jueqiymf.pay_switch || true === $scope.paysetting.jueqiymf.recharge_switch)) {
            if ("" == $scope.paysetting.jueqiymf.url || void 0 == $scope.paysetting.jueqiymf.url)
                return util.message("请填写一码付后台地址", "", "info"),
                    false;
            if ("" == $scope.paysetting.jueqiymf.mchid || void 0 == $scope.paysetting.jueqiymf.mchid)
                return util.message("请填写商户号", "", "info"),
                    false
        }
        $http.post($scope.config.saveurl, {
            type: paytype,
            param: $scope.paysetting[paytype]
        }).success(function (e) {
            0 == e.message.errno && $(".modal").modal("hide")
        })
    };

    /**
     * 切换开关
     * @param paytype
     * @param operateType 是支付还是充值
     */
    $scope.switchStatus = function (paytype, operateType) {
        paytype && operateType || util.message("参数错误", "", "error");
        $scope.paysetting[paytype][operateType] = !$scope.paysetting[paytype][operateType];
        // 如果是货到付款、余额、混合、汇款支付则不能充值
        "delivery" != paytype && "credit" != paytype && "mix" != paytype && "line" != paytype || ($scope.paysetting[paytype].recharge_switch = false);
        $scope.saveEdit(paytype);
    };

    $scope.check_wechat = function () {
        if (a.account_level < 3 || void 0 != a.services && a.borrows.length < 1 && a.services.length < 1 && 4 != a.account_level || void 0 == a.services && a.borrows.length < 1 && 4 != a.account_level)
            return util.message("您没有有效的微信支付方式", "", "error"),
                false;
        $("#weixin").modal("show")
    };

    $(".modal").on("hide.bs.modal", function () {
        $http.post($scope.config.get_setting_url, {}).success(function (t) {
            $scope.paysetting = t.message.message
        })
    });

    $scope.test_alipay = function () {
        $http.post($scope.config.text_alipay_url, {
            param: $scope.paysetting.alipay
        }).success(function (e) {
            if (null !== e.message.message)
                return location.href = e.message.message,
                    false;
            alert("配置失败")
        })
    };

    $scope.changeSwitch = function (t, a) {
        $scope.paysetting[t].switch = a
    };

    $scope.changeVersion = function (t) {
        $scope.paysetting.wechat.version = t
    };

    $scope.tokenGen = function (t) {
        for (var a = "", n = 0; n < 32; n++)
            a += "abcdefghijklmnopqrstuvwxyz0123456789"[parseInt(32 * Math.random())];
        "wechat_facilitator.signkey" == t && ($scope.paysetting.wechat_facilitator.signkey = a),
        "wechat.apikey" == t && ($scope.paysetting.wechat.apikey = a)
    };
}
]).controller("creditCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.config = a;
    $scope.creditSetting = a.creditSetting;

    $scope.tactics = {
        activity: a.activity,
        currency: a.currency
    };
    $scope.creditTitle = "";
    $scope.activeCredit = "";
    $scope.activeTacticsType = "";
    $scope.enabledCredit = a.enabledCredit;
    $scope.activeTactics = "";
    $scope.syncSetting = a.syncSetting;

    $scope.changeEnabled = function (a) {
        void 0 == $scope.creditSetting[a] && ($scope.creditSetting[a] = {
            title: "",
            enabled: 0
        });
        $scope.creditSetting[a].enabled = 1 == $scope.creditSetting[a].enabled ? 0 : 1;
        $http.post($scope.config.saveCreditSetting, {
            credit_setting: $scope.creditSetting
        }).success(function (e) {
        });
    };

    $scope.editCreditTactics = function (t) {
        $("#tactics").modal("show");
        $scope.activeTacticsType = t;
        $scope.activeTactics = $scope.tactics[t];
    };

    $scope.editCreditName = function (t) {
        $scope.activeCredit = t;
        $("#credit-name").modal("show"),
        void 0 == $scope.creditSetting[t] && ($scope.creditSetting[t] = {
            title: "",
            enabled: 0
        });
        $scope.creditTitle = $scope.creditSetting[t].title;
    };

    $scope.setCreditName = function () {
        $scope.creditSetting[$scope.activeCredit].title = $scope.creditTitle;
        $http.post($scope.config.saveCreditSetting, {
            credit_setting: $scope.creditSetting
        }).success(function (e) {
        });
    };

    $scope.setCreditTactics = function () {
        $http.post($scope.config.saveTacticsSetting, {
            setting: $scope.tactics
        }).success(function (e) {
        });
    };
}
]).controller("syncCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.config = a,
        e.syncSetting = a.syncSetting,
        e.setSync = function () {
            e.syncSetting = 1 == e.syncSetting ? 0 : 1,
                t.post(e.config.saveSyncSetting, {
                    setting: e.syncSetting
                }).success(function (e) {
                })
        }
}
]).controller("ucCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.config = a;
    $scope.uc = a.uc;

    $("#submit").click(function () {
        var t = $("#textarea").val().split(";")
            , a = new Array;
        for (var n in t) {
            var i = t[n].indexOf("UC")
                , s = t[n].indexOf("', '")
                , o = t[n].indexOf("')")
                , r = t[n].substring(i, s)
                , l = t[n].substring(s + 4, o);
            a[r] = l
        }
        $scope.uc.connect = a.UC_CONNECT,
            $scope.uc.appid = a.UC_APPID,
            $scope.uc.key = a.UC_KEY,
            $scope.uc.charset = a.UC_CHARSET,
            $scope.uc.dbhost = a.UC_DBHOST,
            $scope.uc.dbuser = a.UC_DBUSER,
            $scope.uc.dbname = a.UC_DBNAME,
            $scope.uc.dbpw = a.UC_DBPW,
            $scope.uc.dbcharset = a.UC_DBCHARSET,
            $scope.uc.dbtablepre = a.UC_DBTABLEPRE,
            $scope.uc.dbconnect = a.UC_DBCONNECT,
            $scope.uc.api = a.UC_API,
            $scope.uc.ip = a.UC_IP,
            $scope.$digest()
    });

    $("#form1").submit(function () {
        if ("1" == $(':radio[name="status"]:checked').val()) {
            if ("" == $.trim($(':text[name="title"]').val()))
                return util.message("必须输入通行证名称.", "", "error"),
                    false;
            var e = parseInt($(':text[name="appid"]').val());
            if (isNaN(e))
                return util.message("必须输入UCenter应用的ID.", "", "error"),
                    false;
            if ("" == $.trim($(':text[name="key"]').val()))
                return util.message("必须输入与UCenter的通信密钥.", "", "error"),
                    false;
            if ("" == $.trim($(':text[name="charset"]').val()))
                return util.message("必须输入UCenter的字符集.", "", "error"),
                    false;
            if ("mysql" == $(':radio[name="connect"]:checked').val()) {
                if ("" == $.trim($(':text[name="dbhost"]').val()))
                    return util.message("必须输入UCenter数据库主机地址.", "", "error"),
                        false;
                if ("" == $.trim($(':text[name="dbuser"]').val()))
                    return util.message("必须输入UCenter数据库用户名.", "", "error"),
                        false;
                if ("" == $.trim($(':text[name="dbpw"]').val()))
                    return util.message("必须输入UCenter数据库密码.", "", "error"),
                        false;
                if ("" == $.trim($(':text[name="dbname"]').val()))
                    return util.message("必须输入UCenter数据库名称.", "", "error"),
                        false;
                if ("" == $.trim($(':text[name="dbcharset"]').val()))
                    return util.message("必须输入UCenter数据库字符集.", "", "error"),
                        false;
                if ("" == $.trim($(':text[name="dbtablepre"]').val()))
                    return util.message("必须输入UCenter数据表前缀.", "", "error"),
                        false
            } else if ("http" == $(':radio[name="connect"]:checked').val()) {
                if ("" == $.trim($(':text[name="api"]').val()))
                    return util.message("必须输入UCenter 服务端的URL地址.", "", "error"),
                        false;
                if ("" == $.trim($(':text[name="ip"]').val()))
                    return util.message("必须输入UCenter的IP.", "", "error"),
                        false
            }
        }
    })
}
]).controller("refundCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.setting = a.setting;
    $scope.wechat_refund = $scope.setting.wechat_refund;
    $scope.ali_refund = $scope.setting.ali_refund;

    $scope.change_switch = function (t, a) {
        "wechat_refund" == t && ($scope.wechat_refund.switch = a);
        "ali_refund" == t && ($scope.ali_refund.switch = a);
    };

    $("#key").change(function () {
        $scope.wechat_refund.key = $("#key").val();
        $scope.$apply();
    });

    $("#cert").change(function () {
        $scope.wechat_refund.cert = $("#cert").val();
        $scope.$apply();
    });

    $("#form_wechat").submit(function () {
        if (1 == $scope.wechat_refund.switch) {
            if ("" == $scope.wechat_refund.cert)
                return util.message("请上传apiclient_cert.pem证书"),
                    false;
            if ("" == $scope.wechat_refund.key)
                return util.message("请上传apiclient_key.pem证书"),
                    false
        }
    });

    $("#private_key").change(function () {
        $scope.ali_refund.private_key = $("#private_key").val();
        $scope.$apply();
    });

    $("#form_ali").submit(function () {
        if (1 == $scope.ali_refund.switch) {
            if ("" == $scope.ali_refund.app_id)
                return util.message("请填写app_id"),
                    false;
            if ("" == $scope.ali_refund.private_key)
                return util.message("请上传rsa_private_key.pem证书"),
                    false
        }
    });
}
]).controller("bindDomainCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.account = a.account;
    $scope.middleAccount = {
        bind_domain: ""
    };
    $scope.httpChange = function () {
        $http.post(a.links.post, {
            bind_domain: $scope.middleAccount.bind_domain,
            submit: true,
            token: a.token
        }).success(function (e) {
            0 == e.message.errno ? util.message("修改成功！", e.redirect, "success") : util.message(e.message.message)
        })
    }
}
]).controller("appModuleLinkUniacidCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.modules = a.modules;
    $scope.module = "";
    $scope.linkWxappAccounts = "";
    $scope.linkPcAccounts = "";
    $scope.selectedAccount = "";

    $scope.tabChange = function (t) {
        $scope.jurindex = t,
        1 != t || $scope.linkPcAccounts || $scope.searchLinkAccount($scope.module, "pc"),
        1 == $scope.jurindex && $("#account-wxapp .row").find(".item").removeClass("active"),
        0 == $scope.jurindex && $("#account-pc .row").find(".item").removeClass("active"),
            $scope.selectedAccount = ""
    };

    $scope.searchLinkAccount = function (n, i) {
        $scope.module = n,
            $("#show-account").modal("show"),
            "wxapp" == i ? ($scope.tabChange(0),
                $scope.loadingWxappData = true) : $scope.loadingPcData = true,
            $http.post(a.links.search_link_account, {
                module_name: n,
                type: "wxapp" == i ? a.wxapp : a.webapp
            }).success(function (t) {
                "wxapp" == i ? ($scope.loadingWxappData = false,
                    $scope.linkWxappAccounts = t.message.message,
                    $scope.linkPcAccounts = "") : ($scope.loadingPcData = false,
                    $scope.linkPcAccounts = t.message.message)
            })
    };

    $scope.selectLinkAccount = function (t, a) {
        $(a.target).parentsUntil(".col-sm-2").addClass("active"),
            $(a.target).parentsUntil(".col-sm-2").parent().siblings().find(".item").removeClass("active"),
            $scope.selectedAccount = t
    };

    $scope.module_unlink_uniacid = function (e) {
        $http.post(a.links.module_unlink_uniacid, {
            module_name: e
        }).success(function (e) {
            e.message.errno,
                util.message(e.message.message, e.redirect)
        })
    };

    $scope.moduleLinkUniacid = function () {
        $("#show-account").modal("hide"),
            $http.post(a.links.module_link_uniacid, {
                module_name: $scope.module,
                submit: "yes",
                token: a.token,
                uniacid: $scope.selectedAccount.uniacid
            }).success(function (e) {
                0 == e.message.errno ? util.message("关联成功", "refresh", "success") : util.message(e.message.message)
            });
        $scope.module = "";
    }
}
]);

angular.module("qrApp", ["we7app"]);

angular.module("qrApp").controller("QrDisplay", ["$scope", function ($scope) {
    $(".js-clip").each(function () {
        util.clip(this, $(this).attr("data-url"))
    })
}
]);

angular.module("qrApp").controller("QrPost", ["$scope", "$http", "config", function ($scope, $http, a) {
    a.id > 0 ? $scope.type = 0 : $scope.type = 1;

    $(".we7-select").change(function () {
        var t = $(".we7-select").val();
        $scope.type = 1 == t ? 1 : 2;
        $scope.$apply($scope.type);
    });

    $.isFunction(window.initReplyController) && window.initReplyController($scope, $http);
    $(".submit").on("click", function () {
        return !!$scope.checkSubmit();
    });

    $scope.checkSubmit = function () {
        if ("" == $(":text[name='scene-name']").val()) {
            util.message("抱歉，二维码名称为必填项，请返回修改！");
            return false;
        }
        if (1 == $scope.type) {
            if ("" == $(":text[name='expire-seconds']").val())
                return util.message("抱歉，临时二维码过期时间为必填项，请返回修改！"),
                    false;
            if (!/^\+?[1-9][0-9]*$/.test($(":text[name='expire-seconds']").val()))
                return util.message("抱歉，临时二维码过期时间必须为正整数，请返回修改！"),
                    false;
            if (parseInt($(":text[name='expire-seconds']").val()) < 30 || parseInt($(":text[name='expire-seconds']").val()) > 2592e3)
                return util.message("抱歉，临时二维码过期时间必须在30-2592000秒之间，请返回修改！"),
                    false
        }
        if (2 == $scope.type) {
            var a = $.trim($("#scene_str").val());
            if (!a)
                return util.message("场景值不能为空！"),
                    false;
            if (/^\d+$/g.test(a))
                return util.message("场景值不能是数字！"),
                    false;
            $http.post("{php echo url('platform/qr/check_scene_str')}", {
                scene_str: a
            }).success(function (e) {
                if (1 == e.message.errno && "repeat" == e.message.message)
                    return util.message("场景值和现有二维码场景值重复，请修改场景值"),
                        false
            })
        }
        return "" != $(":hidden[name='reply[reply_keyword]']").val() || (util.message("抱歉，请选择二维码要触发的关键字！"),
            false)
    }
}
]);

angular.module("qrApp").controller("UrlToQr", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.copyLink = "";

    $scope.selectUrl = function () {
        var e = $("#longurl");
        util.linkBrowser(function (t) {
            var n = a.site_url;
            if ("tel:" == t.substring(0, 4))
                return util.message("长链接不能设置为一键拨号"),
                    false;
            -1 == t.indexOf("http://") && -1 == t.indexOf("https://") && (t = n + "app" + (t = t.replace("./index.php?", "/index.php?"))),
                e.val(t)
        })
    };

    $scope.transformUrl = function () {
        var n = $("#longurl").val().trim();
        if ("" == n)
            return util.message("请输入长链接"),
                false;
        if (-1 == n.indexOf("http://") && -1 == n.indexOf("https://") && -1 == n.indexOf("weixin://"))
            return util.message("请输入有效的长链接"),
                false;
        var i = $("#change")
            , s = a.img_url;
        i.html('<i class="fa fa-spinner"></i> 转换中'),
            $http.post(a.transform_url, {
                longurl: n
            }).success(function (t) {
                if (-1 == t.message.errno)
                    return util.message(t.message.message),
                        i.html("立即转换"),
                        false;
                $("#shorturl").val(t.message.message.short_url),
                    $scope.copyLink = t.message.message.short_url,
                    $(".url-short").next().attr({
                        "data-url": t.message.message.short_url
                    }).removeClass("disabled"),
                    $("#qrsrc").attr("src", s + "url=" + t.message.message.short_url),
                    $(".qr-img").next().removeClass("disabled"),
                    i.html("立即转换")
            })
    };

    $scope.downQr = function () {
        var e = $("#shorturl").val()
            , t = a.down_url;
        window.location.href = t + "qrlink=" + e;
    };

    $scope.success = function (e) {
        var e = parseInt(e)
            ,
            t = $('<span class="label label-success" style="position:absolute;height:33px;line-height:28px;"><i class="fa fa-check-circle"></i> 复制成功</span>')
            , a = $("#copy-" + e).next().html();
        (!a || a.indexOf('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>') < 0) && $("#copy-" + e).after(t),
            setTimeout(function () {
                t.remove()
            }, 2e3)
    }
}
]);

angular.module("qrApp").controller("QrStatistics", ["$scope", "$http", "config", function (e, t, a) {
    e.link = a.link,
        e.changeStatus = function () {
            t.post(e.link.changeStatus, {}).success(function (e) {
                0 == e.message.errno ? location.reload() : util.message(e.message.message, e.redirect, "ajax")
            })
        }
}
]);

angular.module("quickMenuApp", ["wapeditorApp"]);

angular.module("quickMenuApp").controller("MainCtrl", ["$scope", "config", "serviceCommon", "serviceQuickMenuBase", "serviceQuickMenuSubmit", function ($scope, config, a, serviceQuickMenuBase, serviceQuickMenuSubmit) {
    $scope.submit = {};
    $scope.activeItem = config.activeItem ? config.activeItem : serviceQuickMenuBase.initActiveItem();
    serviceQuickMenuBase.initActiveItem($scope.activeItem);

    $scope.selectNavStyle = function () {
        var t = $('input[name="nav_style"]:checked').val();
        $scope.activeItem.navStyle = serviceQuickMenuBase.selectNavStyle(t)
    };

    $scope.addMenu = function () {
        $scope.activeItem.menus = serviceQuickMenuBase.addMenu()
    };

    $scope.addSubMenu = function (t) {
        var a = _.findIndex($scope.activeItem.menus, t);
        $scope.activeItem.menus[a].submenus = serviceQuickMenuBase.addSubMenu(t)
    };

    $scope.submit = function (t) {
        $scope.submit = serviceQuickMenuSubmit.submit();
        $scope.$apply("submit");
        $(t.target).parents("form").submit();
    };

    $scope.removeMenu = function (t) {
        $scope.activeItem.menus = serviceQuickMenuBase.removeMenu(t)
    };

    $scope.removeSubMenu = function (t, a) {
        serviceQuickMenuBase.removeSubMenu(t, a),
            $scope.activeItem.menus[t].submenus = _.without($scope.activeItem.menus[t].submenus, a)
    };

    $scope.showSearchModules = function () {
        $scope.moduleDialog = $("#shop-modules-modal").modal(),
            $("#shop-modules-modal .modal-body .btn-primary").html("取消"),
            $("#shop-modules-modal").find(".modal-footer .btn-primary").unbind("click").click(function () {
                $scope.activeItem.ignoreModules = {},
                    $("#shop-modules-modal .modal-body .btn-primary").each(function () {
                        $scope.hasIgnoreModules = true,
                            $scope.activeItem.ignoreModules[$(this).attr("js-name")] = {
                                name: $(this).attr("js-name"),
                                title: $(this).attr("js-title")
                            }
                    }),
                    $scope.$apply("activeItem"),
                    $scope.$apply("hasIgnoreModules"),
                    serviceQuickMenuBase.setQuickMenuData("ignoreModules", $scope.activeItem.ignoreModules)
            })
    };

    $(".js-editor-submit").click(function (t) {
        $scope.submit(t)
    });
    $scope.hasIgnoreModules = _.size($scope.activeItem.ignoreModules);
    $(".nav-menu").show();
    $(".app-shopNav-edit").show();
}
]);

angular.module("quickMenuApp").service("serviceQuickMenuBase", ["$rootScope", function (e) {
    var t = {}
        , a = {};
    return t.initActiveItem = function (e) {
        return a = angular.isObject(e) ? e : {
            navStyle: 1,
            bgColor: "#2B2D30",
            menus: [],
            extend: [],
            position: {
                homepage: true,
                usercenter: true,
                page: true,
                article: true
            },
            ignoreModules: {}
        }
    }
        ,
        t.selectNavStyle = function (e) {
            return a.navStyle = e,
                a.navStyle
        }
        ,
        t.addMenu = function () {
            return a.menus.push({
                title: "标题",
                url: "",
                submenus: [],
                icon: {
                    name: "fa-home",
                    color: "#00ffff"
                },
                image: "",
                hoverimage: "",
                hovericon: ""
            }),
                a.menus
        }
        ,
        t.removeMenu = function (e) {
            var t = $.inArray(e, a.menus)
                , n = angular.copy(a.menus);
            a.menus = [];
            for (i in n)
                i != t && a.menus.push(n[i]);
            return a.menus
        }
        ,
        t.addSubMenu = function (e) {
            var t = _.findIndex(a.menus, e);
            return a.menus[t].submenus.push({
                title: "标题",
                url: ""
            }),
                a.menus[t].submenus
        }
        ,
        t.removeSubMenu = function (e, t) {
            return a.menus[e].submenus = _.without(a.menus[e].submenus, t),
                a.menus[e].submenus
        }
        ,
        t.getQuickMenuData = function (e) {
            return angular.isString(e) ? a[e] : a
        }
        ,
        t.setQuickMenuData = function (e, t) {
            angular.isObject(e) ? angular.forEach(e, function (e, t) {
                a[t] = e
            }) : a[e] = t
        }
        ,
        t
}
]);

angular.module("quickMenuApp").service("serviceQuickMenuSubmit", ["serviceCommon", "serviceQuickMenuBase", function (e, t) {
    var a = {};
    return a.submit = function () {
        var a = {
            params: {},
            html: ""
        };
        a.params = t.getQuickMenuData(),
            e.stripHaskey(a.params);
        var n = $(".nav-menu").html();
        return n = n.replace(/<\!\-\-([^-]*?)\-\->/g, ""),
            n = n.replace(/ng\-[a-zA-Z-]+=\"[^\"]*\"/g, ""),
            n = n.replace(/ng\-[a-zA-Z]+/g, ""),
            n = n.replace(/[\t\n\n\r]/g, ""),
            a.html = n,
            a
    }
        ,
        a
}
]);

angular.module("we7resource", ["we7app"]);

angular.module("we7resource").controller("we7resource-base-controller", ["$scope", "$sce", "serviceResource", "$http", "config", function ($scope, $sce, a, $http, config) {

    function s(resource) {
        $scope.converting = true; // 正在转换
        var isToLocal = 2 == $scope.needType; // 微信资源转换为本地资源
        a.convert(resource.id, $scope.resourceType, isToLocal).then(function (resource) {
            util.loaded();
            $scope.converting = false;
            resource && triggerResourceSelectedEvent([resource]);
            resource.selected = false;
        }, function () {
            $scope.converting = false;
            message("资源转换失败");
            resource.selected = false;
            util.loaded();
        })
    }

    function message(message) {
        util.message(message)
    }

    function triggerResourceSelectedEvent(selectedResourceItems) {
        $(window).trigger("resource_selected", {
            type: $scope.resourceType,
            items: selectedResourceItems
        })
    }

    function triggerResourceCanceledEvent() {
        $(window).trigger("resource_canceled")
    }

    $scope.currentPage = 1; // 当前页码
    $scope.isWechat = config.isWechat; // 是否是上传图片到微信
    $scope.needType = config.needType; // 分为Networktolocal和NetworktoWechat
    $scope.multiple = config.multiple; // 是否多选
    $scope.showType = config.showType;
    $scope.global = config.global ? "global" : ""; //
    $scope.dest_dir = config.dest_dir;
    $scope.uniacid = config.uniacid; // 统一账号
    $scope.netWorkVideo = config.netWorkVideo;
    config.others && config.others[$scope.resourceType] && ($scope.needType = config.others[$scope.resourceType].needType);
    $scope.selectedItems = {}; // 被选择的资源
    $scope.index = 0; // 面板索引
    $scope.converting = false; // 是否正在转换标识

    /**
     *  是否显示微信项
     */
    $scope.showWx = function () {
        return true
    };

    /**
     * 是否显示本地服务器
     */
    $scope.showLocal = function () {
        return true
    };

    $scope.showNetWork = function () {
        return true
    };

    // 用户自定义的资源上传完成后的回调函数
    $scope.loadData = function () {
    };
    $scope.onIndexChange = function (index) {
        $scope.loadData()
    };

    $scope.setIndex = function (index) {
        if ($scope.index !== index) {
            $scope.index = index;
            $scope.selectedItems = {}; //清空选择项
            $scope.onIndexChange(index);
        }
    };

    $scope.isWechat || $scope.setIndex(1); // 如果不是上传图片到微信，则默认选择上传本地服务器
    $scope.setCurrentPage = function (page) {
        $scope.currentPage != page && ($scope.currentPage = page,
            $scope.loadData())
    };

    $scope.itemClick = function (t) {
        if (!$scope.converting)
            if (t.selected)
                t.selected = false;
            else {
                if (!$scope.multiple || $scope.needConvert())
                    return t.selected = true,
                        void $scope.convert(t);
                t.selected = !t.selected,
                    delete $scope.selectedItems[t.id],
                t.selected && ($scope.selectedItems[t.id] = t)
            }
    };

    $scope.delItem = function (t, n) {
        if (n.stopPropagation(),
            !confirm("删除不可恢复确认删除吗？"))
            return false;
        a.delItem(t.id, $scope.resourceType, 1 == $scope.index, $scope.uniacid).then(function () {
            $scope.loadData()
        }, function (e) {
            util.message(e.message)
        })
    };

    $scope.canConvert = function (e) {
        return true
    };

    $scope.needConvert = function () {
        return 3 !== $scope.needType && $scope.index + 1 !== $scope.needType
    };

    $scope.convert = function (t) {
        var a = 0 == $scope.index ? "本地" : "微信";
        if ($scope.needConvert()) {
            if (!$scope.canConvert(t))
                return t.selected = false,
                    void message("当前资源无法选择");
            confirm("当前资源转换为" + a + "素材方可使用,是否转换") ? (util.loading("正在转换为" + a + "资源"),
                s(t)) : t.selected = false
        } else
            triggerResourceSelectedEvent([t])
    };

    $scope.ok = function () {
        var t = [];
        for (var a in $scope.selectedItems)
            t.push($scope.selectedItems[a]);
        t.length > 0 ? triggerResourceSelectedEvent(t) : triggerResourceCanceledEvent()
    };

    /**
     * 作为we7-uploader-btn组件的on-uploaded传入到we7UploaderBtn控制器中，它作为图片上传完成后回调函数
     */
    $scope.uploaded = function () {
        $scope.loadData()
    };

    $scope.uploaderror = function (error) {
        error && "" != error || (error = "上传失败"),
            message(error)
    };

    $scope.selectedItems = function () {
        return selectedItems;
    }
}
]);

angular.module("we7resource").directive("we7ResourceBasicDialog", ["config", function (e) {
    return {
        scope: {},
        restrict: "EA",
        templateUrl: "resource/js/app/templates/directive-basic-basic.html"
    }
}
]);

angular.module("we7resource").controller("we7resource-basic-controller", ["$scope", "config", function (e, t) {
    $("#basictext").val(t.otherVal),
        e.ok = function () {
            var e = $("#basictext").val();
            $(window).trigger("resource_selected", {
                type: "basic",
                items: [{
                    content: e
                }]
            })
        }
        ,
        e.emotion = function () {
            a()
        }
        ,
        e.emoji = function () {
            n()
        }
    ;
    var a = function () {
        var e = $("#basictext")[0]
            , t = $("#basictext").val();
        util.emotion($(".emotion-triggers"), $("#basictext"), function (a, n, i) {
            if (e.selectionStart || "0" == e.selectionStart) {
                var s = e.selectionStart
                    , o = e.selectionEnd
                    , r = e.scrollTop;
                $("#basictext").val(e.value.substring(0, s) + a + e.value.substring(o, e.value.length)),
                    $("#basictext").focus(),
                    e.selectionStart = s + a.length,
                    e.selectionEnd = s + a.length,
                    e.scrollTop = r
            } else
                $("#basictext").val(t + a),
                    $("#basictext").focus()
        })
    }
        , n = function () {
        var e = $("#basictext").val();
        util.emojiBrowser(function (t) {
            var a = "[U+" + t.find("span").text() + "]";
            $("#basictext").val(e + a)
        })
    }
}
]);

angular.module("we7resource").directive("we7ResourceIconDialog", function () {
    return {
        scope: {},
        restrict: "EA",
        templateUrl: "resource/js/app/templates/directive-icon-icon.html"
    }
});

angular.module("we7resource").controller("we7resource-icon-controller", ["$scope", "config", function (e, t) {
    var a = {};
    a.c0 = ["fa-adjust", "fa-anchor", "fa-archive", "fa-arrows", "fa-arrows-h", "fa-arrows-v", "fa-asterisk", "fa-automobile", "fa-ban", "fa-bank", "fa-bar-chart-o", "fa-barcode", "fa-bars", "fa-beer", "fa-bell", "fa-bell-o", "fa-bolt", "fa-bomb", "fa-book", "fa-bookmark", "fa-bookmark-o", "fa-briefcase", "fa-bug", "fa-building", "fa-building-o", "fa-bullhorn", "fa-bullseye", "fa-cab", "fa-calendar", "fa-calendar-o", "fa-camera", "fa-camera-retro", "fa-car", "fa-caret-square-o-down", "fa-caret-square-o-left", "fa-caret-square-o-right", "fa-caret-square-o-up", "fa-certificate", "fa-check", "fa-check-circle", "fa-check-circle-o", "fa-check-square", "fa-check-square-o", "fa-child", "fa-circle", "fa-circle-o", "fa-circle-o-notch", "fa-circle-thin", "fa-clock-o", "fa-cloud", "fa-cloud-download", "fa-cloud-upload", "fa-code", "fa-code-fork", "fa-coffee", "fa-cog", "fa-cogs", "fa-comment", "fa-comment-o", "fa-comments", "fa-comments-o", "fa-compass", "fa-credit-card", "fa-crop", "fa-crosshairs", "fa-cube", "fa-cubes", "fa-cutlery", "fa-dashboard", "fa-database", "fa-desktop", "fa-dot-circle-o", "fa-download", "fa-edit", "fa-ellipsis-h", "fa-ellipsis-v", "fa-envelope", "fa-envelope-o", "fa-envelope-square", "fa-eraser", "fa-exchange", "fa-exclamation", "fa-exclamation-circle", "fa-exclamation-triangle", "fa-external-link", "fa-external-link-square", "fa-eye", "fa-eye-slash", "fa-fax", "fa-female", "fa-fighter-jet", "fa-file-archive-o", "fa-file-audio-o", "fa-file-code-o", "fa-file-excel-o", "fa-file-image-o", "fa-file-movie-o", "fa-file-pdf-o", "fa-file-photo-o", "fa-file-picture-o", "fa-file-powerpoint-o", "fa-file-sound-o", "fa-file-video-o", "fa-file-word-o", "fa-file-zip-o", "fa-film", "fa-filter", "fa-fire", "fa-fire-extinguisher", "fa-flag", "fa-flag-checkered", "fa-flag-o", "fa-flash", "fa-flask", "fa-folder", "fa-folder-o", "fa-folder-open", "fa-folder-open-o", "fa-frown-o", "fa-gamepad", "fa-gavel", "fa-gear", "fa-gears", "fa-gift", "fa-glass", "fa-globe", "fa-graduation-cap", "fa-group", "fa-hdd-o", "fa-headphones", "fa-heart", "fa-heart-o", "fa-history", "fa-home", "fa-image", "fa-inbox", "fa-info", "fa-info-circle", "fa-institution", "fa-key", "fa-keyboard-o", "fa-language", "fa-laptop", "fa-leaf", "fa-legal", "fa-lemon-o", "fa-level-down", "fa-level-up", "fa-life-bouy", "fa-life-ring", "fa-life-saver", "fa-lightbulb-o", "fa-location-arrow", "fa-lock", "fa-magic", "fa-magnet", "fa-mail-forward", "fa-mail-reply", "fa-mail-reply-all", "fa-male", "fa-map-marker", "fa-meh-o", "fa-microphone", "fa-microphone-slash", "fa-minus", "fa-minus-circle", "fa-minus-square", "fa-minus-square-o", "fa-mobile", "fa-mobile-phone", "fa-money", "fa-moon-o", "fa-mortar-board", "fa-music", "fa-navicon", "fa-paper-plane", "fa-paper-plane-o", "fa-paw", "fa-pencil", "fa-pencil-square", "fa-pencil-square-o", "fa-phone", "fa-phone-square", "fa-photo", "fa-picture-o", "fa-plane", "fa-plus", "fa-plus-circle", "fa-plus-square", "fa-plus-square-o", "fa-power-off", "fa-print", "fa-puzzle-piece", "fa-qrcode", "fa-question", "fa-question-circle", "fa-quote-left", "fa-quote-right", "fa-random", "fa-recycle", "fa-refresh", "fa-reorder", "fa-reply", "fa-reply-all", "fa-retweet", "fa-road", "fa-rocket", "fa-rss", "fa-rss-square", "fa-search", "fa-search-minus", "fa-search-plus", "fa-send", "fa-send-o", "fa-share", "fa-share-alt", "fa-share-alt-square", "fa-share-square", "fa-share-square-o", "fa-shield", "fa-shopping-cart", "fa-sign-in", "fa-sign-out", "fa-signal", "fa-sitemap", "fa-sliders", "fa-smile-o", "fa-sort", "fa-sort-alpha-asc", "fa-sort-alpha-desc", "fa-sort-amount-asc", "fa-sort-amount-desc", "fa-sort-asc", "fa-sort-desc", "fa-sort-down", "fa-sort-numeric-asc", "fa-sort-numeric-desc", "fa-sort-up", "fa-space-shuttle", "fa-spinner", "fa-spoon", "fa-square", "fa-square-o", "fa-star", "fa-star-half", "fa-star-half-empty", "fa-star-half-full", "fa-star-half-o", "fa-star-o", "fa-suitcase", "fa-sun-o", "fa-support", "fa-tablet", "fa-tachometer", "fa-tag", "fa-tags", "fa-tasks", "fa-taxi", "fa-terminal", "fa-thumb-tack", "fa-thumbs-down", "fa-thumbs-o-down", "fa-thumbs-o-up", "fa-thumbs-up", "fa-ticket", "fa-times", "fa-times-circle", "fa-times-circle-o", "fa-tint", "fa-toggle-down", "fa-toggle-left", "fa-toggle-right", "fa-toggle-up", "fa-trash-o", "fa-tree", "fa-trophy", "fa-truck", "fa-umbrella", "fa-university", "fa-unlock", "fa-unlock-alt", "fa-unsorted", "fa-upload", "fa-user", "fa-users", "fa-video-camera", "fa-volume-down", "fa-volume-off", "fa-volume-up", "fa-warning", "fa-wheelchair", "fa-wrench"],
        a.c1 = ["fa-file", "fa-file-archive-o", "fa-file-audio-o", "fa-file-code-o", "fa-file-excel-o", "fa-file-image-o", "fa-file-movie-o", "fa-file-o", "fa-file-pdf-o", "fa-file-photo-o", "fa-file-picture-o", "fa-file-powerpoint-o", "fa-file-sound-o", "fa-file-text", "fa-file-text-o", "fa-file-video-o", "fa-file-word-o", "fa-file-zip-o"],
        a.c2 = ["fa-circle-o-notch", "fa-cog", "fa-gear", "fa-refresh", "fa-spinner"],
        a.c3 = ["fa-check-square", "fa-check-square-o", "fa-circle", "fa-circle-o", "fa-dot-circle-o", "fa-minus-square", "fa-minus-square-o", "fa-plus-square", "fa-plus-square-o", "fa-square", "fa-square-o"],
        a.c4 = ["fa-bitcoin", "fa-btc", "fa-cny", "fa-dollar", "fa-eur", "fa-euro", "fa-gbp", "fa-inr", "fa-jpy", "fa-krw", "fa-money", "fa-rmb", "fa-rouble", "fa-rub", "fa-ruble", "fa-rupee", "fa-try", "fa-turkish-lira", "fa-usd", "fa-won", "fa-yen"],
        a.c5 = ["fa-align-center", "fa-align-justify", "fa-align-left", "fa-align-right", "fa-bold", "fa-chain", "fa-chain-broken", "fa-clipboard", "fa-columns", "fa-copy", "fa-cut", "fa-dedent", "fa-eraser", "fa-file", "fa-file-o", "fa-file-text", "fa-file-text-o", "fa-files-o", "fa-floppy-o", "fa-font", "fa-header", "fa-indent", "fa-italic", "fa-link", "fa-list", "fa-list-alt", "fa-list-ol", "fa-list-ul", "fa-outdent", "fa-paperclip", "fa-paragraph", "fa-paste", "fa-repeat", "fa-rotate-left", "fa-rotate-right", "fa-save", "fa-scissors", "fa-strikethrough", "fa-subscript", "fa-superscript", "fa-table", "fa-text-height", "fa-text-width", "fa-th", "fa-th-large", "fa-th-list", "fa-underline", "fa-undo", "fa-unlink"],
        a.c6 = ["fa-angle-double-down", "fa-angle-double-left", "fa-angle-double-right", "fa-angle-double-up", "fa-angle-down", "fa-angle-left", "fa-angle-right", "fa-angle-up", "fa-arrow-circle-down", "fa-arrow-circle-left", "fa-arrow-circle-o-down", "fa-arrow-circle-o-left", "fa-arrow-circle-o-right", "fa-arrow-circle-o-up", "fa-arrow-circle-right", "fa-arrow-circle-up", "fa-arrow-down", "fa-arrow-left", "fa-arrow-right", "fa-arrow-up", "fa-arrows", "fa-arrows-alt", "fa-arrows-h", "fa-arrows-v", "fa-caret-down", "fa-caret-left", "fa-caret-right", "fa-caret-square-o-down", "fa-caret-square-o-left", "fa-caret-square-o-right", "fa-caret-square-o-up", "fa-caret-up", "fa-chevron-circle-down", "fa-chevron-circle-left", "fa-chevron-circle-right", "fa-chevron-circle-up", "fa-chevron-down", "fa-chevron-left", "fa-chevron-right", "fa-chevron-up", "fa-hand-o-down", "fa-hand-o-left", "fa-hand-o-right", "fa-hand-o-up", "fa-long-arrow-down", "fa-long-arrow-left", "fa-long-arrow-right", "fa-long-arrow-up", "fa-toggle-down", "fa-toggle-left", "fa-toggle-right", "fa-toggle-up"],
        a.c7 = ["fa-arrows-alt", "fa-backward", "fa-compress", "fa-eject", "fa-expand", "fa-fast-backward", "fa-fast-forward", "fa-forward", "fa-pause", "fa-play", "fa-play-circle", "fa-play-circle-o", "fa-step-backward", "fa-step-forward", "fa-stop", "fa-youtube-play"],
        a.c8 = ["fa-adn", "fa-android", "fa-apple", "fa-behance", "fa-behance-square", "fa-bitbucket", "fa-bitbucket-square", "fa-bitcoin", "fa-btc", "fa-codepen", "fa-css3", "fa-delicious", "fa-deviantart", "fa-digg", "fa-dribbble", "fa-dropbox", "fa-drupal", "fa-empire", "fa-facebook", "fa-facebook-square", "fa-flickr", "fa-foursquare", "fa-ge", "fa-git", "fa-git-square", "fa-github", "fa-github-alt", "fa-github-square", "fa-gittip", "fa-google", "fa-google-plus", "fa-google-plus-square", "fa-hacker-news", "fa-html5", "fa-instagram", "fa-joomla", "fa-jsfiddle", "fa-linkedin", "fa-linkedin-square", "fa-linux", "fa-maxcdn", "fa-openid", "fa-pagelines", "fa-pied-piper", "fa-pied-piper-alt", "fa-pied-piper-square", "fa-pinterest", "fa-pinterest-square", "fa-qq", "fa-ra", "fa-rebel", "fa-reddit", "fa-reddit-square", "fa-renren", "fa-share-alt", "fa-share-alt-square", "fa-skype", "fa-slack", "fa-soundcloud", "fa-spotify", "fa-stack-exchange", "fa-stack-overflow", "fa-steam", "fa-steam-square", "fa-stumbleupon", "fa-stumbleupon-circle", "fa-tencent-weibo", "fa-trello", "fa-tumblr", "fa-tumblr-square", "fa-twitter", "fa-twitter-square", "fa-vimeo-square", "fa-vine", "fa-vk", "fa-wechat", "fa-weibo", "fa-weixin", "fa-windows", "fa-wordpress", "fa-xing", "fa-xing-square", "fa-yahoo", "fa-youtube", "fa-youtube-play", "fa-youtube-square"],
        a.c9 = ["fa-ambulance", "fa-h-square", "fa-hospital-o", "fa-medkit", "fa-plus-square", "fa-stethoscope", "fa-user-md", "fa-wheelchair"],
        e.index = 0,
        e.color = t.otherVal ? t.otherVal : "#ddd",
        e.setIndex = function (t) {
            e.index = t,
                e.selectIndex = -1
        }
        ,
        e.icons = function () {
            return a["c" + e.index]
        }
        ,
        util.colorpicker("#we7colorpicker", function (t) {
            e.color = t.toString(),
                e.$apply("color")
        }),
        e.selectIndex = -1,
        e.itemClick = function (t) {
            $(window).trigger("resource_selected", {
                type: "icon",
                items: [{
                    name: t,
                    color: e.color
                }]
            })
        }
}
]);

angular.module("we7resource").directive("we7ResourceImageDialog", function () {
    return {
        scope: {},
        restrict: "EA", // 元素和属性指令
        templateUrl: "resource/js/app/templates/directive-images-images.html",
        link: function (scope, $element, a, n, i) {
            $element.bind("click", "pagination li a", function (event) {
                var attr = $(event.target).attr("page");
                attr && scope.$broadcast("image_page_change", attr);
            })
        }
    }
});

angular.module("we7resource").controller("we7resource-image-controller", ["$scope", "$sce", "serviceResource", "$http", "$controller", "config", function (scope, sce, a, http, controller, config) {

    function message(message) {
        util.message(message, "")
    }

    // 触发选择图片事件，该事件在fileuploader.js文件中注册
    function triggerResourceSelectedEvent(message) {
        $(window).trigger("resource_selected", {
            type: "image",
            items: message
        })
    }

    /**
     * 收集选择图片的id
     * @returns {Array}
     */
    function getSelectedImageIds() {
        for (var selectedImagesIds = [], t = getSelectedImages(), a = 0; a < t.length; a++)
            selectedImagesIds.push(t[a].id);
        return selectedImagesIds
    }

    /**
     * 获取当前选择的图片
     * @returns {Array}
     */
    function getSelectedImages() {
        for (var selectedImages = [], a = 0; a < scope.images.length; a++) {
            var image = scope.images[a];
            image.selected && selectedImages.push(image)
        }
        return selectedImages
    }

    function triggerResourceCanceledEvent() {
        $(window).trigger("resource_canceled")
    }

    // 根据选项索引来确定uploadurl变量值，这个值最后通过组件属性传入we7-uploader-btn，即we7UploaderBtn组件中去
    function getUploadUrl() {
        var groupid = scope.groupid;
        scope.uploadurl = 0 == scope.index ? "./index.php?c=utility&a=file&do=wechat_upload&upload_type=image&mode=perm&uniacid=" + scope.uniacid + "&dest_dir=" + scope.dest_dir + "&quality=" + scope.quality + "&group_id=" + groupid : "./index.php?c=utility&a=file&do=upload&upload_type=image&global=" + scope.global + "&dest_dir=" + scope.dest_dir + "&uniacid=" + scope.uniacid + "&quality=" + scope.quality + "&group_id=" + groupid;
    }

    function netWorkconvert(netWorkurl, isNetworktolocal) {
        util.loading("网络图片转化中...");
        // a为serviceResource
        a.netWorkconvert(netWorkurl, isNetworktolocal, "image").then(function (message) {
            util.loaded(); // 显示加载图标
            triggerResourceSelectedEvent([message]);
        }, function (e) {
            message("网络图片转化失败");
            util.loaded();
        })
    }

    function loadGroupAndImages() {
        loadImagesByGroupId(scope.groupid); // 加载指定组图片
        loadAllGroup(); // 加载所有分组
    }

    /**
     * 加载指定的分组资源
     * @param groupid
     */
    function loadImagesByGroupId(groupid) { // groupid为-1表示加载所有分组资源
        scope.selectedAllImage = false;
        scope.groupid = groupid;
        getUploadUrl();
        var isLocal = 1 == scope.index;
        // a为serviceResource
        a.getResources("image", scope.currentPage, isLocal, {
            year: scope.year,
            month: scope.month,
            uniacid: scope.uniacid,
            dest_dir: scope.dest_dir,
            global: scope.global,
            groupid: groupid
        }).then(function (a) {
            scope.images = a.items;
            scope.pager = sce.trustAsHtml(a.pager);
        })
    }

    /**
     * 加载所有分组
     */
    function loadAllGroup() {
        var isLocal = 1 == scope.index;
        // a为serviceResource
        a.imageGroup(isLocal, []).then(function (t) {
            for (var groups = [], n = 0; n < t.length; n++) {
                var group = t[n];
                group.editable = false;
                group.deleted = false;
                groups.push(group);
            }
            scope.groups = groups
        })
    }

    scope.resourceType = "image";
    controller("we7resource-base-controller", {
        $scope: scope
    });
    scope.accept = "image/gif, image/jpg, image/jpeg, image/bmp, image/png, image/ico";
    scope.uploadname = "上传图片";
    scope.multipleupload = true;
    scope.quality = 0; // 图片质量
    scope.netWorkurl = ""; // 需要下载到本地的远程url地址
    scope.groups = []; // 分组id
    new Date; // ??
    scope.year = "0";
    scope.month = "0";
    // 最近10年年份
    scope.years = function () {
        for (var year = (new Date).getFullYear(), lastYears = [], a = 0; a < 10; a++)
            lastYears.push(year - a);
        return lastYears
    }();
    // 12个月份
    scope.months = function () {
        for (var months = [], t = 1; t <= 12; t++)
            months.push(t);
        return months
    }();
    scope.selectedAllImage = false;
    scope.groupid = -1;
    scope.editable = false;
    scope.isLocal = function () {
        return 1 == scope.index
    };
    // 图片上传完成后回调函数
    scope.loadData = function () {
        loadGroupAndImages()
    };
    scope.onIndexChange = function (index) {
        if (2 != index) {
            loadGroupAndImages();
            getUploadUrl();
        }
    };
    scope.itemClick = function (image) {
        if (!scope.converting) {
            image.selected = !image.selected;
            var isSelectedAllImage = getSelectedImages().length == scope.images.length;
            scope.selectedAllImage = isSelectedAllImage
        }
    };
    scope.ok = function () {
        var t = getSelectedImages();
        if (t.length > 0) {
            if (!scope.multiple || scope.needConvert()) {
                t[0].selected = true;
                scope.convert(t[0]);
            } else {
                triggerResourceSelectedEvent(t);
            }
            return;
        }
        triggerResourceCanceledEvent();
    };

    getUploadUrl(); // 获取图片上传url

    scope.fetchNetwork = function () {
        netWorkconvert(scope.netWorkurl, 2 == scope.needType);
    };
    scope.$on("image_page_change", function (t, a) {
        scope.setCurrentPage(a);
    });
    scope.updateUploadUrl = function () {
        getUploadUrl();
    };
    scope.timeToDate = function (e) {
        return new Date(1e3 * e);
    };
    scope.getTitle = function (t) {
        return scope.isLocal ? t.filename : t.attachment;
    };
    scope.getImage = function (image) {
        return "url(" + image.url + ")";
    };
    /**
     * 按照年份和月份来检索资源
     */
    scope.search = function () {
        scope.currentPage = 1;
        loadGroupAndImages();
    };
    // 删除一个或多个图片
    scope.delSel = function () {
        var imageids = getSelectedImageIds(); // 获取选择图片

        if (0 != imageids.length) {

            if (imageids.length > 1 && !scope.isLocal()) { // 多张微信不行
                util.message("微信图片只支持单张删除")
            } else {
                if (scope.isLocal()) {// 如果是多张本地，如果是单张本地
                    a.delMuti(imageids, "image", scope.isLocal(), {
                        uniacid: scope.uniacid
                    }).then(function (e) {
                        util.message("删除成功");
                        loadGroupAndImages();
                    }, function (e) {
                        util.message(e.message);
                    });
                } else { // 单张微信
                    a.delItem(imageids[0], "image", scope.isLocal(), scope.uniacid).then(function (e) {
                        util.message("删除成功");
                        loadGroupAndImages();
                    }, function (e) {
                        util.message(e.message);
                    });
                }
            }
        } else {
            util.message("请选择要删除的图片");
        }
    }
    scope.selectedAll = function (isSelectedAllImage) {
        for (var a = 0; a < scope.images.length; a++)
            scope.images[a].selected = isSelectedAllImage;
    };
    // 加载所有分组资源
    scope.loadAll = function () {
        loadImagesByGroupId(-1);
    };
    // 加载未分组资源
    scope.loadNoGroup = function () {
        loadImagesByGroupId(0);
    };

    /**
     * 加载指定组的资源
     * @param group
     */
    scope.loadImages = function (group) {
        loadImagesByGroupId(group.id);
    };

    scope.addGroup = function (groupName) {
        var isLocal = 1 == scope.index;
        // a是serviceResource
        a.addGroup(groupName, isLocal).then(function (group) {
            scope.groups.push({
                name: groupName,
                id: group.id,
                editable: false,
                deleted: false,
                changed: false
            })
        })
    };
    scope.editGroup = function (group) {
        var isLocal = 1 == scope.index;
        // a是serviceResource
        a.changeGroup(group, isLocal).then(function (e) {
            console.log("changegroup");
        });
    };
    /**
     * 获取组内资源
     * @param group
     */
    scope.doEditGroup = function (group) {
        group.editable = !group.editable;
        scope.loadImages(group);
    };
    /**
     * 显示重命名组编辑框
     * @param group
     */
    scope.editing = function (group) {
        group.editing = true
    };
    /**
     * 确定重命名组
     * @param group
     */
    scope.edited = function (group) {
        group.editing = false;
        group.editable = false;
        scope.editGroup(group);
    };
    /**
     * 取消重命名组
     * @param group
     */
    scope.cancelEditing = function (group) {
        group.editing = false;
        group.editable = false;
    };
    /**
     * 添加分组，默认是未命名
     */
    scope.doAddGroup = function () {
        scope.addGroup("未命名")
    };
    /**
     * 删除分组
     * @param group
     */
    scope.delGroup = function (group) {
        $("#categoryEditModal").hide();
        group.deleted = true;
        var isLocal = 1 == scope.index;
        a.delGroup(group.id, isLocal).then(function (t) {
            console.log("删除分组成功");
            scope.loadAll() // 加载所有分组资源
        })
    };
    /**
     * 移动指定的资源到指定的组中
     * @param group
     */
    scope.moveToGroup = function (group) {
        var isLocal = 1 == scope.index
            , imageids = getSelectedImageIds();
        0 != imageids.length ? a.moveToGroup(imageids, group.id, isLocal).then(function (e) {
            util.message("移动成功");
            loadImagesByGroupId(group.id);
        }) : util.message("请选择图片后移动")
    };

    loadGroupAndImages();
}
]);

angular.module("we7resource").directive("we7ResourceKeywordDialog", function () {
    return {
        scope: {},
        restrict: "EA",
        templateUrl: "resource/js/app/templates/directive-keyword-keyword.html",
        link: function (e, t, a, n, i) {
            t.bind("click", "pagination li a", function (t) {
                var a = $(t.target).attr("page");
                a && e.$broadcast("keyword_page_change", a)
            })
        }
    }
});

angular.module("we7resource").controller("we7resource-keyword-controller", ["$scope", "$sce", "serviceResource", function (e, t, a) {
    e.keyword = "",
        e.currentId = "",
        e.currentPage = 1,
        e.itemClick = function (e) {
            e.selected = true,
                $(window).trigger("resource_selected", {
                    type: "keyword",
                    items: [e]
                })
        }
        ,
        e.$on("keyword_page_change", function (t, a) {
            e.setCurrentPage(a)
        }),
        e.setCurrentPage = function (t) {
            e.currentPage !== t && (e.currentPage = t,
                n())
        }
        ,
        e.search = function () {
            e.currentPage = 1,
                n()
        }
    ;
    var n = function () {
        a.getResources("keyword", e.currentPage, true, {
            keyword: e.keyword
        }).then(function (a) {
            e.keywords = a.items,
                e.pager = t.trustAsHtml(a.pager)
        })
    };
    n()
}
]);

angular.module("we7resource").directive("we7ResourceModuleDialog", ["$http", function (e) {
    return {
        scope: {},
        restrict: "EA",
        templateUrl: "resource/js/app/templates/directive-module-module.html",
        link: function (e, t, a, n, i) {
            t.bind("click", "pagination li a", function (t) {
                var a = $(t.target).attr("page");
                a && e.$broadcast("module_page_change", a)
            })
        }
    }
}
]);

angular.module("we7resource").controller("we7resource-module-controller", ["$scope", "$sce", "serviceResource", "config", function (e, t, a, n) {
    function i(e) {
        $(window).trigger("resource_selected", {
            type: "module",
            items: e
        })
    }

    function s() {
        $(window).trigger("resource_canceled")
    }

    function o() {
        a.getResources("module", e.currentPage, true, {
            keyword: e.keyword,
            user_module: r,
            mtype: c
        }).then(function (a) {
            e.modules = a.items,
                e.pager = t.trustAsHtml(a.pager)
        })
    }

    e.multiple = n.multiple,
        e.keyword = "";
    var r = 0
        , l = n.others
        , c = "";
    l && l.user_module && (r = 1),
    l && l.mtype && (c = l.mtype),
        e.itemClick = function (t) {
            if (e.multiple) {
                if (t.selected)
                    return void (t.selected = false);
                t.selected = true
            } else
                t.selected = true,
                    $(window).trigger("resource_selected", {
                        type: "module",
                        items: [t]
                    })
        }
        ,
        e.$on("module_page_change", function (t, a) {
            e.setCurrentPage(a)
        }),
        e.setCurrentPage = function (t) {
            e.currentPage != t && (e.currentPage = t,
                o())
        }
        ,
        e.search = function () {
            o()
        }
        ,
        e.ok = function () {
            var t = [];
            angular.forEach(e.modules, function (e, a) {
                e.selected && t.push(e)
            }),
                t.length > 0 ? i(t) : s()
        }
        ,
        o()
}
]);

angular.module("we7resource").directive("we7ResourceMusicDialog", function () {
    return {
        scope: {},
        restrict: "EA",
        replace: false,
        templateUrl: "resource/js/app/templates/directive-music-music.html"
    }
});

angular.module("we7resource").controller("we7resource-music-controller", ["$scope", "$sce", "serviceResource", "config", function (e, t, a, n) {
    e.needType = n.needType,
        e.multiple = n.multiple,
        e.showMusicForm = true,
        e.musicurl = "",
        e.selectVoice = function () {
            e.showMusicForm = false
        }
    ;
    var i = null;
    e.$on("selected_voice", function (t, a) {
        i = a,
            e.musicurl = a.attachment,
            e.showMusicForm = true
    }),
        e.$on("add_music", function (e, t) {
            $(window).trigger("resource_selected", {
                type: "music",
                items: [t]
            })
        })
}
]);

angular.module("we7resource").directive("we7ResourceNewsDialog", function () {
    return {
        scope: {},
        restrict: "EA",
        templateUrl: "resource/js/app/templates/directive-news-news.html",
        link: function (e, t, a, n, i) {
            t.bind("click", "pagination li a", function (t) {
                var a = $(t.target).attr("page");
                a && e.$broadcast("news_page_change", a)
            })
        }
    }
});

angular.module("we7resource").controller("we7resource-news-controller", ["$scope", "$sce", "serviceResource", "$controller", function (e, t, a, n) {
    function i() {
        a.getResources("news", e.currentPage, 1 == e.index, {
            keyword: e.keyword
        }).then(function (a) {
            e.news = a.items,
                e.pager = t.trustAsHtml(a.pager)
        })
    }

    e.resourceType = "news",
        n("we7resource-base-controller", {
            $scope: e
        }),
        e.keyword = "",
        e.canConvert = function (e) {
            return !e || !e.items || "" != e.items[0].author || "" != e.items[0].content
        }
        ,
        e.timeToDate = function (e) {
            return new Date(1e3 * e)
        }
        ,
        e.$on("news_page_change", function (t, a) {
            e.setCurrentPage(a)
        }),
        e.loadData = function () {
            i()
        }
        ,
        e.search = function () {
            e.currentPage = 1,
                i()
        }
        ,
        i()
}
]);

angular.module("we7resource").directive("we7ResourceVideoDialog", function () {
    return {
        scope: {},
        restrict: "EA",
        templateUrl: "resource/js/app/templates/directive-video-video.html",
        link: function (e, t, a, n, i) {
            t.bind("click", "pagination li a", function (t) {
                var a = $(t.target).attr("page");
                a && e.$broadcast("video_page_change", a)
            })
        }
    }
});

angular.module("we7resource").controller("we7resource-video-controller", ["$scope", "$sce", "serviceResource", "config", "$controller", function ($scope, $sce, a, config, $controller) {

    function getNetWorkUrl(netWorkurl) { //注意，这里的netWorkurl是可以包含iframe的通用代码
        if (/^<iframe/.test(netWorkurl)) {
            var url = "";
            /src=\"[^\s"]+/i.test(netWorkurl) && (url = netWorkurl.match(/src=\"[^\s"]+/i)[0].substr(5));
            netWorkurl = /http:\/\/|https:\/\//gi.test(url) ? url : "http://" + url;
        }
        return netWorkurl;
    }

    function getVideos() {
        a.getResources("video", $scope.currentPage, 1 == $scope.index).then(function (a) {
            $scope.videos = a.items;
            $scope.pager = $sce.trustAsHtml(a.pager);
        })
    }

    function getUploadUrl() {
        $scope.uploadurl = 0 === $scope.index ? "./index.php?c=utility&a=file&do=wechat_upload&upload_type=video&mode=perm&uniacid=" + $scope.uniacid : "./index.php?c=utility&a=file&do=upload&upload_type=video&global=" + $scope.global + "&dest_dir=" + $scope.dest_dir + "&uniacid=" + $scope.uniacid
    }

    $scope.resourceType = "video";
    $controller("we7resource-base-controller", {
        $scope: $scope
    });
    $scope.accept = "video/rm, video/rmvb, video/wmv, video/avi, video/mpg, video/mpeg, video/mp4";
    $scope.uploadname = "上传视频";
    $scope.multiupload = false;
    $scope.onIndexChange = function (e) {
        getVideos();
        getUploadUrl();
    };
    getUploadUrl();

    $scope.showNetWork = function () {
        return $scope.netWorkVideo;
    };
    $scope.loadData = function () {
        getVideos();
    };

    $scope.sceurl = function () {
        return $sce.trustAsResourceUrl($scope.netWorkurl)
    };

    $scope.canConvert = function (e) {
        return false
    };

    $scope.$on("video_page_change", function (t, a) {
        $scope.setCurrentPage(a)
    });

    $scope.getTitle = function (e) {
        return e.tag && e.tag.title ? e.tag.title : e.filename
    };

    $scope.fetchNetwork = function () {
        var t = {
            url: getNetWorkUrl($scope.netWorkurl),
            isRemote: true
        };
        triggerResourceSelectedEvent("video", [t])
    };

    $scope.timeToDate = function (e) {
        return new Date(1e3 * e)
    };

    var triggerResourceSelectedEvent = function (resourceType, selectedItems) {
        $(window).trigger("resource_selected", {
            type: "video",
            items: selectedItems
        })
    };
    getVideos();
}
]);

angular.module("we7resource").directive("we7ResourceVoiceDialog", function () {
    return {
        scope: {},
        restrict: "EA",
        templateUrl: "resource/js/app/templates/directive-voice-voice.html",
        link: function (e, t, a, n, i) {
            t.bind("click", "pagination li a", function (t) {
                var a = $(t.target).attr("page");
                a && e.$broadcast("voice_page_change", a)
            })
        }
    }
});

angular.module("we7resource").controller("we7resource-voice-controller", ["$scope", function (e) {
    e.$on("selected_voice", function (e, t) {
        t && !t.url && (t.url = t.attachment),
            $(window).trigger("resource_selected", {
                type: "voice",
                items: [t]
            })
    })
}
]);

/**
 * 为指定的模块定义资源服务serviceResource
 */
angular.module("we7resource").service("serviceResource", ["$rootScope", "$http", "$q", function ($rootScope, $http, a) {
    function n(page, queryparam) {
        return promise("keyword", page, true, queryparam)
    }

    function deferred(page, queryparam) {
        return promise("module", page, true, queryparam)
    }

    function promise(doMethod, page, isLocal, queryparam) {
        // a为$q
        var deferred = a.defer()
            , promise = deferred.promise
            ,
            url = "./index.php?c=utility&a=file&do=" + doMethod + "&page=" + page + "&local=" + (isLocal ? "local" : "wx") + o(queryparam);
        $http.get(url).then(function (response) {
            if (200 == response.status) {
                var message = response.data.message;
                if ("0" == message.errno) {
                    var items = message.message.items;
                    deferred.resolve({
                        pager: message.message.pager,
                        items: items
                    })
                }
            }
            deferred.resolve([]);
        }, function (e) {
            deferred.reject(e);
        });
        return promise;
    }

    function o(queryparam) {
        var querystring = "";
        angular.forEach(queryparam, function (value, key) {
            querystring += "&" + key + "=" + value
        });
        return querystring;
    }

    var serviceResource = {};
    serviceResource.getResources = function (type, page, a, queryparam) {
        var resources = null;
        switch (type) {
            case "keyword":
                resources = n(page, queryparam);
                break;
            case "module":
                resources = deferred(page, queryparam);
                break;
            case "video":
                resources = promise("video", page, a);
                break;
            case "news":
                resources = promise("news", page, a, queryparam);
                break;
            case "voice":
                resources = promise("voice", page, a, queryparam);
                break;
            case "image":
                resources = promise("image", page, a, queryparam)
        }
        return resources;
    };

    serviceResource.imageGroup = function (isLocal, queryparam) {
        var deferred = a.defer()
            , promise = deferred.promise
            , url = "./index.php?c=utility&a=file&do=group_list&local=" + (isLocal ? "local" : "wx") + o(queryparam);
        $http.get(url).then(function (response) {
            if (200 == response.status) {
                var message = response.data.message;
                if ("0" == message.errno)
                    return void deferred.resolve(message.message);
                deferred.reject({
                    state: false,
                    message: message.message
                })
            }
        });
        return promise;
    };

    serviceResource.addGroup = function (groupName, isLocal, queryparam) {
        var deferred = a.defer()
            , promise = deferred.promise
            , url = "./index.php?c=utility&a=file&do=add_group&local=" + (isLocal ? "local" : "wx") + o(queryparam);
        $http.post(url, {
            name: groupName
        }).then(function (response) {
            if (200 == response.status) {
                var message = response.data.message;
                if ("0" == message.errno)
                    return void deferred.resolve(message.message);
                deferred.reject({
                    state: false,
                    message: message.message
                })
            }
            deferred.reject({
                state: false,
                message: "添加失败"
            })
        }, function (e) {
            deferred.reject({
                state: false,
                message: "添加失败"
            })
        });
        return promise;
    };

    serviceResource.changeGroup = function (groupName, isLocal, queryparam) {
        var deferred = a.defer()
            , promise = deferred.promise
            , url = "./index.php?c=utility&a=file&do=change_group&local=" + (isLocal ? "local" : "wx") + o(queryparam);
        $http.post(url, {
            name: groupName.name,
            id: groupName.id
        }).then(function (response) {
            if (200 == response.status) {
                var message = response.data.message;
                if ("0" == message.errno)
                    return void deferred.resolve(message.message);
                deferred.reject({
                    state: false,
                    message: message.message
                })
            }
            deferred.reject({
                state: false,
                message: "更新失败"
            })
        }, function (e) {
            deferred.reject({
                state: false,
                message: "更新失败"
            })
        });
        return promise;
    };

    serviceResource.delGroup = function (groupId, isLocal, queryparam) {
        var deferred = a.defer()
            , promise = deferred.promise
            , url = "./index.php?c=utility&a=file&do=del_group&local=" + (isLocal ? "local" : "wx") + o(queryparam);
        $http.post(url, {
            id: groupId
        }).then(function (response) {
            if (200 == response.status) {
                var message = response.data.message;
                if ("0" == message.errno)
                    return void deferred.resolve(message.message);
                deferred.reject({
                    state: false,
                    message: message.message
                })
            }
            deferred.reject({
                state: false,
                message: "删除失败"
            })
        }, function (e) {
            deferred.reject({
                state: false,
                message: "删除失败"
            })
        });
        return promise;
    };

    serviceResource.moveToGroup = function (imageids, groupId, isLocal, queryparam) {
        var deferred = a.defer()
            , promise = deferred.promise
            , c = "./index.php?c=utility&a=file&do=move_to_group&local=" + (isLocal ? "local" : "wx") + o(queryparam);
        $http.post(c, {
            id: groupId,
            keys: imageids
        }).then(function (response) {
            if (200 == response.status) {
                var message = response.data.message;
                if ("0" == message.errno)
                    return void deferred.resolve(message.message);
                deferred.reject({
                    state: false,
                    message: message.message
                })
            }
            deferred.reject({
                state: false,
                message: "移动成功"
            })
        }, function (e) {
            deferred.reject({
                state: false,
                message: "移动失败"
            })
        });
        return promise;
    };

    serviceResource.delMuti = function (resourceIds, type, isLocal, queryparam) {
        var deferred = a.defer()
            , promise = deferred.promise
            , url = "./index.php?c=utility&a=file&do=delete&local=" + (isLocal ? "local" : "wx") + o(queryparam);
        $http.post(url, {
            id: resourceIds,
            type: type
        }).then(function (response) {
            if (200 == response.status) {
                var message = response.data.message;
                if ("0" == message.errno)
                    return void deferred.resolve(true);
                deferred.reject({
                    state: false,
                    message: message.message
                })
            }
            deferred.reject({
                state: false,
                message: "删除失败"
            })
        }, function (e) {
            deferred.reject({
                state: false,
                message: "删除失败"
            })
        });
        return promise;
    };

    serviceResource.delItem = function (material_id, type, isLocal, uniacid) {
        var deferred = a.defer()
            , promise = deferred.promise
            , isLocal = isLocal ? "local" : "wechat"
            , c = "./index.php?c=platform&a=material&do=delete&uniacid=" + uniacid;
        $http.post(c, {
            material_id: material_id,
            type: type,
            server: isLocal
        }).then(function (response) {
            if (200 == response.status) {
                var message = response.data.message;
                if ("0" == message.errno)
                    return void deferred.resolve(true);
                deferred.reject({
                    state: false,
                    message: message.message
                })
            }
            deferred.reject({
                state: false,
                message: "删除失败"
            })
        }, function (e) {
            deferred.reject({
                state: false,
                message: "删除失败"
            })
        });
        return promise;
    };

    /**
     * 本地服务器资源转换为微信服务器端或者反之
     * @param resource_id
     * @param type
     * @param isToLocal
     * @returns {*}
     */
    serviceResource.convert = function (resource_id, type, isToLocal) {
        var deferred = a.defer()
            , promise = deferred.promise
            ,
            url = "./index.php?c=utility&a=file&do=" + (isToLocal ? "tolocal" : "towechat") + "&type=" + type + "&resource_id=" + resource_id;
        $http.get(url).then(function (response) {
            if (200 == response.status) {
                var message = response.data.message;
                if (0 == message.errno) {
                    var message = message.message;
                    deferred.resolve(message)
                }
                1 == message.errno && deferred.reject(message.message)
            }
            deferred.resolve(null)
        }, function (e) {
            deferred.reject(e)
        });
        return promise;
    };

    serviceResource.netWorkconvert = function (remoteUrl, isNetworktolocal, resourceType) {
        var deferred = a.defer()
            , promise = deferred.promise
            ,
            url = "./index.php?c=utility&a=file&do=" + (isNetworktolocal ? "networktolocal" : "networktowechat") + "&url=" + encodeURIComponent(remoteUrl) + "&type=" + resourceType;
        $http.get(url).then(function (response) {
            if (200 == response.status) {
                var message = response.data.message;
                if (0 == message.errno) {
                    var message = message.message;
                    deferred.resolve(message)
                }
                1 == message.errno && deferred.reject(message.message)
            }
            deferred.resolve(null)
        }, function (e) {
            deferred.reject(e)
        });
        return promise;
    };

    return serviceResource;
}
]);

we7ResourceMusicFormController.$inject = ["$scope"];
angular.module("we7resource").component("we7ResourceMusicform", {
    templateUrl: "widget-musicform-musicform.html",
    bindToController: true,
    controller: we7ResourceMusicFormController,
    bindings: {
        doselect: "&",
        musicurl: "<"
    }
});

UploadController.$inject = ["$scope", "$sce", "uiUploader", "$timeout"];
angular.module("we7resource").component("we7UploaderBtn", {
    templateUrl: "resource/js/app/templates/widget-upload-upload.html",
    controller: UploadController,
    transclude: true, // 告诉AngularJs去获取当前指令模版内部的所有内容，就是标签内的内容
    replace: true,
    bindings: { // 表示组件属性传入的值，<’代表单向，‘=’代表双向，&表示绑定方法
        name: "<",
        uploadUrl: "<",
        accept: "<",
        onUploading: "&",
        onUploaded: "&",
        onUploadError: "&",
        onProgress: "&",
        multiple: "<"
    }
});

uiUploader.$inject = ["$log", "$q"];
// 这里uiUploader是前面的函数
angular.module("we7resource").service("uiUploader", ["$log", "$q", uiUploader]);

VoiceController.$inject = ["$scope", "$sce", "serviceResource", "$controller"],
    angular.module("we7resource").component("we7ResourceVoice", {
        templateUrl: "widget-voice-voice.html",
        controller: VoiceController,
        transclude: true,
        bindings: {
            isWechat: "<",
            showType: "<"
        }
    });

angular.module("wesiteApp", ["we7app"]);

angular.module("wesiteApp").controller("WesiteDisplay", ["$scope", "$http", "serviceCommon", "config", function (e, t, a, n) {
    e.default_site = n.default_site,
        e.multis = n.multis,
        e.links = n.links,
        angular.forEach(e.multis, function (t, a) {
            t.copyLink = e.links.appHome + "t=" + t.id
        }),
        e.preview = function (t) {
            var t = parseInt(t)
                ,
                a = util.dialog("预览模板", '<iframe width="320px" scrolling="yes" height="480px" frameborder="0" src="about:blank"></iframe>', '<button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>')
                , n = e.links.appHome + "&t=" + t;
            a.find("iframe").attr("src", n),
                a.find(".modal-dialog").css({
                    width: "322px"
                }),
                a.find(".modal-body").css({
                    padding: "0",
                    height: "480px"
                }),
                a.modal("show")
        }
        ,
        e.switchOn = function (a, n) {
            var i = _.indexOf(e.multis, a)
                , n = parseInt(n);
            i > -1 && t.post(e.links.switch, {
                id: n
            }).success(function (t) {
                0 == t.message.errno && (e.multis[i].status = 1 == e.multis[i].status ? "0" : "1",
                    util.message("修改成功！"))
            })
        }
        ,
        e.success = function (e) {
            var e = parseInt(e)
                ,
                t = $('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>');
            a.copySuccess(e, t)
        }
}
]);

angular.module("wesiteApp").controller("WesitePost", ["$scope", "config", "$http", "serviceCommon", "serviceHomeMenuBase", "serviceQuickMenuBase", "serviceQuickMenuSubmit", function ($scope, config, a, serviceCommon, serviceHomeMenuBase, serviceQuickMenuBase, serviceQuickMenuSubmit) {
    $scope.links = config.links;
    $scope.attachurl = config.attachurl;
    $scope.default_site = config.default_site;
    $scope.temtypes = config.temtypes;
    $scope.temtype = {
        name: "all",
        title: "全部"
    };
    $scope.searchedStyleName = "";
    $scope.multi = config.multi;
    $scope.styles = config.styles;
    $scope.siteEntrance = $scope.links.murl + "t=" + $scope.multi.id;
    $scope.slideLists = [];
    $scope.showSlideSubmit = false;
    $scope.addHomemenuStatus = false;
    $scope.homeMenu = [];
    $scope.sections = serviceHomeMenuBase.initSections();
    $scope.menuInfo = serviceHomeMenuBase.initHomemenuInfo();
    $scope.activeItem = {};
    $scope.modules = {};
    $scope.quickMenuStatus = true;
    $scope.hasIgnoreModules = 0;
    $scope.submit = {};

    $scope.success = function (id) {
        var e = parseInt(id),
            t = $('<span class="label label-success" style="position:absolute;z-index:10;width:90px;height:34px;line-height:28px;"><i class="fa fa-check-circle"></i> 复制成功</span>');
        serviceCommon.copySuccess(e, t);
    };

    /**
     * 选择模板
     * @param style
     */
    $scope.selectStyle = function (style) {
        $scope.multi.style = style
    };

    /**
     * 搜索模板
     */
    $scope.searchStyle = function () {
        a.post($scope.links.searchStyleLink, {
            name: $scope.searchedStyleName
        }).success(function (t) {
            0 == t.message.errno && ($scope.styles = t.message.message)
        })
    };

    $scope.changeMultiStatus = function () {
        $scope.multi.status = 1 == $scope.multi.status ? 0 : 1
    };

    $scope.uploadMultiImage = function () {
        require(["fileUploader"], function (t) {
            t.init(function (t) {
                $scope.multi.site_info.thumb = t.url,
                    $scope.$apply($scope.multi.site_info)
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $scope.delMultiImage = function () {
        $scope.multi.site_info.thumb = ""
    };

    $scope.loadSlideInfo = function () {
        a.post($scope.links.slideDisplay, {
            multiid: config.multiid
        }).success(function (t) {
            0 == t.message.errno && ($scope.slideLists = t.message.message,
            _.isEmpty($scope.slideLists) || ($scope.showSlideSubmit = true))
        })
    };

    $scope.addSlide = function () {
        $scope.slideLists.push({
            title: "",
            displayorder: 0,
            thumb: "",
            url: ""
        });
        $scope.showSlideSubmit = true;
    };

    $scope.delSlide = function (t) {
        var a = _.indexOf($scope.slideLists, t);
        a > -1 && ($scope.slideLists = _.without($scope.slideLists, $scope.slideLists[a])),
        _.isEmpty($scope.slideLists) && ($scope.showSlideSubmit = false)
    };

    $scope.uploadSlideImage = function (t) {
        var a = _.indexOf($scope.slideLists, t);
        a > -1 ? require(["fileUploader"], function (t) {
            t.init(function (t) {
                $scope.slideLists[a].thumb = t.url,
                    $scope.$apply($scope.slideLists)
            }, {
                direct: true,
                multiple: false
            })
        }) : util.message("参数错误，请刷新页面重试！")
    };

    $scope.delSlideImage = function (t) {
        var a = _.indexOf($scope.slideLists, t);
        a > -1 && ($scope.slideLists[a].thumb = "")
    };

    $scope.saveSlide = function () {
        a.post($scope.links.slidePost, {
            slide: $scope.slideLists,
            multiid: config.multiid
        }).success(function (e) {
            e.message.errno,
                util.message(e.message.message)
        })
    };

    $scope.loadHomemenuInfo = function () {
        a.post($scope.links.homeMenuDisplay, {
            multiid: config.multiid
        }, {
            cache: false
        }).success(function (t) {
            0 == t.message.errno && ($scope.homeMenu = t.message.message,
                $scope.addHomemenuStatus = false)
        })
    };

    // 增加或修改菜单
    $scope.changeHomemenuStatus = function (menuInfo) {
        $scope.addHomemenuStatus = !$scope.addHomemenuStatus;
        if (_.isEmpty(menuInfo)) // 没有提供参数，则创建一个
            $scope.menuInfo = serviceHomeMenuBase.initHomemenuInfo();
        else { // 存在
            $scope.menuInfo = menuInfo;
            var section = parseInt($scope.menuInfo.section);
            section = section <= 10 && section >= 0 ? section : 0;
            $scope.menuInfo.section = $scope.sections[section];
            _.isEmpty($scope.menuInfo.icon) ? $scope.menuInfo.icontype = 1 : $scope.menuInfo.icontype = 2;
        }
    };

    $scope.updateMenu = function (t, n) {
        var i = parseInt(t.id)
            , s = _.indexOf($scope.homeMenu, t);
        if (s > -1)
            switch (n) {
                case "del":
                    a.post($scope.links.homeMenuDel, {
                        id: i
                    }).success(function (a) {
                        0 == a.message.errno ? (util.message("删除成功！"),
                            $scope.homeMenu = _.without($scope.homeMenu, t)) : (-1 == a.message.errno && util.message("本公众号不存在该导航！"),
                        1 == a.message.errno && util.message("删除失败，请稍候重试。"))
                    });
                    break;
                case "switch":
                    a.post($scope.links.homeMenuSwith, {
                        id: i
                    }).success(function (t) {
                        0 == t.message.errno ? $scope.homeMenu[s].status = !$scope.homeMenu[s].status : (-1 == t.message.errno && util.message("本公众号不存在该导航！"),
                        1 == t.message.errno && util.message("更新失败，请稍候重试。"))
                    })
            }
    };

    $scope.uploadHomemenuImage = function (t) {
        require(["fileUploader"], function (t) {
            t.init(function (t) {
                $scope.menuInfo.icon = t.attachment,
                    $scope.$apply($scope.menuInfo)
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $scope.delHomemenuImage = function (t) {
        $scope.menuInfo.icon = ""
    };

    $scope.selectHomemenuIcon = function () {
        util.iconBrowser(function (t) {
            $scope.menuInfo.css.icon.icon = t,
                $scope.$apply($scope.menuInfo.css)
        })
    };

    $scope.saveMenu = function () {
        a.post($scope.links.homeMenuPost, {
            menu_info: $scope.menuInfo,
            multiid: config.multiid
        }).success(function (t) {
            0 == t.message.errno ? (util.message("导航菜单保存成功！"),
                $scope.loadHomemenuInfo()) : (1 == t.message.errno && util.message("保存失败！"),
            -1 == t.message.errno && util.message("抱歉，请输入导航菜单的名称！"))
        })
    };

    $scope.successMenu = function (id) {
        var e = parseInt(id),
            t = $('<span class="label label-success" style="position:absolute;z-index:10;width:80px;margin-left:10px"><i class="fa fa-check-circle"></i> 复制成功</span>');
        serviceCommon.copySuccess(e, t)
    };

    $scope.quickMenuSwitch = function () {
        $scope.quickMenuStatus = !$scope.quickMenuStatus
    };

    $scope.loadQuickmenuInfo = function () {
        a.post($scope.links.quickMenuDisplay, {
            multiid: config.multiid
        }).success(function (t) {

            if (0 == t.message.errno) {
                $scope.activeItem = t.message.message.params;

                if ($scope.activeItem.position) {
                    $scope.activeItem.position.homepage = !!$scope.activeItem.position.homepage;
                    $scope.activeItem.position.page = !!$scope.activeItem.position.page;
                    $scope.activeItem.position.article = !!$scope.activeItem.position.article;
                } else {
                    $scope.activeItem.position = {
                        homepage: false,
                        page: false,
                        article: false
                    }
                }

                serviceQuickMenuBase.initActiveItem($scope.activeItem);
                $scope.modules = t.message.message.modules;
                $scope.quickMenuStatus = t.message.message.status;
                $scope.hasIgnoreModules = _.size($scope.activeItem.ignoreModules);
            } else {
                util.message("请求错误：微站不存在，请按“Ctrl+F5”刷新重试！");
            }
        })
    };

    // 保存导航快捷菜单
    $scope.saveQucikMenu = function () {
        $scope.submit = serviceQuickMenuSubmit.submit();
        a.post($scope.links.quickMenuPost, {
            multiid: config.multiid,
            postdata: $scope.submit,
            status: $scope.quickMenuStatus ? 1 : 0
        }).success(function (e) {
            0 == e.message.errno ? util.message("保存成功。您可点击“预览刷新”查看效果！") : util.message(e.message.message)
        })
    };

    $scope.showSearchModules = function () {
        $scope.moduleDialog = $("#shop-modules-modal").modal(),
            $("#shop-modules-modal .modal-body .btn-primary").html("取消"),
            $("#shop-modules-modal").find(".modal-footer .btn-primary").unbind("click").click(function () {
                $scope.activeItem.ignoreModules = {},
                    $("#shop-modules-modal .modal-body .btn-primary").each(function () {
                        $scope.hasIgnoreModules = true,
                            $scope.activeItem.ignoreModules[$(this).attr("js-name")] = {
                                name: $(this).attr("js-name"),
                                title: $(this).attr("js-title")
                            }
                    }),
                    $scope.$apply("activeItem"),
                    $scope.$apply("hasIgnoreModules"),
                    serviceQuickMenuBase.setQuickMenuData("ignoreModules", $scope.activeItem.ignoreModules)
            })
    };

    $scope.selectNavStyle = function () {
        var t = $('#shop-nav-modal .alert input[type="radio"]:checked').val();
        $scope.activeItem.navStyle = serviceQuickMenuBase.selectNavStyle(t)
    };

    $scope.addMenu = function () {
        $scope.activeItem.menus = serviceQuickMenuBase.addMenu()
    };

    $scope.addSubMenu = function (t) {
        var a = _.findIndex($scope.activeItem.menus, t);
        $scope.activeItem.menus[a].submenus = serviceQuickMenuBase.addSubMenu(t)
    };

    $scope.removeMenu = function (t) {
        $scope.activeItem.menus = serviceQuickMenuBase.removeMenu(t)
    };

    $scope.removeSubMenu = function (t, a) {
        serviceQuickMenuBase.removeSubMenu(t, a),
            $scope.activeItem.menus[t].submenus = _.without($scope.activeItem.menus[t].submenus, a)
    }
}
]);

angular.module("wesiteApp").controller("WesiteTplDidplay", ["$scope", "config", function ($scope, config) {

    $scope.stylesResult = config.stylesResult;
    $scope.temtypes = config.temtypes;
    $scope.type = config.type;
    $scope.setting = config.setting;
    $scope.links = config.links;

    $scope.preview = function (styleid) {
        var t = parseInt(styleid),
            a = '\t\t\t<a href="' + $scope.links.default + "&styleid=" + t + '" class="btn btn-primary">设为默认模板</a>\t\t\t<a href="' + $scope.links.designer + "&styleid=" + t + '" class="btn btn-primary">设计风格</a>\t\t\t<button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>',
            dialog = util.dialog("预览模板", '<iframe width="320" scrolling="yes" height="480" frameborder="0" src="about:blank"></iframe>', a);

        dialog.find("iframe").on("load", function () {
            $("a", this.contentWindow.document.body).each(function () {
                var e = $(this).attr("href");
                if (e && "#" != e[0]) {
                    var a = e.split(/#/g)
                        , n = a[0];
                    "&" != n.slice(-1) && (n += "&");
                    -1 != n.indexOf("?") && (n += "s=" + t);
                    a[1] && (n += "#" + a[1]);
                    "javascript" != n.substr(0, 10) && -1 != n.indexOf("?") || (n = n.substr(0, n.lastIndexOf("&")));
                    $(this).attr("href", n);
                }
            })
        });
        var i = $scope.links.home + "&s=" + t;
        dialog.find("iframe").attr("src", i);
        dialog.find(".modal-dialog").css({
            width: "322px"
        });
        dialog.find(".modal-body").css({
            padding: "0",
            height: "480px"
        });
        dialog.modal("show");
    };

    $scope.selectDefault = function (styleid) {
        var a = parseInt(styleid);
        location.href = $scope.links.default + "&styleid=" + a
    };
}
]);

angular.module("wesiteApp").controller("WesiteTplPost", ["$scope", "config", function ($scope, config) {
    $scope.style = config.style;
    $scope.styles = config.styles ? config.styles : {};
    $scope.template = config.template;
    $scope.systemtags = config.systemtags;
    $scope.customStyles = [];

    angular.forEach($scope.styles, function (t, a) {
        -1 == _.indexOf($scope.systemtags, t.variable) && $scope.customStyles.push(t)
    });

    $scope.addCustomAttribute = function () {
        $("#customForm").append($("#item-form-html").html())
    };

    $scope.delCustomArrtibute = function (e) {
        $(e.target).parent().parent().remove()
    };

    $scope.uploadImage = function () {
        require(["fileUploader"], function (t) {
            t.init(function (t) {
                $scope.styles.indexbgimg = {
                    content: t.url
                },
                    $scope.$apply($scope.styles.indexbgimg.content)
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $scope.delImage = function () {
        $scope.styles.indexbgimg = ""
    };

    $scope.checkSubmit = function (e) {
        for (var t = $(':text[name="custom[name][]"]'), a = $(':text[name="custom[desc][]"]'), n = $(':text[name="custom[value][]"]'), i = 0; i < t.length; i++)
            if (_.isEmpty(t[i].value))
                return util.message("自定义属性变量名不可为空！"),
                    false;
        for (var s = 0; s < a.length; s++)
            if (_.isEmpty(a[s].value))
                return util.message("自定义属性变量描述不可为空！"),
                    false;
        for (var o = 0; o < n.length; o++)
            if (_.isEmpty(n[o].value))
                return util.message("自定义属性变量值不可为空！"),
                    false;
        $("#submit-post").click()
    };
}
]);

angular.module("wesiteApp").controller("wesiteArticleDisplay", ["$scope", "config", "serviceCommon", "$http", function ($scope, config, a, $http) {
    $scope.category = config.category;
    $scope.articleList = config.articleList;
    $scope.commentListLink = config.commentListLink;
    $scope.articleComment = config.articleComment;
    $scope.setting = config.setting;
    $scope.commentLink = config.commentLink;

    angular.forEach($scope.articleList, function (a, n) {
        if (0 != a.pcate) {
            var i = parseInt(a.pcate);
            if (0 != a.ccate) {
                s = parseInt(a.ccate);
                angular.isDefined($scope.category[i]) && angular.isDefined($scope.category[s]) && (a.title = "【" + $scope.category[i].name + "】-【" + $scope.category[s].name + "】" + a.title)
            } else
                angular.isDefined($scope.category[i]) && (a.title = "【" + $scope.category[i].name + "】" + a.title)
        } else if (0 != a.ccate) {
            var s = parseInt(a.ccate);
            angular.isDefined($scope.category[s]) && (a.title = "【" + $scope.category[s].name + "】" + a.title)
        }
        a.link = config.copyCommonLink + a.id;
        var o = $scope.articleComment;
        a.count = o && o[a.id] ? $scope.articleComment[a.id].count : 0,
            $scope.articleList[n] = a
    });

    $scope.success = function (e) {
        var e = parseInt(e),
            t = $('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>');
        a.copySuccess(e, t);
    };

    $scope.editArticle = function (articleId) {
        var e = parseInt(articleId);
        location.href = "./index.php?c=site&a=article&do=post&id=" + e;
    };

    $scope.delArticle = function (articleId) {
        if (confirm("此操作不可恢复，确认吗？")) {
            var e = parseInt(articleId);
            location.href = "./index.php?c=site&a=article&do=del&id=" + e;
        }
    };

    // 开启和关闭评论
    $scope.comment = function () {
        $http.post($scope.commentLink, {}).success(function (t) {

            if (0 == t.message.errno) {
                $scope.setting.comment_status = t.message.message;
                util.message("设置成功");
            } else {
                util.message(t.message.message, t.direct);
            }
        })
    }
}
]);

angular.module("wesiteApp").controller("WesiteArticlePost", ["$scope", "config", function ($scope, config) {
    $scope.item = config.item;
    $scope.keywords = config.keywords;
    $scope.id = config.id;
    $scope.template = config.template;

    $scope.uploadImage = function () {
        require(["fileUploader"], function (fileUploader) {
            fileUploader.init(function (t) {
                $scope.item.thumb = t.url;
                $scope.$apply($scope.item.thumb);
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $scope.delImage = function () {
        $scope.item.thumb = ""
    }
}
]);

angular.module("wesiteApp").controller("WesiteCategoryPost", ["$scope", "config", function ($scope, config) {
    $scope.id = config.id;
    $scope.category = config.category;
    $scope.parent = config.parent;
    $scope.parentid = config.parentid;
    $scope.multis = config.multis;
    $scope.site_template = config.site_template;
    $scope.styles = config.styles;

    angular.isUndefined($scope.category.enabled) ? $scope.enabled = true : $scope.id && 1 == $scope.category.enabled ? $scope.enabled = true : $scope.enabled = false;

    angular.isUndefined($scope.category.icontype) || 0 == $scope.category.icontype || 1 == $scope.category.icontype ? $scope.icontype = true : $scope.icontype = false;

    $scope.selectIcon = function () {
        util.iconBrowser(function (t) {
            $scope.category.css.icon.icon = t;
            $scope.$apply($scope.category.css);
        })
    };

    $scope.showWesite = function () {
        $(".js-site-selector").show()
    };

    $scope.hideWesite = function () {
        $(".js-site-selector").hide()
    };

    $scope.changeStyle = function (styleId) {
        var a = parseInt(styleId)
            , n = $(".title-" + a).text()
            , i = $(".preview-" + a).attr("src");

        $(".item-style").removeClass("active");
        $scope.category.styleid = a;
        $("#current-title").text(n);
        $("#current-preview").attr("src", i);
        $(".title-" + a).parent().parent().addClass("active");
        $("#ListStyle").modal("hide");
        $scope.$apply($scope.category.styleid);
    };

    $scope.uploadImage = function () {
        require(["fileUploader"], function (fileUploader) {
            fileUploader.init(function (t) {
                $scope.category.icon = t.url;
                $scope.$apply($scope.category.icon);
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $scope.delImage = function () {
        $scope.category.icon = ""
    }
}
]);

angular.module("wesiteApp").controller("articleComment", ["$scope", "config", "$http", function ($scope, config, a) {
    $scope.articleId = config.articleId;
    $scope.order_sort = config.order_sort;
    $scope.is_comment = config.is_comment;
    $scope.articleList = config.articleList;
    $scope.links = config.links;
    $scope.content = "";

    $scope.replyarticle = function (comment) {
        comment.replying = true
    };

    $scope.cancel = function (e) {
        e.replying = false
    };

    $scope.send = function (t) {
        var n = t.id;
        a.post($scope.links.reply, {
            articleid: $scope.articleId,
            parentid: n,
            content: t.replycontent
        }).success(function (e) {
            if (0 != e.message.errno)
                return util.message(e.message.message),
                    false;
            t.son_comment.push(e.message.message),
                t.replying = false,
                t.replycontent = ""
        })
    };

    $scope.changeSort = function () {
        a.post($scope.links.display, {
            order: $scope.order_sort,
            id: $scope.articleId
        }).success(function (t) {
            $scope.articleList = t.message.message
        })
    };

    $scope.changeComment = function () {
        a.post($scope.links.display, {
            iscommend: $scope.is_comment,
            id: $scope.articleId
        }).success(function (t) {
            $scope.articleList = t.message.message
        })
    }
}
]);

angular.module("wesiteApp").service("serviceCommon", ["$rootScope", function ($rootScope) {
    var t = {};

    t.copySuccess = function (id, html) {
        var e = parseInt(id)
            , t = html
            , a = $("#copy-" + e).next().html();
        (!a || a.indexOf('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>') < 0) && $("#copy-" + e).after(t);
        setTimeout(function () {
            t.remove()
        }, 2e3);
    };

    return t;
}
]);

// 首页导航菜单
angular.module("wesiteApp").service("serviceHomeMenuBase", ["$rootScope", function ($rootScope) {
    var menuInfo = {};

    menuInfo.initHomemenuInfo = function () {
        return {
            css: {
                icon: {
                    width: "",
                    color: "",
                    icon: ""
                }
            },
            name: "",
            description: "",
            url: "",
            status: 1,
            displayorder: 0,
            icon: "",
            icontype: 1,
            section: 0
        }
    };

    menuInfo.initSections = function () {
        return [{
            num: 0,
            val: "不设置位置"
        }, {
            num: 1,
            val: "位置1"
        }, {
            num: 2,
            val: "位置2"
        }, {
            num: 3,
            val: "位置3"
        }, {
            num: 4,
            val: "位置4"
        }, {
            num: 5,
            val: "位置5"
        }, {
            num: 6,
            val: "位置6"
        }, {
            num: 7,
            val: "位置7"
        }, {
            num: 8,
            val: "位置8"
        }, {
            num: 9,
            val: "位置9"
        }, {
            num: 10,
            val: "位置10"
        }]
    };

    return menuInfo;
}
]);

// 导航快捷菜单
angular.module("wesiteApp").service("serviceQuickMenuBase", ["$rootScope", function ($rootScope) {
    var t = {}
        , a = {};

    t.initActiveItem = function (e) {
        return a = angular.isObject(e) ? e : {
            navStyle: 1,
            bgColor: "#2B2D30",
            menus: [],
            extend: [],
            position: {
                homepage: true,
                usercenter: true,
                page: true,
                article: true
            },
            ignoreModules: {}
        }
    };

    t.selectNavStyle = function (e) {
        a.navStyle = e;
        return a.navStyle;
    };

    t.addMenu = function () {
        void 0 === a.menus && (a.menus = []);
        a.menus.push({
            title: "标题",
            url: "",
            submenus: [],
            icon: {
                name: "fa-home",
                color: "#00ffff"
            },
            image: "",
            hoverimage: "",
            hovericon: ""
        });
        return a.menus
    };

    t.removeMenu = function (e) {
        var t = $.inArray(e, a.menus)
            , n = angular.copy(a.menus);
        a.menus = [];
        for (i in n)
            i != t && a.menus.push(n[i]);
        return a.menus;
    };

    t.addSubMenu = function (e) {
        var t = _.findIndex(a.menus, e);
        return void 0 === a.menus[t].submenus ? a.menus[t].submenus = [{
            title: "标题",
            url: ""
        }] : a.menus[t].submenus.push({
            title: "标题",
            url: ""
        }),
            a.menus[t].submenus
    };

    t.removeSubMenu = function (e, t) {
        return a.menus[e].submenus = _.without(a.menus[e].submenus, t),
            a.menus[e].submenus
    };

    t.getQuickMenuData = function (e) {
        return angular.isString(e) ? a[e] : a
    };

    t.setQuickMenuData = function (e, t) {
        angular.isObject(e) ? angular.forEach(e, function (e, t) {
            a[t] = e
        }) : a[e] = t
    };

    return t;
}
]);

angular.module("wesiteApp").service("serviceQuickMenuSubmit", ["serviceQuickMenuBase", function (serviceQuickMenuBase) {
    var serviceQuickMenuSubmit = {};

    serviceQuickMenuSubmit.stripHaskey = function (e) {
        for (var a in e)
            "$$hashKey" == a ? delete e[a] : "object" == typeof e[a] && serviceQuickMenuSubmit.stripHaskey(e[a]);
        return e
    };

    serviceQuickMenuSubmit.submit = function () {
        var a = {
            params: {},
            html: ""
        };
        a.params = serviceQuickMenuBase.getQuickMenuData();
        serviceQuickMenuSubmit.stripHaskey(a.params);
        var n = $(".nav-menu").html();
        n = n.replace(/<\!\-\-([^-]*?)\-\->/g, "");
        n = n.replace(/ng\-[a-zA-Z-]+=\"[^\"]*\"/g, "");
        n = n.replace(/ng\-[a-zA-Z]+/g, "");
        n = n.replace(/[\t\n\n\r]/g, "");
        a.html = n;
        return a;
    };

    return serviceQuickMenuSubmit;
}
]);

angular.module("specialApp", ["wapeditorApp"]);

angular.module("specialApp").controller("MainCtrl", ["$scope", "$timeout", "$uibModal", "widget", "config", "serviceCommon", "serviceSetStyle", "serviceBase", "serviceSpecialBase", "serviceSubmit", "serviceMultiSubmit", "serviceMultiPage", "serviceUpwardCompatible", "$sanitize", function (e, t, a, n, i, s, o, r, l, c, u, d, p, m) {
    e.modules = [],
        e.editors = [],
        e.allPages = i.allPages,
        e.multipage = i.multipage ? i.multipage : [],
        e.submit = {
            params: {},
            html: "",
            multipage: []
        },
        e.isNew = true,
    e.allPages && -1 == _.findIndex(e.allPages, {
        active: true
    }) && (e.isNew = false,
        e.allPages = [{
            property: e.allPages,
            active: true
        }]),
        r.setBaseData("isNew", e.isNew),
        e.allPages = e.allPages ? e.allPages : [{
            property: [],
            active: true
        }];
    var f = _.findIndex(e.allPages, {
        active: true
    });
    e.activeModules = f > -1 ? r.initActiveModules(e.allPages[f].property) : [],
        e.activePageIndex = f > -1 ? f : 0,
        l.setBaseData("activePageIndex", e.activePageIndex),
        e.activeItem = {},
        e.activeIndex = 0,
        e.index = e.activeModules.length ? s.getMaxScopeIndex(e.allPages) + 1 : 0,
        r.setBaseData("index", e.index),
        e.pageLength = _.isEmpty(e.activeModules) ? 1 : e.activeModules[0].params.pageLength ? e.activeModules[0].params.pageLength : 1,
        e.isMultiPage = 0 == e.index || !(e.activeModules[s.getHeaderIndex(e.activeModules)].params.pageLength > 1),
        e.isLongPage = 0 == e.index || (e.activeModules[s.getHeaderIndex(e.activeModules)].params.pageLength > 1 || 1 == e.activeModules[s.getHeaderIndex(e.activeModules)].params.pageLength && 1 == e.allPages.length),
        e.pageLengths = {
            1: 1,
            2: 2,
            3: 3,
            4: 4,
            5: 5
        },
        e.lineHeights = {
            1: 1,
            1.25: 1.25,
            1.5: 1.5,
            2: 2,
            2.5: 2.5
        },
        e.fontSizes = {
            12: 12,
            14: 14,
            16: 16,
            18: 18,
            20: 20,
            22: 22,
            24: 24,
            26: 26,
            28: 28,
            30: 30,
            32: 32,
            34: 34,
            36: 36,
            38: 38,
            40: 40
        },
        l.setBaseData("allPages", e.allPages),
        l.setBaseData("multipage", e.multipage),
        r.setBaseData("pageLength", e.pageLength),
    e.isNew || (e.activeModules = p.compatibility(e.activeModules),
    void 0 === e.activeModules[0].params.pageLength && (e.activeModules[0].params.pageLength = Math.ceil($(".modules").height() / 568)),
    e.activeModules[0].params.pageLength > 1 && (e.pageLength = e.activeModules[0].params.pageLength,
        e.isMultiPage = false,
        e.isLongPage = true,
        r.setBaseData("pageLength", e.pageLength),
        t(function () {
            $(".app-content").css("height", 568 * e.pageLength + "px")
        }, 100)),
        t(function () {
            var t = 0
                , a = height = "";
            $(".modules>div").each(function () {
                var n = parseInt($(this).attr("index"));
                if (a = $(this).find("div.ng-scope[ng-controller$='Ctrl']").css("width"),
                    height = $(this).find("div.ng-scope[ng-controller$='Ctrl']").css("height"),
                n > 0) {
                    for (var i in e.activeModules)
                        e.activeModules[i].index == n && (t += parseInt(e.activeModules[i].marginTop),
                            e.activeModules[i].params.positionStyle.width = parseInt(a),
                            e.activeModules[i].params.positionStyle.height = parseInt(height),
                            e.activeModules[i].params.positionStyle.top = t,
                            e.activeModules[i].positionStyle = "position:absolute;width:" + a + ";height:" + height + ";left:" + e.activeModules[i].params.positionStyle.left + "px;top:" + t + "px;",
                            $(this).find("div[ng-controller]").attr("style", e.activeModules[i].positionStyle));
                    t += parseInt(height)
                }
                i++
            }),
                r.setBaseData("activeModules", e.activeModules)
        }, 1e3));
    for (var g in e.activeModules)
        e.activeModules[g].originParams = angular.copy(e.activeModules[g].params);
    e.$on("serviceBase.editors.update", function (t, a) {
        e.editors = a
    }),
        e.$on("serviceBase.activeItem.update", function (t, a) {
            e.activeItem = a
        }),
        e.$on("serviceBase.activeModules.update", function (t, a) {
            e.activeModules = a
        }),
        e.$on("serviceBase.activeItem.params.update", function (t, a) {
            e.activeItem.params = a
        }),
        e.$on("serviceBase.activeItem.animationName.update", function (t, a) {
            e.activeItem.params.animationStyle.animationName = a
        }),
        e.$on("serviceBase.activeItem.style.update", function (t, a, n, i, s) {
            e.activeItem.params[a] = n,
                e.activeItem[a] = i,
            void 0 !== s && (e.activeItem.transform = s)
        }),
        e.$on("updateScope", function (t, a) {
            angular.forEach(a, function (t, a) {
                e[a] = t
            })
        }),
        e.addItem = function (e) {
            r.addItem(e)
        }
        ,
        e.editItem = function (e) {
            r.editItem(e)
        }
        ,
        e.deleteItem = function (e) {
            r.deleteItem(e)
        }
        ,
        e.submit = function (t) {
            e.submit = c.submit(),
                e.$apply("submit"),
                $(t.target).parents("form").submit()
        }
        ,
        e.multiSubmit = function (t) {
            e.submit = u.submit(),
                e.$apply("submit"),
                $(t.target).parents("form").submit()
        }
        ,
        e.init = function (t, a) {
            if (e.modules = r.setModules(t, a),
            e.activeModules.length > 0) {
                var n = [];
                angular.forEach(e.activeModules, function (e, t) {
                    e && n.push(e.id)
                })
            }
            angular.forEach(e.modules, function (e, t) {
                e.defaultshow && -1 == $.inArray(e.id, n) && r.addItem(e.id)
            })
        }
        ,
        e.setModulePositionStyle = function (e) {
            o.setModulePositionStyle(e)
        }
        ,
        e.eleAnimationIns = function (e) {
            o.eleAnimationIns(e)
        }
        ,
        e.savePagePosition = function () {
            o.savePagePosition(e.activeModules)
        }
        ,
        e.saveModulePosition = function () {
            o.saveModulePosition(e.activeItem)
        }
        ,
        e.changeTextAlign = function (t) {
            o.changeTextAlign(e.activeItem, t)
        }
        ,
        e.changeBorderWidth = function () {
            o.changeBorderWidth(e.activeItem)
        }
        ,
        e.changeInnerHeight = function () {
            o.changeInnerHeight(e.activeItem)
        }
        ,
        e.clearModuleStyle = function () {
            o.clearModuleStyle(e.activeItem)
        }
        ,
        e.changePageLength = function (t) {
            if (angular.isString(t))
                if ("minus" == t && e.pageLength > 1)
                    t = e.pageLength - 1;
                else {
                    if (!("plus" == t && e.pageLength < 5))
                        return false;
                    t = e.pageLength + 1
                }
            var a = o.changePageLength(t, e.activeModules);
            r.setBaseData("pageLength", parseInt(t)),
                r.setBaseData("activeModules", a)
        }
        ,
        e.insertPage = function () {
            d.insertPage(),
                e.init(null, ["header"])
        }
        ,
        e.navToPage = function (t) {
            d.navToPage(t),
                e.activeHeader()
        }
        ,
        e.removePage = function (t) {
            d.removePage(t),
                e.activeHeader()
        }
        ,
        e.copyPage = function (t, a) {
            d.copyPage(t, a),
                e.activeHeader()
        }
        ,
        e.changeLock = function () {
            e.activeItem.params.baseStyle.lock = !e.activeItem.params.baseStyle.lock
        }
        ,
        e.activeHeader = function () {
            for (var t in e.activeModules)
                if ("header" == e.activeModules[t].id) {
                    e.pageLength = e.activeModules[t].params.pageLength ? e.activeModules[t].params.pageLength : 1,
                        o.changePageLength(e.pageLength, e.activeModules),
                        r.setBaseData("activeItem", e.activeModules[0]),
                        e.editItem(e.activeModules[t].index);
                    break
                }
        }
        ,
        $(".multi-submit").on("click", function (t) {
            e.multiSubmit(t)
        }),
        $(".single-submit").on("click", function (t) {
            e.submit(t)
        }),
        e.init(null, ["header"]),
        e.activeHeader(),
        e.$watch("activeItem.params.baseStyle", function (e) {
            e && o.setModuleBaseStyle(e)
        }, true),
        e.$watch("activeItem.params.borderStyle", function (e) {
            e && o.setModuleBorderStyle(e)
        }, true),
        e.$watch("activeItem.params.shadowStyle", function (e) {
            e && o.setModuleShadowStyle(e)
        }, true),
        e.$watch("activeItem.params.animationStyle", function (e) {
            e && o.setModuleAnimationStyle(e)
        }, true),
        e.$watch("activeItem.params.positionStyle", function (e) {
            e && o.setModulePositionStyle(e)
        }, true)
}
]);

angular.module("specialApp").controller("SpecialDisplay", ["$scope", "serviceCopy", "config", function (e, t, a) {
    e.pages = a.pages,
        e.links = a.links,
        angular.forEach(e.pages, function (t, a) {
            t.copyLink = e.links.appHome + "id=" + t.id
        }),
        e.success = function (e) {
            var e = parseInt(e)
                ,
                a = $('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>');
            t.copySuccess(e, a)
        }
}
]);

angular.module("specialApp").directive("we7Multipage", function () {
    return {
        replace: true,
        templateUrl: "resource/js/app/templates/directive-multipage-multipage.html"
    }
});

angular.module("specialApp").service("serviceSpecialBase", ["$rootScope", "serviceBase", function (e, t) {
    var a = {}
        , n = {
        activePageIndex: 0,
        isMultiPage: true,
        isLongPage: true,
        allPages: [],
        multipage: []
    };
    return a.getBaseData = function (e) {
        return n[e]
    }
        ,
        a.setBaseData = function (e, t) {
            angular.isObject(e) ? angular.forEach(e, function (e, t) {
                n[t] = e
            }) : n[e] = t
        }
        ,
        a
}
]);

angular.module("specialApp").service("serviceCopy", ["$rootScope", function (e) {
    var t = {};
    return t.copySuccess = function (e, t) {
        var e = parseInt(e)
            , t = t
            , a = $("#copy-" + e).next().html();
        (!a || a.indexOf('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>') < 0) && $("#copy-" + e).after(t),
            setTimeout(function () {
                t.remove()
            }, 2e3)
    }
        ,
        t
}
]);

angular.module("specialApp").service("serviceMultiPage", ["$rootScope", "serviceCommon", "serviceBase", "serviceSpecialBase", "$window", function (e, t, a, n, i) {
    var s = {};
    return s.insertPage = function () {
        s.saveCurPage();
        var t = n.getBaseData("allPages")
            , i = n.getBaseData("activePageIndex");
        t[i].active = false,
            t.push({
                property: [],
                active: true
            }),
            $(".app-content").css("height", "568px"),
            i = _.findIndex(t, {
                active: true
            }),
            a.setBaseData({
                activeModules: [],
                pageLength: 1
            }),
            n.setBaseData({
                allPages: t,
                isMultiPage: true,
                isLongPage: false,
                activePageIndex: i
            }),
            e.$broadcast("updateScope", {
                allPages: t,
                isMultiPage: true,
                isLongPage: false,
                pageLength: 1,
                activePageIndex: i,
                activeModules: []
            })
    }
        ,
        s.navToPage = function (t) {
            var i = n.getBaseData("activePageIndex");
            if (i == t)
                return false;
            s.saveCurPage();
            var o = n.getBaseData("allPages")
                , r = o[t].property;
            o[i].active = false,
                o[t].active = true,
                i = t,
                a.setBaseData("activeModules", r),
                a.setBaseData("activeItem", r[0]),
                n.setBaseData({
                    allPages: o,
                    activePageIndex: i
                }),
                e.$broadcast("updateScope", {
                    allPages: o,
                    activePageIndex: i,
                    activeModules: r
                })
        }
        ,
        s.removePage = function (t) {
            var i = []
                , o = n.getBaseData("allPages")
                , r = n.getBaseData("multipage");
            if (1 == o.length)
                return false;
            s.saveCurPage(),
                r.splice(parseInt(t), 1);
            var l = _.clone(o)
                , c = o.length - 1 - t;
            o = [];
            for (var u in l)
                if (u != t)
                    switch (c) {
                        case 0:
                            parseInt(u) + 1 == t ? (o.push({
                                property: l[u].property,
                                active: true
                            }),
                                i = l[u].property) : o.push({
                                property: l[u].property,
                                active: false
                            });
                            break;
                        default:
                            u - 1 == t ? (o.push({
                                property: l[u].property,
                                active: true
                            }),
                                i = l[u].property) : o.push({
                                property: l[u].property,
                                active: false
                            })
                    }
            activePageIndex = _.findIndex(o, {
                active: true
            }),
            1 == o.length && (n.setBaseData({
                isMultiPage: true,
                isLongPage: true
            }),
                e.$broadcast("updateScope", {
                    isMultiPage: true,
                    isLongPage: true
                })),
                a.setBaseData("activeModules", i),
                n.setBaseData({
                    allPages: o,
                    activePageIndex: activePageIndex
                }),
                e.$broadcast("updateScope", {
                    allPages: o,
                    activePageIndex: activePageIndex,
                    activeModules: i
                })
        }
        ,
        s.copyPage = function (t, i) {
            s.saveCurPage();
            var o = a.getBaseData("index")
                , r = n.getBaseData("allPages")
                , l = n.getBaseData("multipage");
            l.splice(parseInt(t), 0, l[t]);
            var c = angular.copy(r);
            r = [];
            for (var u in c)
                if (u == t) {
                    r.push({
                        property: c[u].property,
                        active: false
                    });
                    var d = angular.copy(c[u].property);
                    for (var p in d)
                        d[p].index = o++;
                    r.push({
                        property: d,
                        active: true
                    });
                    var m = d
                } else
                    r.push({
                        property: c[u].property,
                        active: false
                    });
            activePageIndex = _.findIndex(r, {
                active: true
            }),
                a.setBaseData("activeModules", m),
                a.setBaseData("index", o),
                n.setBaseData({
                    allPages: r,
                    multipage: l,
                    isMultiPage: true,
                    isLongPage: false,
                    activePageIndex: activePageIndex
                }),
                i.stopPropagation(),
                e.$broadcast("updateScope", {
                    allPages: r,
                    isMultiPage: true,
                    isLongPage: false,
                    activePageIndex: activePageIndex,
                    activeModules: m
                })
        }
        ,
        s.saveCurPage = function () {
            var i = a.getBaseData("activeModules")
                , s = a.getBaseData("pageLength")
                , o = n.getBaseData("allPages")
                , r = n.getBaseData("multipage")
                , l = _.findIndex(o, {
                active: true
            })
                , c = "";
            $($(".modules").html()).find("div.ng-scope[ng-controller$='Ctrl']").each(function () {
                var e = $(this).parent().parent()
                    , n = _.findIndex(i, {
                    index: parseInt(e.attr("index"))
                })
                    , o = ""
                    , r = angular.copy(i[n].params);
                $(this).find(".js-default-content").remove(),
                    $(this).find(".bar").remove();
                var l = e.attr("name").toLowerCase();
                if ("header" != l) {
                    var u = $(this).css("top")
                        , d = $(this).css("left")
                        , p = $(this).css("width")
                        , m = $(this).css("height")
                        , f = "position:absolute;top:" + u + ";left:" + d + ";width:" + p + ";height:" + m + ";";
                    i[n].params.positionStyle.top = parseInt(u),
                        i[n].params.positionStyle.left = parseInt(d),
                        i[n].params.positionStyle.width = parseInt(p),
                        i[n].params.positionStyle.height = parseInt(m),
                        i[n].positionStyle = f
                } else
                    i[n].params.pageLength = s;
                switch (l) {
                    case "link":
                        var g = this;
                        angular.forEach(r.items, function (e, a) {
                            (e.selectCate.pid || e.selectCate.cid) && $(g).find(".list-group").children().eq(a).replaceWith("<div>" + t.buildDataTagBegin("link", e) + '<div class="list-group-item ng-scope"><a href="{$row[url]}" class="clearfix"><span class="app-nav-title"> {$row[title]}<i class="pull-right fa fa-angle-right"></i></span></a></div>' + t.buildDataTagEnd() + "</div>")
                        });
                        break;
                    case "richtext":
                        i[n] && (i[n].params.content = "")
                }
                if (o = $(this).html(),
                    !a.getBaseData("isNew")) {
                    var h = parseInt(u) - 64;
                    $(this).css("top", h + "px")
                }
                if ("header" != l) {
                    f = $(this).attr("style");
                    c += '<div type="' + l + '" style="' + f + '">' + o + "</div>"
                }
            }),
                c = c.replace(/<\!\-\-([^-]*?)\-\->/g, ""),
                c = c.replace(/ ng\-[a-zA-Z-]+=\"[^\"]*\"/g, ""),
                c = c.replace(/ ng\-[a-zA-Z]+/g, ""),
                r[l] = c,
                o[l].property = i,
                a.setBaseData("activeModules", i),
                n.setBaseData({
                    allPages: o,
                    multipage: r
                }),
                e.$broadcast("updateScope", {
                    activeModules: i,
                    allPages: o,
                    multipage: r
                })
        }
        ,
        s
}
]);

angular.module("specialApp").service("serviceMultiSubmit", ["serviceCommon", "serviceMultiPage", "serviceSpecialBase", function (e, t, a) {
    var n = {};
    return n.submit = function (n) {
        t.saveCurPage();
        var i = a.getBaseData("multipage")
            , s = a.getBaseData("allPages")
            , o = ""
            ,
            r = '<section class="u-arrow-bottom" style="bottom: 15%;"><div class="pre-wrap"><div class="pre-box1"><div class="pre1"></div></div><div class="pre-box2"><div class="pre2"></div></div></div></section></div>';
        $.each(i, function (e, t) {
            e + 1 == i.length ? o += 1 == s.length ? '<div class="pane">' + t + "</div>" : '<div class="pane overflowhidden">' + t + "</div>" : o += 1 == s.length ? '<div class="pane">' + t + r : '<div class="pane overflowhidden">' + t + r
        });
        for (var l in s)
            for (var c in s[l].property)
                delete s[l].property[c].originParams,
                    delete s[l].property[c].marginTop;
        var u = {}
            , d = $(".app-content").css("height");
        return o = '<div style="height:' + d + '"><div class="panes">' + o + "</div></div>",
            o = o.replace(/<\!\-\-([^-]*?)\-\->/g, ""),
            o = o.replace(/ ng\-[a-zA-Z-]+=\"[^\"]*\"/g, ""),
            o = o.replace(/ ng\-[a-zA-Z]+/g, ""),
            u.html = o,
            u.params = angular.copy(s),
            u.multipage = i,
            e.stripHaskey(u.params),
            u
    }
        ,
        n
}
]);

angular.module("statisticsApp", ["we7app"]);

angular.module("statisticsApp").controller("HorizontalBarCtrl", ["$scope", "$http", "serviceCommon", "config", function ($scope, $http, a, config) {
    require(["echarts"], function (echarts) {
        var s = echarts.init(document.getElementById("chart-line"));
        accountOption = {
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "line"
                }
            },
            grid: {
                left: "3%",
                right: "3%",
                bottom: "3%",
                containLabel: true
            },
            xAxis: {
                data: []
            },
            yAxis: {
                splitArea: {
                    show: true
                }
            },
            series: [{
                name: "数量",
                type: "line",
                smooth: true,
                data: []
            }]
        };
        s.showLoading();
        var o = echarts.init(document.getElementById("chart-horizontal-bar"));
        moduleOption = {
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "shadow"
                }
            },
            grid: {
                left: "3%",
                right: "3%",
                bottom: "3%",
                containLabel: true
            },
            xAxis: {},
            yAxis: {
                type: "category",
                data: []
            },
            series: [{
                name: "数量",
                type: "bar",
                data: []
            }]
        };
        o.showLoading();
        $scope.active = true;
        $scope.code = "<script type=\"text/javascript\" src=\"{$_W['siteroot']}app/index.php?i={$_W['uniacid']}&c=utility&a=visit&do=showjs&m={$_W['current_module']['name']}\"><\/script>";
        $scope.show = true;
        $scope.accountDateRange = {
            startDate: moment().format("YYYY-MM-DD"),
            endDate: moment().format("YYYY-MM-DD")
        };

        $scope.moduleDateRange = {
            startDate: moment().format("YYYY-MM-DD"),
            endDate: moment().format("YYYY-MM-DD")
        };

        $scope.changeDivideType = function (t, a) {
            "account" == t && ($scope.accountDivideType = a),
            "module" == t && ($scope.moduleDivideType = a),
                $scope.getModuleApi(t, "week")
        };

        $scope.getModuleApi = function (a, i) {
            var r = ""
                , l = ""
                , c = "";
            "account" == a && ($scope.accountTimeType = i,
                $scope.accountLabels = [],
                $scope.accountData = [],
                r = config.links.accountApi,
                l = $scope.accountDivideType,
                c = $scope.accountDateRange),
            "module" == a && ($scope.moduleTimeType = i,
                $scope.moduleLabels = [],
                $scope.moduleData = [],
                r = config.links.moduleApi,
                l = $scope.moduleDivideType,
                c = $scope.moduleDateRange),
                $http.post(r, {
                    divide_type: l,
                    time_type: i,
                    daterange: c
                }).success(function (t) {
                    if (s.hideLoading(),
                        o.hideLoading(),
                    "account" == a && (accountOption.xAxis.data = t.message.message.data_x,
                        accountOption.series[0].data = t.message.message.data_y,
                        s.setOption(accountOption)),
                    "module" == a) {
                        var n = t.message.message.data_y.length;
                        $scope.actualHight = 15 * parseInt(n) + "px",
                            moduleOption.series[0].data = t.message.message.data_x,
                            moduleOption.yAxis.data = t.message.message.data_y,
                            o.setOption(moduleOption)
                    }
                })
        };

        $scope.accountDivideType = "bysum";
        $scope.moduleDivideType = "bysum";
        $scope.accountTimeType = "week";
        $scope.moduleTimeType = "week";
        $scope.getModuleApi("account", $scope.accountTimeType);
        $scope.getModuleApi("module", $scope.moduleTimeType);
        $scope.success = function (e) {
            var e = parseInt(e),
                t = $('<span class="label label-success" style="position:absolute;z-index:10;width:90px;height:34px;line-height:28px;"><i class="fa fa-check-circle"></i> 复制成功</span>');
            a.copySuccess(e, t);
        };

        $scope.changeStatus = function () {
            $scope.show = !$scope.show
        };

        $scope.$watch("moduleDateRange", function (t, a) {
            if (t && t != a) {
                $scope.moduleDateRange.startDate = moment(t.startDate).format("YYYY-MM-DD");
                $scope.moduleDateRange.endDate = moment(t.endDate).format("YYYY-MM-DD");
                $scope.getModuleApi("module", "daterange");
            }
        }, true);

        $scope.$watch("accountDateRange", function (t, a) {
            if (t && t != a) {
                $scope.accountDateRange.startDate = moment(t.startDate).format("YYYY-MM-DD");
                $scope.accountDateRange.endDate = moment(t.endDate).format("YYYY-MM-DD");
                $scope.getModuleApi("account", "daterange");
            }
        }, true);
    })
}
]);

angular.module("statisticsApp").controller("statisticsSettingCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.setting = a.highest_visit;
    $scope.interval = a.interval;
    $scope.newVisitVal = 0;
    $scope.newInterval = 0;

    $scope.editInfo = function (t, a) {
        switch (t) {
            case "visit":
                $scope.newVisitVal = a || 0;
                break;
            case "interval":
                $scope.newInterval = a || 0
        }
    };

    $scope.saveSetting = function (n) {
        switch (n) {
            case "visit":
                $http.post(a.links.editSetting, {
                    highest_visit: $scope.newVisitVal,
                    type: "highest_visit"
                }).success(function (t) {
                    0 == t.message.errno && ($scope.setting = $scope.newVisitVal),
                        util.message(t.message.message)
                });
                break;
            case "interval":
                $http.post(a.links.editSetting, {
                    interval: $scope.newInterval,
                    type: "interval"
                }).success(function (t) {
                    0 == t.message.errno && ($scope.interval = $scope.newInterval),
                        util.message(t.message.message)
                })
        }
    }
}
]);

angular.module("statisticsApp").controller("systemAccountAppAnalysisCtrl", ["$scope", "$http", "config", function ($scope, $http, config) {
    require(["echarts"], function (echarts) {
        var myEchar = echarts.init(document.getElementById("chart-line"));
        option = {
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "line"
                }
            },
            xAxis: {
                data: []
            },
            yAxis: {
                splitArea: {
                    show: true
                }
            },
            series: [{
                name: "数量",
                type: "line",
                smooth: true,
                data: []
            }]
        };
        myEchar.showLoading();
        $scope.dateRange = {
            startDate: moment().format("YYYY-MM-DD"),
            endDate: moment().format("YYYY-MM-DD")
        };
        $scope.changeDivideType = function (t) {
            $scope.divideType = t;
            $scope.getAccountApi("week");
        };
        $scope.getAccountApi = function (n) {
            $scope.timeType = n;
            $http.post(config.links.accountApi, {
                divide_type: $scope.divideType,
                time_type: n,
                daterange: $scope.dateRange
            }).success(function (e) {
                myEchar.hideLoading();
                option.xAxis.data = e.message.message.data_x;
                option.series[0].data = e.message.message.data_y;
                myEchar.setOption(option);
            })
        };

        $scope.divideType = "bysum";
        $scope.timeType = "week";
        $scope.getAccountApi($scope.timeType);
        $scope.$watch("dateRange", function (newData, oldData) {
            if (newData && newData != oldData) {
                $scope.dateRange.startDate = moment(newData.startDate).format("YYYY-MM-DD");
                $scope.dateRange.endDate = moment(newData.endDate).format("YYYY-MM-DD");
                $scope.getAccountApi("daterange");
            }
        }, true)
    })
}
]);

angular.module("statisticsApp").controller("systemAccountAnalysisCtrl", ["$scope", "$http", "config", function ($scope, $http, config) {

    require(["echarts"], function (echarts) {
        var myChart = echarts.init(document.getElementById("chart-line"));
        accountOption = {
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "line"
                }
            },
            grid: {
                left: "3%",
                right: "3%",
                bottom: "3%",
                containLabel: true
            },
            xAxis: {
                data: []
            },
            yAxis: {
                splitArea: {
                    show: true
                }
            },
            series: [{
                name: "数量",
                type: "line",
                smooth: true,
                data: []
            }]
        };
        myChart.showLoading();
        $scope.dateRange = {
            startDate: moment().format("YYYY-MM-DD"),
            endDate: moment().format("YYYY-MM-DD")
        };
        $scope.getAccountApi = function (timeType) {
            $scope.timeType = timeType,
                $http.post(config.links.accountApi, {
                    time_type: timeType,
                    daterange: $scope.dateRange
                }).success(function (e) {
                    myChart.hideLoading();
                    accountOption.xAxis.data = e.message.message.data_x;
                    accountOption.series[0].data = e.message.message.data_y;
                    myChart.setOption(accountOption);
                })
        };
        $scope.timeType = "week"; // 默认是周统计
        $scope.getAccountApi($scope.timeType);
        $scope.$watch("dateRange", function (newData, oldData) {

            if (newData && newData != oldData) {
                $scope.dateRange.startDate = moment(newData.startDate).format("YYYY-MM-DD");
                $scope.dateRange.endDate = moment(newData.endDate).format("YYYY-MM-DD");
                $scope.getAccountApi("daterange");
            }
        }, true);
    });
}
]);

angular.module("statisticsApp").controller("CurrentAccountCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    require(["echarts"], function (n) {
        var i = n.init(document.getElementById("chart-line"));
        accountOption = {
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "line"
                }
            },
            grid: {
                left: "3%",
                right: "3%",
                bottom: "3%",
                containLabel: true
            },
            xAxis: {
                data: []
            },
            yAxis: {
                splitArea: {
                    show: true
                }
            },
            series: [{
                name: "数量",
                type: "line",
                smooth: true,
                data: []
            }]
        };
        i.showLoading();
        $scope.accountDateRange = {
            startDate: moment().format("YYYY-MM-DD"),
            endDate: moment().format("YYYY-MM-DD")
        };

        $scope.getModuleApi = function (n) {
            $scope.accountTimeType = n,
                $http.post(a.links.accountApi, {
                    time_type: n,
                    daterange: $scope.accountDateRange
                }).success(function (e) {
                    i.hideLoading();
                    accountOption.xAxis.data = e.message.message.data_x;
                    accountOption.series[0].data = e.message.message.data_y;
                    i.setOption(accountOption);
                })
        };

        $scope.accountTimeType = "week";
        $scope.getModuleApi($scope.accountTimeType);

        $scope.$watch("accountDateRange", function (t, a) {
            if (t && t != a) {
                $scope.accountDateRange.startDate = moment(t.startDate).format("YYYY-MM-DD");
                $scope.accountDateRange.endDate = moment(t.endDate).format("YYYY-MM-DD");
                $scope.getModuleApi("daterange");
            }
        }, true);
    })
}
]);

angular.module("statisticsApp").service("serviceCommon", ["$rootScope", function (e) {
    var t = {};
    return t.copySuccess = function (e, t) {
        var e = parseInt(e)
            , t = t
            , a = $("#copy-" + e).next().html();
        (!a || a.indexOf('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>') < 0) && $("#copy-" + e).after(t),
            setTimeout(function () {
                t.remove()
            }, 2e3)
    }
        ,
        t
}
]);

angular.module("storeApp", ["we7app"]);

angular.module("storeApp").controller("goodsSellerCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.status = a.status,
        e.moduleList = a.moduleList,
        e.keyword = "",
        e.selectedModule = "",
        e.visitTimes = 0,
        e.visitPrice = 0,
        e.showModule = function () {
            $("#add_module").modal("show")
        }
        ,
        e.selectModule = function (t, a) {
            $(a.target).parents(".select-module").find(".item").addClass("active"),
                $(a.target).parents(".select-module").siblings().find(".item").removeClass("active"),
                e.selectedModule = t
        }
        ,
        e.editPrice = function (n) {
            switch (n) {
                case "add_module":
                    t.post(a.links.add, {
                        module: e.selectedModule,
                        toedit: true
                    }).success(function (e) {
                        0 == e.message.errno ? location.href = a.links.post + "&id=" + e.message.message : util.message(e.message.message)
                    });
                    break;
                case "add_api":
                    t.post(a.links.add, {
                        title: "API商品",
                        visit_times: e.visitTimes,
                        price: e.visitPrice,
                        online: true
                    }).success(function (e) {
                        0 == e.message.errno ? location.href = a.links.online : util.message(e.message.message)
                    })
            }
        }
        ,
        e.toOffline = function (n) {
            switch (n) {
                case "add_module":
                    t.post(a.links.add, {
                        module: e.selectedModule
                    }).success(function (e) {
                        0 == e.message.errno ? location.href = a.links.offline : util.message(e.message.message)
                    });
                    break;
                case "add_api":
                    t.post(a.links.add, {
                        title: "API商品",
                        visit_times: e.visitTimes,
                        price: e.visitPrice
                    }).success(function (e) {
                        0 == e.message.errno ? location.href = a.links.offline : util.message(e.message.message)
                    })
            }
        }
}
]);

angular.module("storeApp").controller("goodsPostCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.slideLists = [],
        e.goodsInfo = a.goodsInfo,
        e.goodsInfo ? (e.unit = e.goodsInfo.unit,
            e.slideLists = e.goodsInfo.slide,
            $("#description").html(e.goodsInfo.description)) : e.unit = "month",
        e.changeUnit = function (t) {
            e.unit = t,
                $('[name="unit"]').val(t)
        }
        ,
        e.addSlide = function () {
            require(["fileUploader"], function (t) {
                t.init(function (t) {
                    e.slideLists.push(t.url),
                        e.$apply(e.slideLists)
                }, {
                    direct: true,
                    multiple: false,
                    uniacid: 0
                })
            })
        }
        ,
        e.delSlide = function (t) {
            e.slideLists.splice(t, 1)
        }
}
]);

angular.module("storeApp").controller("storePaySettingCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.alipay = a.alipay
}
]);

angular.module("storeApp").controller("storeOrdersCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.orderList = a.orderList,
        e.role = a.role,
        e.links = a.links,
        e.newPrice = [],
        e.showChangePriceModal = function (t) {
            $("#change-price").modal("show");
            var t = parseInt(t);
            e.newPrice.orderid = t
        }
        ,
        e.changePrice = function () {
            t.post(a.links.changePrice, {
                id: e.newPrice.orderid,
                price: e.newPrice.price
            }).success(function (e) {
                0 == e.message.errno ? util.message(e.message.message, e.redirect, "success") : util.message(e.message.message)
            })
        }
}
]);

angular.module("storeApp").controller("goodsBuyerCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.duration = 1,
        e.unit = a.unit,
        e.expiretime = a.expiretime,
        e.singlePrice = a.singlePrice,
        e.price = a.singlePrice,
        e.account_list = a.account_list,
        e.wxapp = a.wxapp,
        e.wxapp_account_list = a.wxapp_account_list,
        e.uniacid = a.first_uniacid,
        e.goods = a.goods,
        e.pay_way_list = a.pay_way,
        0 == e.pay_way_list.length ? e.pay_way = "" : e.pay_way = e.pay_way_list.alipay ? "alipay" : "wechat",
        e.changePayWay = function (t) {
            e.pay_way = t
        }
        ,
        e.changeDuration = function (t) {
            e.duration = t
        }
        ,
        e.submit_order = function (n) {
            var i = {
                uniacid: e.uniacid,
                price: a.singlePrice,
                goodsid: e.goods.id,
                duration: e.duration,
                type: e.pay_way,
                wxapp: e.wxapp
            };
            t.post("./index.php?c=site&a=entry&m=store&do=goodsbuyer&operate=submit_order&direct=1", i).success(function (e) {
                if (0 != e.message.errno)
                    return util.message(e.message.message),
                        false;
                location.href = "./index.php?c=site&a=entry&m=store&do=goodsbuyer&operate=pay_order&direct=1&orderid=" + e.message.message,
                    location.href = "order" == n ? "./index.php?c=site&a=entry&m=store&do=orders&direct=1" : "./index.php?c=site&a=entry&m=store&do=goodsbuyer&operate=pay_order&direct=1&orderid=" + e.message.message
            })
        }
        ,
        e.changeExpire = function (a, n) {
            a = "" == a || void 0 == a ? e.duration : a,
                n = "" == n || void 0 == n ? e.uniacid : n,
                t.post("./index.php?c=site&a=entry&operate=change_order_expire&direct=1&do=changeorderexpire&m=store", {
                    duration: a,
                    unit: e.unit,
                    uniacid: n,
                    goodsid: e.goods.id
                }).success(function (t) {
                    0 == t.message.errno && (e.expiretime = t.message.message,
                        e.price = e.singlePrice * a)
                })
        }
        ,
        e.$watch("duration", function (e, t, a) {
            a.changeExpire(e, "")
        }),
        e.$watch("uniacid", function (e, t, a) {
            a.changeExpire("", e)
        })
}
]);

angular.module("storeApp").controller("storePermissionCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.blacklist = a.blacklist,
        e.whitelist = a.whitelist,
        e.permissionStatus = a.permissionStatus,
        e.addUsername = "",
        e.changeType = function (t) {
            "close" != t || e.permissionStatus.close ? e.type = t : confirm("确定要关闭权限设置吗？如若这样做，所有系统用户都可访问商城！") && (e.type = t,
                e.changeStatus())
        }
        ,
        e.changeStatus = function () {
            t.post(a.links.changeStatus, {
                type: e.type
            }).success(function (t) {
                console.log(t),
                    0 == t.message.errno ? "close" == e.type ? (e.permissionStatus.close = true,
                        util.message(t.message.message)) : util.message(t.message.message, t.redirect, "success") : util.message(t.message.message)
            })
        }
        ,
        e.addUser = function () {
            t.post(a.links.addUser, {
                type: e.type,
                username: e.addUsername
            }).success(function (t) {
                e.addUsername = "",
                    0 == t.message.errno ? util.message(t.message.message, t.redirect, "success") : util.message(t.message.message)
            })
        }
        ,
        e.deleteUser = function (n) {
            t.post(a.links.deleteUser, {
                type: e.type,
                username: n
            }).success(function (e) {
                0 == e.message.errno ? util.message(e.message.message, e.redirect, "success") : util.message(e.message.message)
            })
        }
        ,
        e.changeType(a.type)
}
]);

angular.module("systemApp", ["we7app"]);

angular.module("systemApp").controller("UpdateCacheCtrl", ["$scope", "$http", function ($scope, $http) {

    $scope.dataCache = true;
    $scope.templateCache = true;

    $scope.updateCache = function () {
        $http({
            method: "POST",
            url: "./index.php?c=system&a=updatecache",
            data: {
                dataCache: $scope.dataCache ? 1 : '',
                templateCache: $scope.templateCache ? 1 : '',
                submit: "submit"
            },
            beforeSend: function () {
                $(".loader").show()
            },
            complete: function () {
                $(".loader").hide()
            }
        }).success(function (e) {
            0 == e.message.errno && util.message(e.message.message)
        })
    }
}
]);

angular.module("systemApp").controller("MenuCtrl", ["$scope", "$http", function ($scope, $http) {

    $scope.subItemGroup = {};
    $scope.displayStatus = {};
    $scope.mainMenu = {
        permission: "",
        displayorder: 0
    };
    // 进入新建菜单面板
    $scope.editItemPanel = function (menu) {
        if (menu) {
            $scope.activeItem = {};
            $scope.activeItem = menu;
            $(".js-edit-panel").modal();
        }
    };
    // 编辑主菜单项，只能修改displayorder
    $scope.editMainMenu = function (displayorder, permissionName) {
        $scope.mainMenu.displayorder = displayorder;
        $scope.mainMenu.permission = permissionName;
        $("#editorder").modal("show");
    };
    // 保存主菜单项修改
    $scope.saveorder = function () {
        $http.post("./index.php?c=system&a=menu&do=change_displayorder", $scope.mainMenu).success(function (e) {
            if (0 == e.message.errno) {
                $("#editorder").modal("hide");
                util.message("操作成功", e.redirect, "ajax");
            } else {
                util.message("操作失败", "", "info");
            }
        });
    };
    // 提交菜单项
    $scope.editItem = function () {
        $http.post("./index.php?c=system&a=menu&do=post", $scope.activeItem).success(function (response) {
            if (response.message.errno) {
                util.message(response.message.message);
            } else {
                $scope.activeItem.isNew && $scope.subItemGroup[$scope.activeItem.group].push($scope.activeItem);
                util.message(response.message.message, response.redirect, "ajax");
                $(".js-edit-panel").modal("hide");
            }

        })
    };
    // 进入添加子菜单
    $scope.addSubItem = function (section, menu) {
        $scope.subItemGroup[section] || ($scope.subItemGroup[section] = []);
        var a = {
            title: menu.title,
            url: menu.url,
            permissionName: menu.permissionName,
            icon: menu.icon,
            displayorder: menu.displayorder,
            isDisplay: menu.isDisplay,
            isSystem: false,
            group: section,
            isNew: true
        };
        $scope.editItemPanel(a);
    };

    $scope.selectMenuIcon = function () {
        util.iconBrowser(function (t) {
            $scope.activeItem.icon = t;
            $scope.$apply("activeItem");
        })
    };

    // 删除菜单项
    $scope.removeSubItem = function (permissionName, n) {
        if (permissionName && confirm("确认删除此菜单？")) {
            if (void 0 === n) { // void 0表示未定义
                $http.post("./index.php?c=system&a=menu&do=delete", {
                    permission_name: permissionName
                }).success(function (e) {
                    e.message.errno ? util.message(e.message.message) : util.message(e.message.message, "refresh");
                })
            } else {
                $scope.subItemGroup[permissionName].splice(n, 1);
            }
        }
    };

    // 菜单是否显示
    $scope.changeDisplay = function (permissionName) {
        1 == $scope.displayStatus[permissionName] ? status = 0 : status = 1;
        $http.post("./index.php?c=system&a=menu&do=display_status", {
            status: status,
            permission_name: permissionName
        }).success(function (t) {
            $scope.displayStatus[permissionName] = !!parseInt(status); //强制转换为Boolean 用 !!
        })
    }
}
]);

angular.module("systemApp").controller("WelcomeCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.loaderror = 0;
    $scope.ads = null;
    $scope.account_uninstall_modules_nums = 0; // 支持公众号未安装模块数
    $scope.wxapp_uninstall_modules_nums = 0; // 支持小程序未安装模块数
    $scope.webapp_uninstall_modules_nums = 0; // 支持PC未安装模块数
    $scope.phoneapp_uninstall_modules_nums = 0; // 支持APP未安装模块数
    $scope.account_modules_total = 0; // 支持公众号模块总数
    $scope.wxapp_modules_total = 0; // 支持小程序模块总数
    $scope.webapp_modules_total = 0; // 支持PC模块总数
    $scope.phoneapp_modules_total = 0; // 支持APP模块总数
    $scope.not_installed_module = [];
    $scope.not_installed_show = 0;

    /**
     * 模块统计
     */
    $scope.get_module_statistics = function () {
        $http({
            url: a.moduleStatisticsUrl,
            method: "POST",
            data: {},
            beforeSend: function () {
            },
            complete: function () {
            }
        }).success(function (t) {
            if (0 == t.message.errno) {
                var a = t.message.message;
                $scope.account_uninstall_modules_nums = a.account_uninstall_modules_nums;
                $scope.wxapp_uninstall_modules_nums = a.wxapp_uninstall_modules_nums;
                $scope.webapp_uninstall_modules_nums = a.webapp_uninstall_modules_nums;
                $scope.phoneapp_uninstall_modules_nums = a.phoneapp_uninstall_modules_nums;
                $scope.account_modules_total = a.account_modules_total;
                $scope.wxapp_modules_total = a.wxapp_modules_total;
                $scope.webapp_modules_total = a.webapp_modules_total;
                $scope.phoneapp_modules_total = a.phoneapp_modules_total;
            }
        })
    };

    $scope.upgrade_module_nums = [];
    $scope.upgrade_module_nums.account_upgrade_module_nums = 0;
    $scope.upgrade_module_nums.wxapp_upgrade_module_nums = 0;
    $scope.upgrade_module_nums.webapp_upgrade_module_nums = 0;
    $scope.upgrade_module_nums.phoneapp_upgrade_module_nums = 0;
    $scope.upgrade_module_list = [];

    $scope.get_upgrade_modules = function () {
        $http({
            url: a.upgradeModulesUrl,
            method: "POST",
            data: {},
            beforeSend: function () {
            },
            complete: function () {
            }
        }).success(function (t) {
            if (0 == t.message.errno) {
                var a = t.message.message;
                $scope.upgrade_module_nums = a.upgrade_module_nums;
                $scope.upgrade_module_list = a.upgrade_module_list;
                0 == $scope.upgrade_module_list.length && ($scope.upgrade_modules_show = 0)
            }
        })
    };

    $scope.upgrade_show = 0;

    /**
     * 微擎系统更新
     */
    $scope.get_system_upgrade = function () {
        $http({
            url: a.systemUpgradeUrl,
            method: "POST",
            data: {},
            beforeSend: function () {
            },
            complete: function () {
                util.loaded()
            }
        }).success(function (t) {
            if (0 == t.message.errno) {
                var a = t.message.message;
                $scope.upgrade = a;
                (a.file_nums > 0 || a.database_nums > 0 || a.script_nums > 0) && ($scope.upgrade_show = 1);
            }
        })
    };

    $scope.get_ads = function () {
        $http.post("./index.php?c=home&a=welcome&do=get_ads").success(function (t) {
            0 == t.message.errno ? $scope.ads = t.message.message.we7_index_ads : ($scope.ads = null,
                $scope.loaderror = 1)
        })
    };

    $scope.get_not_installed_module = function () {
        $http.post("./index.php?c=home&a=welcome&do=get_not_installed_modules").success(function (t) {
            if (0 == t.message.errno) {
                $scope.not_installed_module = t.message.message;
                if ($scope.not_installed_module.app_count > 0 || $scope.not_installed_module.wxapp_count > 0 || $scope.not_installed_module.webapp_count > 0 || $scope.not_installed_module.phoneapp_count > 0) {
                    $scope.not_installed_show = 1;
                }
            }
        })
    };

    $scope.ignoreUpdate = function (n) {
        $http.post(a.ignoreUpdateUrl, {
            name: n
        }).success(function (t) {
            0 == t.message.errno && ($scope.upgrade_module_list[n].is_ignore = 1)
        })
    };

    $scope.get_module_statistics(); //
    $scope.get_upgrade_modules();
    $scope.get_system_upgrade(); // 系统更新
    //$scope.get_ads();
    $scope.get_not_installed_module(); // 未安装模块
}
]);

angular.module("systemApp").controller("ipWhiteListCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.lists = a.lists,
        e.links = a.links,
        e.ips = "",
        e.changeStatus = function (a) {
            t.post(e.links.change_status, {
                ip: a
            }).success(function (e) {
                0 == e.message.errno ? location.reload() : util.message(e.message.message, e.redirect, "ajax")
            })
        }
        ,
        e.saveIp = function () {
            $("#myModalIp").modal("hide"),
                t.post(e.links.add_link_ips, {
                    ips: e.ips
                }).success(function (e) {
                    0 != e.message.errno ? util.message(e.message.message) : util.message("添加成功", e.redirect, "ajax")
                })
        }
}
]);

angular.module("systemApp").controller("sensitiveWord", ["$scope", "$http", "config", function (e, t, a) {
    e.lists = a.lists,
        e.links = a.links,
        e.word = "",
        e.saveWords = function () {
            $("#myModalSensitive").modal("hide"),
                t.post(e.links.add_word_link, {
                    word: e.word
                }).success(function (e) {
                    0 != e.message.errno ? util.message(e.message.message) : util.message("添加成功", e.redirect, "ajax")
                })
        }
        ,
        e.del = function (a) {
            t.post(e.links.del_word_link, {
                word: a
            }).success(function (e) {
                0 != e.message.errno ? util.message(e.message.message) : util.message("删除成功", e.redirect, "ajax")
            })
        }
}
]);

angular.module("systemApp").controller("SystemThirdpartyLogin", ["$scope", "$http", "serviceCommon", "config", function ($scope, $http, serviceCommon, config) {
    $scope.type = config.type,
        $scope.thirdlogin = config.thirdlogin,
        $scope.links = config.links,
        $scope.siteroot = config.siteroot,
        $scope.url = config.url,
        $scope.newappid = "",
        $scope.newappsecret = "";

    $scope.httpChange = function (a) {
        switch (a) {
            case "authstate":
                $http.post($scope.links.save_setting, {
                    authstate: "authstate",
                    type: config.type
                }).success(function (e) {
                    0 == e.message.errno ? util.message("修改成功", e.redirect) : util.message("修改失败，请稍后重试！")
                });
                break;
            case "appid":
                $("#AppID").modal("hide"),
                    $http.post($scope.links.save_setting, {
                        appid: $scope.newappid,
                        type: config.type
                    }).success(function (e) {
                        0 == e.message.errno ? util.message("修改成功", e.redirect) : util.message("修改失败，请稍后重试！")
                    });
                break;
            case "appsecret":
                $("#AppSecret").modal("hide"),
                    $http.post($scope.links.save_setting, {
                        appsecret: $scope.newappsecret,
                        type: config.type
                    }).success(function (e) {
                        0 == e.message.errno ? util.message("修改成功", e.redirect) : util.message("修改失败，请稍后重试！")
                    })
        }
    };
    $scope.success = function (copyId) {
        var id = parseInt(copyId)
            ,
            html = $('<span class="label label-success" style="position:absolute;z-index:10;margin-top:10px"><i class="fa fa-check-circle"></i> 复制成功</span>');
        serviceCommon.copySuccess(id, html);
    }
}
]);

angular.module("systemApp").controller("systemOauthCtrl", ["$scope", "$http", "config", function ($scope, $http, config) {
    $scope.oauthHost = config.oauthHost,
        $scope.originalHost = config.oauthHost,
        $scope.oauthAccount = config.oauthAccount,
        $scope.oauthtitle = config.oauthAccounts[config.oauthAccount],
        $scope.links = config.links;

    $scope.saveOauth = function () {
        $http.post($scope.links.oauth_link, {
            account: $scope.oauthAccount,
            host: $scope.oauthHost
        }).success(function (t) {
            0 != t.message.errno ? util.message(t.message.message) : ($scope.originalHost = $scope.oauthHost,
                util.message("成功", t.redirect, "ajax"))
        })
    }
}
]);

angular.module("systemApp").controller("SmsSignCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.all_signatures = a.all_signatures,
        e.site_sms_sign = a.site_sms_sign,
        e.links = a.links,
        e.saveSms = function (a) {
            t.post(e.links.site_sms_sign_link, {
                register: e.site_sms_sign.register,
                find_password: e.site_sms_sign.find_password,
                user_expire: e.site_sms_sign.user_expire
            }).success(function (e) {
                0 != e.message.errno ? util.message(e.message.message, e.redirect, "error") : util.message("设置成功", e.redirect, "success")
            })
        }
}
]);

angular.module("systemApp").service("serviceCommon", ["$rootScope", function ($rootScope) {
    var serviceCommon = {};
    serviceCommon.copySuccess = function (id, html) {
        var num = parseInt(id)
            , t = html
            , a = $("#copy-" + num).next().html();
        (!a || a.indexOf('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>') < 0) && $("#copy-" + num).after(t);
        setTimeout(function () {
            t.remove()
        }, 2e3);
    };
    return serviceCommon;
}
]);

angular.module("userCardApp", ["wapeditorApp"]).controller("MainCtrl", ["$scope", "widget", "config", "serviceBase", "serviceUserCardBase", "serviceSubmit", "serviceCommon", "$sanitize", function (e, t, a, n, i, s, o, r) {
    e.modules = [],
        e.editors = [],
        e.activeModules = n.initActiveModules(a.activeModules),
        e.activeItem = {},
        e.activeIndex = 0,
        e.index = a.activeModules ? a.activeModules.length : 0,
        e.submit = {
            params: {},
            html: ""
        },
        e.newcard = a.newcard,
        e.fansFields = a.fansFields,
        e.$on("serviceBase.editors.update", function (t, a) {
            e.editors = a
        }),
        e.$on("serviceBase.activeItem.update", function (t, a) {
            e.activeItem = a
        }),
        e.$on("serviceBase.activeModules.update", function (t, a) {
            e.activeModules = a
        }),
        e.addItem = function (e) {
            n.addItem(e)
        }
        ,
        e.editItem = function (e) {
            i.editItem(e)
        }
        ,
        e.deleteItem = function (e) {
            n.deleteItem(e)
        }
        ,
        e.init = function (t, a) {
            if (e.modules = n.setModules(t, a),
            e.activeModules.length > 0) {
                var i = [];
                angular.forEach(e.activeModules, function (e, t) {
                    e && i.push(e.id)
                })
            }
            angular.forEach(e.modules, function (e, t) {
                e.defaultshow && -1 == $.inArray(e.id, i) && n.addItem(e.id)
            })
        }
        ,
        e.url = function (e) {
            return o.url(e)
        }
        ,
        e.tomedia = function (e) {
            return o.tomedia(e)
        }
        ,
        e.submit = function (t) {
            e.submit = s.submit(),
                e.$apply("submit"),
                $(t.target).parents("form").submit()
        }
        ,
        e.addFields = function () {
            i.addFields()
        }
        ,
        e.removeFields = function (e) {
            i.removeFields(e)
        }
        ,
        e.addNums = function () {
            i.addNums()
        }
        ,
        e.removeNums = function (e) {
            i.removeNums(e)
        }
        ,
        e.addRecharges = function () {
            i.addRecharges()
        }
        ,
        e.removeRecharges = function (e) {
            i.removeRecharges(e)
        }
        ,
        e.addTimes = function () {
            i.addTimes()
        }
        ,
        e.removeTimes = function (e) {
            i.removeTimes(e)
        }
        ,
        e.selectCoupon = function () {
            i.selectCoupon()
        }
        ,
        e.clearCoupon = function () {
            i.clearCoupon()
        }
        ,
        e.addThumb = function (e) {
            i.addThumb(e)
        }
        ,
        e.addBgThumb = function () {
            i.addBgThumb()
        }
        ,
        $(".single-submit").on("click", function (t) {
            e.submit(t)
        }),
        e.init(null, ["cardBasic", "cardActivity", "cardNums", "cardTimes", "cardRecharge"]),
        e.activeModules[1].params.discounts = a.discounts,
        e.editItem(0)
}
]);

angular.module("userCardApp").service("serviceUserCardBase", ["$rootScope", "serviceBase", function (e, t) {
    var a = {};
    return a.triggerActiveItem = function (e) {
        $(".app-side .editor").css("marginTop", "0"),
            t.triggerActiveItem(e)
    }
        ,
        a.editItem = function (e) {
            var a = t.getBaseData("activeModules");
            "string" == typeof e && angular.forEach(a, function (t) {
                t.id == e && (e = t.index)
            }),
                t.editItem(e)
        }
        ,
        a.addFields = function () {
            var a = t.getBaseData("activeItem");
            a.params.fields.push({
                title: "",
                require: 1,
                bind: "",
                issystem: 0
            }),
                t.setBaseData("activeItem", a),
                e.$broadcast("serviceBase.activeItem.update", a)
        }
        ,
        a.removeFields = function (a) {
            if ("mobile" == a.bind || "realname" == a.bind)
                return false;
            var n = t.getBaseData("activeItem");
            n.params.fields = _.without(n.params.fields, a),
                t.setBaseData("activeItem", n),
                e.$broadcast("serviceBase.activeItem.update", n)
        }
        ,
        a.addNums = function () {
            t.getBaseData("activeItem").params.nums.push({
                recharge: "",
                num: ""
            })
        }
        ,
        a.removeNums = function (a) {
            var n = t.getBaseData("activeItem");
            n.params.nums = _.without(n.params.nums, a),
                t.setBaseData("activeItem", n),
                e.$broadcast("serviceBase.activeItem.update", n)
        }
        ,
        a.addRecharges = function () {
            var a = t.getBaseData("activeItem");
            a.params.recharges.push({
                condition: "",
                back: "",
                backtype: "0",
                backunit: "元"
            }),
                t.setBaseData("activeItem", a),
                e.$broadcast("serviceBase.activeItem.update", a)
        }
        ,
        a.removeRecharges = function (a) {
            var n = t.getBaseData("activeItem");
            n.params.recharges = _.without(n.params.recharges, a),
                t.setBaseData("activeItem", n),
                e.$broadcast("serviceBase.activeItem.update", n)
        }
        ,
        a.addTimes = function () {
            var a = t.getBaseData("activeItem");
            a.params.times.push({
                recharge: "",
                time: ""
            }),
                t.setBaseData("activeItem", a),
                e.$broadcast("serviceBase.activeItem.update", a)
        }
        ,
        a.removeTimes = function (a) {
            var n = t.getBaseData("activeItem");
            n.params.times = _.without(n.params.times, a),
                t.setBaseData("activeItem", n),
                e.$broadcast("serviceBase.activeItem.update", n)
        }
        ,
        a.selectCoupon = function () {
            var a = t.getBaseData("activeItem");
            util.coupon(function (n) {
                a.params.grant.coupon = [],
                    angular.forEach(n, function (e) {
                        a.params.grant.coupon.push({
                            couponTitle: e.title,
                            coupon: e.id
                        })
                    }),
                    t.setBaseData("activeItem", a),
                    e.$apply(),
                    e.$broadcast("serviceBase.activeItem.update", a)
            }, {
                multiple: true
            })
        }
        ,
        a.clearCoupon = function () {
            var a = t.getBaseData("activeItem");
            a.params.grant.coupon = [],
                t.setBaseData("activeItem", a),
                e.$broadcast("serviceBase.activeItem.update", a)
        }
        ,
        a.addThumb = function (a) {
            var n = t.getBaseData("activeItem");
            require(["fileUploader"], function (i) {
                i.show(function (i) {
                    n.params[a] = i.url,
                        t.setBaseData("activeItem", n),
                        e.$apply(),
                        e.$broadcast("serviceBase.activeItem.update", n)
                }, {
                    direct: true,
                    multiple: false
                })
            })
        }
        ,
        a.addBgThumb = function () {
            var a = t.getBaseData("activeItem");
            require(["fileUploader"], function (n) {
                n.show(function (n) {
                    a.params.background.image = n.url,
                        t.setBaseData("activeItem", a),
                        e.$apply(),
                        e.$broadcast("serviceBase.activeItem.update", a)
                }, {
                    direct: true,
                    multiple: false
                })
            })
        }
        ,
        a
}
]);

angular.module("userCardApp").controller("CardActivityCtrl", ["$scope", function (e) {
    e.$watch("activeItem.params.grant_rate", function (t, a) {
        (t += "").match(/^([1-9]\d*(\.(\d)?)?|0(\.(\d)?)?)?$/) ? e.activeItem.params.grant_rate = t : e.activeItem.params.grant_rate = a
    })
}
]);

angular.module("userCardApp").controller("CardBasicCtrl", ["$scope", "config", function (e, t) {
    e.creditnames = t.creditnames,
        e.siteroot = t.siteroot,
        e.recharge_src = e.siteroot + "/app/resource/images/sum-recharge.png",
        e.scanpay_src = e.siteroot + "/app/resource/images/scan-pay.png"
}
]);

angular.module("userCardApp").controller("CardNumsCtrl", ["$scope", function (e) {
}
]);

angular.module("userCardApp").controller("CardRechargeCtrl", ["$scope", function (e) {
    require(["bootstrap"], function (e) {
        e(".dropdown-toggle").dropdown()
    })
}
]);

angular.module("userCardApp").controller("CardTimesCtrl", ["$scope", function (e) {
}
]);

angular.module("userCenterApp", ["wapeditorApp"]);

angular.module("userCenterApp").controller("MainCtrl", ["$scope", "$timeout", "widget", "config", "serviceCommon", "serviceSetStyle", "serviceBase", "serviceUcSubmit", "serviceUpwardCompatible", function ($scope, $timeout, a, config, serviceCommon, serviceSetStyle, serviceBase, serviceUcSubmit, serviceUpwardCompatible) {
    $scope.modules = [];
    $scope.editors = [];
    $scope.activeModules = config.activeModules ? config.activeModules : [];
    $scope.activeMenus = config.activeMenus ? config.activeMenus : [];
    $scope.submit = {
        params: {},
        html: ""
    };
    $scope.isNew = true;
    $scope.siteroot = config.siteroot;
    $scope.logo_url = $scope.siteroot + "/app/resource/images/heading.jpg";
    _.isEmpty($scope.activeModules) || 1 == $scope.activeModules[0].params.isnew || ($scope.isNew = false);
    $scope.siteEntrance = config.links.murl;
    $scope.activeItem = {};
    $scope.activeIndex = 0;
    $scope.index = $scope.activeModules.length ? $scope.activeModules.length : 0;
    serviceBase.setBaseData("index", $scope.index);
    serviceBase.setBaseData("activeModules", $scope.activeModules);
    $scope.pageLength = !_.isEmpty($scope.activeModules) && $scope.activeModules[0].params.pageLength ? $scope.activeModules[0].params.pageLength : 1;
    $scope.isLongPage = true;
    $scope.pageLengths = {
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5
    };
    $scope.lineHeights = {
        1: 1,
        1.25: 1.25,
        1.5: 1.5,
        2: 2,
        2.5: 2.5
    };
    $scope.fontSizes = {
        12: 12,
        14: 14,
        16: 16,
        18: 18,
        20: 20,
        22: 22,
        24: 24,
        26: 26,
        28: 28,
        30: 30,
        32: 32,
        34: 34,
        36: 36,
        38: 38,
        40: 40
    };

    if (!$scope.isNew) {
        $scope.activeModules = serviceUpwardCompatible.compatibility($scope.activeModules);
        $scope.activeModules[0].params.isnew = 1;
        void 0 === $scope.activeModules[0].params.pageLength && ($scope.activeModules[0].params.pageLength = Math.ceil(($(".modules").height() + 520) / 568));

        if ($scope.activeModules[0].params.pageLength > 1) {
            $scope.pageLength = $scope.activeModules[0].params.pageLength;
            serviceBase.setBaseData("pageLength", $scope.pageLength);
            $timeout(function () {
                $(".app-content").css("height", 568 * $scope.pageLength + "px")
            }, 100);
        }

        $timeout(function () {
            var t = 0, a = height = "";
            $(".modules>div").each(function () {
                var n = parseInt($(this).attr("index"));
                a = $(this).find("div.ng-scope[ng-controller$='Ctrl']").css("width");
                height = $(this).find("div.ng-scope[ng-controller$='Ctrl']").css("height");
                if (n > 0) {
                    for (var i in $scope.activeModules) {
                        if ($scope.activeModules[i].index == n) {
                            t += parseInt($scope.activeModules[i].marginTop);
                                $scope.activeModules[i].params.positionStyle.width = parseInt(a);
                                $scope.activeModules[i].params.positionStyle.height = parseInt(height);
                                $scope.activeModules[i].params.positionStyle.top = t;
                                $scope.activeModules[i].positionStyle = "position:absolute;width:" + a + ";height:" + height + ";left:" + $scope.activeModules[i].params.positionStyle.left + "px;top:" + t + "px;";
                                $(this).find("div[ng-controller]").attr("style", $scope.activeModules[i].positionStyle);
                        }
                    }
                    t += parseInt(height);
                }
                i++;
            });
            serviceBase.setBaseData("activeModules", $scope.activeModules);
        }, 1e3);
    }

    for (var c in $scope.activeModules)
        $scope.activeModules[c].originParams = angular.copy($scope.activeModules[c].params);
    $scope.success = function (e) {
        var e = parseInt(e),
            t = $('<span class="label label-success" style="position:absolute;z-index:10;width:90px;height:34px;line-height:28px;"><i class="fa fa-check-circle"></i> 复制成功</span>');
        serviceCommon.copySuccess(e, t);
    };

    $scope.$on("serviceBase.editors.update", function (t, a) {
        $scope.editors = a
    });

    $scope.$on("serviceBase.activeItem.update", function (t, a) {
        $scope.activeItem = a
    });

    $scope.$on("serviceBase.activeModules.update", function (t, a) {
        $scope.activeModules = a
    });

    $scope.$on("serviceBase.activeItem.params.update", function (t, a) {
        $scope.activeItem.params = a
    });

    $scope.$on("serviceBase.activeItem.animationName.update", function (t, a) {
        $scope.activeItem.params.animationStyle.animationName = a
    });

    $scope.$on("serviceBase.activeItem.style.update", function (t, a, n, i, s) {
        $scope.activeItem.params[a] = n,
            $scope.activeItem[a] = i,
        void 0 !== s && ($scope.activeItem.transform = s)
    });

    $scope.$on("updateScope", function (t, a) {
        angular.forEach(a, function (t, a) {
            $scope[a] = t
        })
    });

    $scope.addItem = function (e) {
        serviceBase.addItem(e, "uc")
    };

    $scope.editItem = function (e) {
        serviceBase.editItem(e)
    };

    $scope.deleteItem = function (e) {
        serviceBase.deleteItem(e)
    };

    $scope.submit = function (t) {
        $scope.submit = serviceUcSubmit.submit(),
            $scope.$apply("submit"),
            $(t.target).parents("form").submit()
    };

    $scope.init = function (t, a) {
        if ($scope.modules = serviceBase.setModules(t, a),
        $scope.activeModules.length > 0) {
            var n = [];
            angular.forEach($scope.activeModules, function (e, t) {
                e && n.push(e.id)
            })
        }
        angular.forEach($scope.modules, function (e, t) {
            e.defaultshow && -1 == $.inArray(e.id, n) && serviceBase.addItem(e.id)
        })
    };

    $scope.setModulePositionStyle = function (e) {
        serviceSetStyle.setModulePositionStyle(e)
    };

    $scope.eleAnimationIns = function (e) {
        serviceSetStyle.eleAnimationIns(e)
    };

    $scope.savePagePosition = function () {
        serviceSetStyle.savePagePosition($scope.activeModules)
    };

    $scope.saveModulePosition = function () {
        serviceSetStyle.saveModulePosition($scope.activeItem)
    };

    $scope.changeTextAlign = function (t) {
        serviceSetStyle.changeTextAlign($scope.activeItem, t)
    };

    $scope.changeBorderWidth = function () {
        serviceSetStyle.changeBorderWidth($scope.activeItem)
    };

    $scope.changeInnerHeight = function () {
        serviceSetStyle.changeInnerHeight($scope.activeItem)
    };

    $scope.changePageLength = function (t) {
        if (angular.isString(t))
            if ("minus" == t && $scope.pageLength > 1)
                t = $scope.pageLength - 1;
            else {
                if (!("plus" == t && $scope.pageLength < 5))
                    return false;
                t = $scope.pageLength + 1
            }
        var a = serviceSetStyle.changePageLength(t, $scope.activeModules);
        serviceBase.setBaseData({
            pageLength: parseInt(t),
            activeModules: a
        })
    };

    $scope.clearModuleStyle = function () {
        serviceSetStyle.clearModuleStyle($scope.activeItem)
    };

    $scope.addThumb = function (t) {
        require(["fileUploader"], function (a) {
            a.show(function (a) {
                $scope.activeItem.params[t] = a.url,
                    $scope.$apply("activeItem")
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $scope.showIconBrowser = function (t) {
        util.iconBrowser(function (a) {
            t.css.icon.icon = a,
                $scope.$apply("activeMenus")
        })
    };

    $scope.addMenu = function () {
        $scope.activeMenus.push({
            icon: "",
            css: {
                icon: {
                    icon: "fa fa-external-link"
                }
            },
            name: "",
            url: ""
        })
    };

    $scope.removeMenu = function (t) {
        $scope.activeMenus = _.without($scope.activeMenus, t)
    };

    $(".single-submit").on("click", function (t) {
        $scope.submit(t)
    });

    $scope.init(null, ["UCheader"]);
    $scope.changePageLength($scope.pageLength);
    $scope.editItem(0);
    $scope.$watch("activeItem.params.baseStyle", function (e) {
        e && serviceSetStyle.setModuleBaseStyle(e)
    }, true);

    $scope.$watch("activeItem.params.borderStyle", function (e) {
        e && serviceSetStyle.setModuleBorderStyle(e)
    }, true);

    $scope.$watch("activeItem.params.shadowStyle", function (e) {
        e && serviceSetStyle.setModuleShadowStyle(e)
    }, true);

    $scope.$watch("activeItem.params.animationStyle", function (e) {
        e && serviceSetStyle.setModuleAnimationStyle(e)
    }, true);

    $scope.$watch("activeItem.params.positionStyle", function (e) {
        e && serviceSetStyle.setModulePositionStyle(e)
    }, true);
}
]);

angular.module("userCenterApp").service("serviceUcSubmit", ["serviceBase", "serviceCommon", function (serviceBase, serviceCommon) {
    var serviceUcSubmit = {};
    serviceUcSubmit.submit = function () {
        var a = ""
            , n = {
            params: {},
            html: ""
        }
            , i = $($(".modules").html())
            , s = serviceBase.getBaseData("activeModules")
            , o = $(".app-usercenter").height()
            , r = $(".app-content").height() - o + "px";
        i.find("div.ng-scope[ng-controller$='Ctrl']").each(function () {
            var e = _.findIndex(s, {
                index: parseInt($(this).parent().parent().attr("index"))
            })
                , n = ""
                , i = angular.copy(s[e].params);
            $(this).find(".js-default-content").remove();
            var o = $(this).parent().parent().attr("name").toLowerCase()
                , r = $(this).css("top")
                , l = $(this).css("left")
                , c = $(this).css("width")
                , u = $(this).css("height")
                , d = "position:absolute;top:" + r + ";left:" + l + ";width:" + c + ";height:" + u + ";";
            switch (s[e].params.positionStyle.top = parseInt(r),
                s[e].params.positionStyle.left = parseInt(l),
                s[e].params.positionStyle.width = parseInt(c),
                s[e].params.positionStyle.height = parseInt(u),
                s[e].positionStyle = d,
                o) {
                case "link":
                    var p = this;
                    angular.forEach(i.items, function (e, a) {
                        (e.selectCate.pid || e.selectCate.cid) && $(p).find(".list-group").children().eq(a).replaceWith("<div>" + serviceCommon.buildDataTagBegin("link", e) + '<div class="list-group-item ng-scope"><a href="{$row[url]}" class="clearfix"><span class="app-nav-title"> {$row[title]}<i class="pull-right fa fa-angle-right"></i></span></a></div>' + serviceCommon.buildDataTagEnd() + "</div>")
                    });
                    break;
                case "richtext":
                    s[e] && (s[e].params.content = "")
            }
            if (n = $(this).html(),
            "header" != o) {
                d = $(this).attr("style");
                a += '<div type="' + o + '" style="' + d + '">' + n + "</div>"
            }
            e++
        });
        var l = s[0].params.bgColor ? s[0].params.bgColor : "";
        return a = '<div class="js-design-page" style="background-color:' + l + ";height:" + r + ';position:absolute;">' + a + "</div>",
            a = a.replace(/<\!\-\-([^-]*?)\-\->/g, ""),
            a = a.replace(/ ng\-[a-zA-Z-]+=\"[^\"]*\"/g, ""),
            a = a.replace(/ ng\-[a-zA-Z]+/g, ""),
            n.html = a,
            n.params = angular.copy(s),
            serviceCommon.stripHaskey(n.params),
            n
    };
    return serviceUcSubmit;
}
]);

angular.module("userGroup", ["we7app"]);

angular.module("userGroup").controller("UserGroupDisplay", ["$scope", "config", function ($scope, config) {
    $scope.lists = config.lists;
    $scope.links = config.links;
    $scope.editGroup = function (groupId) {
        var t = parseInt(groupId);
        location.href = $scope.links.groupPost + "id=" + t
    };

    $scope.delGroup = function (groupId) {
        var t = parseInt(groupId);
        location.href = $scope.links.groupDel + "id=" + t
    };
}
]);

angular.module("userGroup").controller("UserGroupPost", ["$scope", "config", function ($scope, config) {
    $scope.groupInfo = config.groupInfo;
    $scope.packages = config.packages;
    $scope.changeText = function ($event) {
        var t = $event.target.text;
        $event.target.text = "展开" == t ? "收起" : "展开"
    }
}
]);

angular.module("userGroup").controller("ViceGroupDisplay", ["$scope", "config", function (e, t) {
    e.lists = t.lists,
        e.links = t.links,
        e.editGroup = function (t) {
            var t = parseInt(t);
            location.href = e.links.groupPost + "id=" + t
        }
        ,
        e.delGroup = function (t) {
            var t = parseInt(t);
            location.href = e.links.groupDel + "id=" + t
        }
}
]);

angular.module("userGroup").controller("ViceGroupPost", ["$scope", "config", function (e, t) {
    e.groupInfo = t.groupInfo,
        e.packages = t.packages,
        e.changeText = function (e) {
            var t = $(e)[0].target.text;
            $(e)[0].target.text = "展开" == t ? "收起" : "展开"
        }
}
]);

angular.module("userManageApp", ["we7app"]);

angular.module("userManageApp").controller("UserEditModulesTpl", ["$scope", "$http", "config", function ($scope, $http, config) {
    $scope.user = config.user,
        $scope.profile = config.profile,
        $scope.group_info = config.group_info,
        $scope.groups = config.groups,
        $scope.links = config.links,
        $scope.changeGroup = $scope.user.groupid,
        $scope.httpChange = function (a) {
            $http.post($scope.links.editGroup + "uid=" + $scope.user.uid, {
                type: a,
                groupid: $scope.changeGroup,
                founder_groupid: $scope.user.founder_groupid
            }).success(function (t) {
                0 == t.message.errno ? ($scope.group_info = t.message.message,
                    util.message("修改成功！")) : util.message(t.message.message)
            })
        };

    $scope.changeText = function (e) {
        var t = $(e)[0].target.text;
        $(e)[0].target.text = "展开" == t ? "收起" : "展开"
    }
}
]);

angular.module("userManageApp").controller("UserEditAccount", ["$scope", "config", function (e, t) {
    e.user = t.user,
        e.wechats = t.wechats,
        e.wxapps = t.wxapps,
        e.webapps = t.webapps,
        e.phoneapps = t.phoneapps,
        e.profile = t.profile
}
]);

angular.module("userManageApp").controller("UserCreate", ["$scope", "config", function ($scope, config) {
    $scope.groups = config.groups;
    $scope.user = {
        username: "",
        password: "",
        repassword: "",
        groupid: 0,
        remark: ""
    };

    $scope.changeType = function ($event) {
        var t = $event.target;
        $(t).attr("type", "password");
    };

    $scope.checkSubmit = function (e) {

        if ($.trim($("#username").val())) {
            e.preventDefault();
            util.message("请输入用户名.", "", "error");
            return false;
        } else if ("" == $("#password").val()) {
            e.preventDefault();
            util.message("没有输入密码.", "", "error");
            return false;
        } else if ($("#password").val().length < 8) {
            e.preventDefault();
            util.message("密码长度不能小于8个字符.", "", "error");
            return false;
        } else if ($("#password").val() != $("#repassword").val()) {
            e.preventDefault();
            util.message("两次输入的密码不一致.", "", "error");
            return false;
        } else if ("" == $("#groupid").val() || 0 == $("#groupid").val()) {
            e.preventDefault();
            util.message("请选择所属用户组.", "", "error");
            return false;
        }
    }
}
]);

angular.module("userManageApp").controller("UsersDisplay", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.type = a.type;
    $scope.users = a.users;
    $scope.usergroups = a.usergroups;
    $scope.links = a.links;

    $scope.operate = function (uid, type) {
        $http.post($scope.links.link, {
            uid: uid,
            type: type
        }).success(function (e) {
            e.message.errno;
            util.message(e.message.message, e.redirect);
        })
    }
}
]);

angular.module("userManageApp").controller("FieldsDisplay", ["$scope", "config", function ($scope, config) {
    $scope.fields = config.fields;
    $scope.links = config.links;
}
]);

angular.module("userManageApp").controller("FieldsPost", ["$scope", "config", function ($scope, config) {
    $scope.item = config.item;

    if (null == $scope.item) {
        $scope.available = true;
        $scope.required = true;
        $scope.unchangeable = true;
        $scope.showinregister = true;
    } else {
        1 == $scope.item.available ? $scope.available = true : $scope.available = false;
        1 == $scope.item.required ? $scope.required = true : $scope.required = false;
        1 == $scope.item.unchangeable ? $scope.unchangeable = true : $scope.unchangeable = false;
        1 == $scope.item.showinregister ? $scope.showinregister = true : $scope.showinregister = false;
    }

    $scope.verifyField = function () {
        var e = $('input[name="field"]'),
            field_value = e.val(),
            reg = /^[A-Za-z0-9_]*$/;
        if (!reg.test(field_value)) {
            util.message("请使用字母或数字或下划线组合字段名！");
            e.val("");
        }
    }
}
]);

angular.module("userManageApp").controller("RegistersetCtrl", ["$scope", "config", function ($scope, config) {
    $scope.settings = config.settings;
    $scope.groups = config.groups;
}
]);

angular.module("userManageApp").controller("UserAssignPermissionsCtrl", ["$scope", "config", function (e, t) {
    e.user = t.user,
        e.profile = t.profile
}
]);

angular.module("userManageApp").controller("UsersFindMobilePwd", ["$scope", "$http", "config", "$interval", function (e, t, a, n) {
    e.links = a.links,
        e.code = "",
        e.password = "",
        e.repassword = "",
        e.image = a.image,
        e.verify = "",
        e.mobile = "",
        e.find_password_sign = a.find_password_sign,
        e.expire = 120,
        e.text = "免费获取验证码",
        e.isDisable = false,
        e.sendMessage = function () {
            if ("" == e.mobile)
                return util.message("手机号不能为空"),
                    false;
            t.post(e.links.valid_mobile_link, {
                mobile: e.mobile
            }).success(function (a) {
                0 != a.message.errno ? util.message(a.message.message) : t.post(e.links.send_code_link, {
                    receiver: e.mobile,
                    custom_sign: e.find_password_sign
                }).success(function (t) {
                    if ("success" == t) {
                        util.message("发送验证码成功", "", "success");
                        var a = n(function () {
                            e.isDisable = true,
                                e.expire--,
                                e.text = e.expire + "秒后重新获取",
                            e.expire <= 0 && (n.cancel(a),
                                e.isDisable = false,
                                e.text = "重新点击获取验证码",
                                e.expire = 120)
                        }, 1e3)
                    } else
                        util.message(t, "", "error")
                })
            })
        }
        ,
        e.changeVerify = function () {
            return e.image = e.links.img_verify_link + "r=" + Math.round((new Date).getTime()),
                false
        }
        ,
        e.validCode = function () {
            "" == e.mobile && util.message("手机号不能为空"),
            "" == e.code && util.message("短信验证码不能为空"),
            "" == e.verify && util.message("图形验证码不能为空"),
                t.post(e.links.valid_code_link, {
                    mobile: e.mobile,
                    code: e.code,
                    verify: e.verify
                }).success(function (e) {
                    0 == e.message.errno ? ($(".step-2").removeClass("hide"),
                        $(".step-1").hide(),
                        $(".step-set-pwd").addClass("steps-status-finish")) : util.message(e.message.message, "", "error")
                })
        }
        ,
        e.changePassword = function () {
            return "" == e.password ? ($(".password").html("密码不能为空"),
                false) : "" == e.repassword ? ($(".repassword").html("密码不能为空"),
                false) : e.password != e.repassword ? ($(".repassword").html("两次输入的密码不一致"),
                false) : void t.post(e.links.set_password_link, {
                password: e.password,
                repassword: e.repassword,
                mobile: e.mobile
            }).success(function (e) {
                if (0 == e.message.errno)
                    $(".step-3").removeClass("hide"),
                        $(".step-2").hide(),
                        $(".step-pwd-success").addClass("steps-status-finish");
                else {
                    if (-2 == e.message.errno)
                        return $(".password").html(e.message.message),
                            false;
                    util.message(e.message.message)
                }
            })
        }
}
]);

angular.module("userManageApp").controller("UserExpireCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.user_expire = a.user_expire;
    $scope.links = a.links;

    $scope.saveExpire = function () {
        $http.post($scope.links.user_expire_link, {
            day: $scope.user_expire.day
        }).success(function (e) {
            0 != e.message.errno ? util.message(e.message.message, e.redirect, "error") : util.message("设置成功", e.redirect, "success")
        })
    };

    $scope.httpChange = function () {
        $http.post($scope.links.user_expire_status_link, {}).success(function (e) {
            0 == e.message.errno ? util.message("修改成功", e.redirect) : util.message("修改失败，请稍后重试！")
        })
    }
}
]);

angular.module("userManageApp").controller("UsersRegisterMobile", ["$scope", "$http", "config", "$interval", function ($scope, $http, config, $interval) {

    $scope.links = config.links,
        $scope.smscode = "",
        $scope.password = "",
        $scope.repassword = "",
        $scope.image = config.image,
        $scope.verify = "",
        $scope.mobile = "",
        $scope.owner_uid = config.owner_uid,
        $scope.register_type = config.register_type,
        $scope.register_sign = config.register_sign,
        $scope.expire = 120,
        $scope.text = "发送验证码",
        $scope.isDisable = false,
        $scope.mobleInvalid = true,
        $scope.smscodeInvalid = true,
        $scope.imageInvalid = true,
        $scope.passwordInvalid = true,
        $scope.repasswordInvalid = true;

    /**
     * 验证手机号码，先发送给服务器端验证手机号码格式，然后再发送到服务器验证手机号在线
     * @returns {boolean}
     */
    $scope.sendMessage = function () {
        if ("" == $scope.mobile) {
            util.message("手机号不能为空");
            return false;
        }
        $http.post($scope.links.valid_mobile_link, {
            mobile: $scope.mobile
        }).success(function (a) {
            0 != a.message.errno ? util.message(a.message.message) : $http.post($scope.links.send_code_link, {
                receiver: $scope.mobile,
                custom_sign: $scope.register_sign
            }).success(function (t) {
                if ("success" == t) {
                    util.message("发送验证码成功", "", "success");
                    var a = $interval(function () {
                        $scope.isDisable = true,
                            $scope.expire--,
                            $scope.text = $scope.expire + "秒后重新获取",
                        $scope.expire <= 0 && ($interval.cancel(a),
                            $scope.isDisable = false,
                            $scope.text = "重新点击获取验证码",
                            $scope.expire = 120)
                    }, 1e3)
                } else
                    util.message(t, "", "error")
            })
        })
    };

    $scope.changeVerify = function () {
        $scope.image = $scope.links.img_verify_link + "r=" + Math.round((new Date).getTime());
        return false;
    };

    $scope.checkMobile = function () {
        var a = $scope.mobile;
        $http.post($scope.links.valid_mobile_link, {
            mobile: a
        }).success(function (t) {
            0 != t.message.errno ? ($scope.mobileErr = true,
                $scope.mobileMsg = t.message.message) : ($scope.mobileErr = false,
                $scope.mobleInvalid = false)
        })
    };

    $scope.checkMobileCode = function () {
        var a = $scope.mobile
            , n = $scope.smscode;
        "" == n || void 0 == n ? ($scope.smscodeErr = true,
            $scope.smscodeMsg = "短信验证码不能为空") : $http.post($scope.links.check_mobile_code_link, {
            mobile: a,
            smscode: n
        }).success(function (t) {
            0 != t.message.errno ? ($scope.smscodeErr = true,
                $scope.smscodeMsg = t.message.message) : ($scope.smscodeErr = false,
                $scope.smscodeInvalid = false)
        })
    };

    $scope.checkImagecode = function () {
        "" == $scope.imagecode || void 0 == $scope.imagecode ? ($scope.imagecodeErr = true,
            $scope.imagecodeMsg = "请输入验证码") : $http.post(config.links.check_code_link, {
            code: $scope.imagecode
        }).success(function (t) {
            0 != t.message.errno ? ($scope.imagecodeErr = true,
                $scope.imagecodeMsg = "请输入正确的验证码",
                $scope.changeVerify()) : ($scope.imagecodeErr = false,
                $scope.imageInvalid = false)
        })
    };

    $scope.checkPassword = function () {
        "" == $scope.password || void 0 == $scope.password ? ($scope.passwordErr = true,
            $scope.passwordMsg = "请输入密码") : $scope.password.length < 8 ? ($scope.passwordErr = true,
            $scope.passwordMsg = "密码长度不能少于8") : ($scope.passwordErr = false,
            $scope.passwordInvalid = false)
    };

    $scope.checkRepassword = function () {
        "" == $scope.repassword || void 0 == $scope.repassword ? ($scope.repasswordErr = true,
            $scope.repasswordMsg = "确认密码不能为空") : $scope.repassword != $scope.password ? ($scope.repasswordErr = true,
            $scope.repasswordMsg = "两次密码输入不一致") : ($scope.repasswordErr = false,
            $scope.repasswordInvalid = false)
    };

    $scope.register = function () {
        $http.post($scope.links.register_link, {
            password: $scope.password,
            mobile: $scope.mobile,
            register_type: $scope.register_type,
            code: $scope.imagecode,
            smscode: $scope.smscode
        }).success(function (e) {
            0 == e.message.errno ? util.message(e.message.message, e.redirect, "success") : util.message(e.message.message)
        })
    }
}
]);

angular.module("userManageApp").controller("UserRegisterSystem", ["$scope", "$http", "config", function ($scope, $http, a) {

    function checkFiled(value, fieldName, fieldMsg1, fieldMsg2, regx) {
        if ("" == value || void 0 == value) {
            $scope.extendfields[fieldName].fieldErr = true;
            $scope.extendfields[fieldName].fieldMsg = fieldMsg1;
        } else if (regx.test(value)) {
            $scope.extendfields[fieldName].fieldErr = false;
        } else {
            $scope.extendfields[fieldName].fieldErr = true;
            $scope.extendfields[fieldName].fieldMsg = fieldMsg2;
        }
        return $scope.extendfields[fieldName].fieldErr;
    }

    $scope.image = a.image,
        $scope.usernameInvalid = true,
        $scope.passwordInvalid = true,
        $scope.repasswordInvalid = true,
        $scope.codeInvalid = true;

    get_extendfields = function () {
        $http.get(a.links.get_extendfields_link).success(function (t) {
            0 != t.message.errno ? util.message("获取注册字段信息失败") : $scope.extendfields = t.message.message
        })
    };
    get_extendfields();

    /**
     * 检查用户名称是否合法
     */
    $scope.checkUsername = function () {
        var n = /^[\u4e00-\u9fa5a-z\d_\.]{3,15}$/iu;

        if ("" == $scope.username || void 0 == $scope.username) {
            $scope.usernameErr = true;
            $scope.usernameMsg = "请输入用户名"
        } else if (n.test($scope.username)) {
            $http.post(a.links.check_username_link, {
                username: $scope.username,
                owner_uid: $scope.owner_uid,
                password: $scope.password
            }).success(function (t) {
                if (0 != t.message.errno) {
                    $scope.usernameErr = true;
                    $scope.usernameMsg = "非常抱歉，此用户名已经被注册，你需要更换注册名称！";
                } else {
                    $scope.usernameErr = false;
                    $scope.usernameInvalid = false;
                }
            });
        } else {
            $scope.usernameErr = true,
                $scope.usernameMsg = "用户名格式为 3-15 位字符，可以包括汉字、字母（不区分大小写）、数字、下划线和句点"
        }
    };

    /**
     * 检查用户密码是否合法
     */
    $scope.checkPassword = function () {
        if ("" == $scope.password || void 0 == $scope.password) {
            $scope.passwordErr = true;
            $scope.passwordMsg = "请输入密码";
        } else if ($scope.password.length < 8) {
            $scope.passwordErr = true;
            $scope.passwordMsg = "密码长度不能少于8";
        } else {
            $scope.passwordErr = false;
            $scope.passwordInvalid = false;
        }
    };

    /**
     * 检查密码是否一致
     */
    $scope.checkRepassword = function () {
        if ($scope.repassword != $scope.password) {
            $scope.repasswordErr = true;
            $scope.repasswordMsg = "两次密码输入不一致";
        } else {
            $scope.repasswordErr = false;
            $scope.repasswordInvalid = false;
        }
    };

    /**
     * 重新获取验证码
     * @returns {boolean}
     */
    $scope.changeVerify = function () {
        $scope.image = a.links.img_verify_link + "r=" + Math.round((new Date).getTime());
        return false;
    };

    /**
     * 检查验证码
     */
    $scope.checkCode = function () {
        if ("" == $scope.code || void 0 == $scope.code) {
            $scope.codeErr = true;
            $scope.codeMsg = "请输入验证码";
        } else {
            $http.post(a.links.check_code_link, {
                code: $scope.code
            }).success(function (t) {
                if (0 != t.message.errno) {
                    $scope.codeErr = true;
                    $scope.codeMsg = "请输入正确的验证码";
                    $scope.changeVerify()
                } else {
                    $scope.codeErr = false;
                    $scope.codeInvalid = false;
                }
            });
        }
    };

    $scope.checkExtendfield = function (fieldName) {
        var value = document.getElementsByName(fieldName)[0].value;
        switch (fieldName) {
            case "realname":
                var reg = /^[\u4E00-\u9FA5]{2,5}$/
                    , s = "请输入用户名"
                    , o = "请输入您的真实姓名";
                checkRes = checkFiled(value, fieldName, s, o, reg);
                break;
            case "nickname":
                var reg = /^[\u4e00-\u9fa5a-z\d_\.]{3,15}$/iu
                    , s = "请输入昵称"
                    , o = "昵称格式为 3-15 位字符，可以包括汉字、字母（不区分大小写）、数字、下划线和句点";
                checkRes = checkFiled(value, fieldName, s, o, reg);
                break;
            case "qq":
                if ("" == value || void 0 == value) {
                    $scope.extendfields[fieldName].fieldErr = true;
                    $scope.extendfields[fieldName].fieldMsg = "请输入QQ";
                } else {
                    var reg = /^[1-9][0-9]{4,9}$/
                        , s = "请输入QQ号码"
                        , o = "请输入正确的QQ号码";
                    checkRes = checkFiled(value, fieldName, s, o, reg);
                }
        }
    }
}
]);

angular.module("userProfile", ["we7app"]);

angular.module("userProfile").controller("UserProfileDisplay", ["$scope", "$window", "$http", "config", function ($scope, $window, a, config) {
    $scope.user = config.user;
    $scope.profile = config.profile;
    $scope.account_num = config.account_num;
    null == $scope.profile && ($scope.profile = {
        avatar: "",
        realname: "",
        births: "",
        address: "",
        resides: ""
    });
    $scope.links = config.links;
    $scope.group_info = config.group_info;
    $scope.groups = config.groups;
    $scope.changeGroup = $scope.user.groupid;
    $scope.wechats = config.wechats;
    $scope.wxapps = config.wxapps;

    /**
     * 修改用户头像
     */
    $scope.changeAvatar = function () {
        require(["fileUploader"], function (fileUploader) {
            fileUploader.init(function (t) {
                $scope.profile.avatar = t.url,
                    $scope.$apply($scope.profile),
                    $scope.httpChange("avatar")
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $(".js-clip").each(function () {
        util.clip(this, $(this).attr("data-url"))
    });

    /**
     * 修改用户信息
     * @param field
     * @param fieldValue
     */
    $scope.editInfo = function (field, fieldValue) {
        $scope.userOriginal = {};
        $scope.userOriginal[field] = fieldValue
    };

    $scope.httpChange = function (field) {
        switch (field) {
            case "avatar":
                a.post($scope.links.userPost, {
                    type: field,
                    avatar: $scope.profile.avatar,
                    uid: $scope.user.uid
                }).success(function (e) {
                    if (0 == e.message.errno) {
                        util.message("修改成功！");
                    } else {
                        -1 == e.message.errno && util.message(e.message.message);
                        1 == e.message.errno && util.message(e.message.message);
                        40035 == e.message.errno && util.message(e.message.message);
                    }
                });
                break;
            case "username":
                $(".modal").modal("hide");
                a.post($scope.links.userPost, {
                    type: field,
                    username: $scope.userOriginal[field],
                    uid: $scope.user.uid
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.user[field] = $scope.userOriginal[field];
                        util.message("修改成功！");
                    } else {
                        -1 == t.message.errno && util.message(t.message.message);
                        1 == t.message.errno && util.message(t.message.message);
                        2 == t.message.errno && util.message(t.message.message);
                        40035 == t.message.errno && util.message(t.message.message);
                    }
                });
                break;
            case "vice_founder_name":
                $(".modal").modal("hide");
                a.post($scope.links.userPost, {
                    type: field,
                    vice_founder_name: $scope.userOriginal[field],
                    uid: $scope.user.uid
                }).success(function (t) {
                    if (0 != t.message.errno) {
                        util.message(t.message.message);
                        return false;
                    }
                    $scope.user[field] = $scope.userOriginal[field];
                    util.message("修改成功！");
                });
                break;
            case "qq":
                $(".modal").modal("hide");
                a.post($scope.links.userPost, {
                    type: field,
                    qq: $scope.userOriginal[field],
                    uid: $scope.user.uid
                }).success(function (t) {
                    if (0 != t.message.errno) {
                        util.message(t.message.message);
                        return false;
                    }
                    $scope.profile[field] = $scope.userOriginal[field];
                    util.message("修改成功！");
                });
                break;
            case "remark":
                $(".modal").modal("hide");
                a.post($scope.links.userPost, {
                    type: field,
                    remark: $scope.userOriginal[field],
                    uid: $scope.user.uid
                }).success(function (t) {
                    if (0 != t.message.errno) {
                        util.message(t.message.message);
                        return false;
                    }
                    $scope.user[field] = $scope.userOriginal[field];
                    util.message("修改成功！");
                });
                break;
            case "welcome_link":
                $(".modal").modal("hide");
                a.post($scope.links.userPost, {
                    type: field,
                    welcome_link: $scope.user.welcome_link,
                    uid: $scope.user.uid
                }).success(function (e) {
                    if (0 != e.message.errno) {
                        util.message(e.message.message);
                        return false;
                    }
                    util.message("修改成功！");
                });
                break;
            case "mobile":
                $(".modal").modal("hide");
                a.post($scope.links.userPost, {
                    type: field,
                    mobile: $scope.userOriginal[field],
                    uid: $scope.user.uid
                }).success(function (t) {
                    if (0 != t.message.errno) {
                        util.message(t.message.message);
                        return false;
                    }
                    $scope.profile[field] = $scope.userOriginal[field];
                    util.message("修改成功！");
                });
                break;
            case "password":
                $(".modal").modal("hide");
                if (0 == $window.sysinfo.isfounder && 0 == $scope.user.register_type) {
                    var oldPassword = $(".old-password").val();
                    if (_.isEmpty(oldPassword)) {
                        util.message("原密码不可为空！");
                        return false;
                    }
                }
                var s = $(".new-password").val()
                    , o = $(".renew-password").val();
                if (_.isEmpty(s)) {
                    util.message("新密码不可为空！");
                    return false;
                }
                if (_.isEmpty(o)) {
                    util.message("确认新密码不可为空！");
                    return false;
                }
                if (s != o) {
                    util.message("两次密码不一致！");
                    return false;
                }
                a.post($scope.links.userPost, {
                    type: field,
                    oldpwd: oldPassword,
                    newpwd: s,
                    renewpwd: o,
                    uid: $scope.user.uid
                }).success(function (e) {
                    if (0 == e.message.errno) {
                        util.message("密码修改成功！");
                    } else {
                        -1 == e.message.errno && util.message("抱歉，用户不存在或是已经被删除！");
                        1 == e.message.errno && util.message("密码修改失败，请稍后重试！");
                        2 == e.message.errno && util.message("两次密码不一致！");
                        3 == e.message.errno && util.message("原密码不正确！");
                        40035 == e.message.errno && util.message("不合法的参数！");
                    }
                });
                break;
            case "endtime":
                $(".modal").modal("hide");
                var r = $scope.user.endtype
                    , l = $(':text[name="endtime"]').val();
                a.post($scope.links.userPost, {
                    type: field,
                    endtype: r,
                    endtime: l,
                    uid: $scope.user.uid
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.user.endtype = r;
                        $scope.user.end = 1 == r ? "永久" : l;
                        util.message("到期时间修改成功！");
                    } else {
                        -1 == t.message.errno && util.message(t.message.message);
                        1 == t.message.errno && util.message(t.message.message);
                        40035 == t.message.errno && util.message(t.message.message);
                    }
                });
                break;
            case "realname":
                $(".modal").modal("hide");
                if (_.isEmpty($scope.userOriginal.realname)) {
                    util.message("真实姓名不可为空！");
                    return false;
                }
                a.post($scope.links.userPost, {
                    type: field,
                    realname: $scope.userOriginal.realname,
                    uid: $scope.user.uid
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.profile.realname = $scope.userOriginal.realname;
                        util.message("真实姓名修改成功！");
                    } else {
                        -1 == t.message.errno && util.message(t.message.message);
                        1 == t.message.errno && util.message(t.message.message);
                        40035 == t.message.errno && util.message(t.message.message);
                    }
                });
                break;
            case "birth":
                $(".modal").modal("hide");
                var c = $(".tpl-year").val()
                    , u = $(".tpl-month").val()
                    , d = $(".tpl-day").val();
                a.post($scope.links.userPost, {
                    type: field,
                    year: c,
                    month: u,
                    day: d,
                    uid: $scope.user.uid
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.profile.births = c + "年" + u + "月" + d + "日";
                        util.message("修改成功！");
                    } else {
                        -1 == t.message.errno && util.message(t.message.message);
                        1 == t.message.errno && util.message(t.message.message);
                        40035 == t.message.errno && util.message(t.message.message);
                    }
                });
                break;
            case "address":
                $(".modal").modal("hide");
                if (_.isEmpty($scope.userOriginal.address)) {
                    util.message("邮寄地址不可为空！");
                    return false;
                }
                a.post($scope.links.userPost, {
                    type: field,
                    address: $scope.userOriginal.address,
                    uid: $scope.user.uid
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.profile.address = $scope.userOriginal.address;
                        util.message("邮寄地址修改成功！");
                    } else {
                        -1 == t.message.errno && util.message(t.message.message);
                        1 == t.message.errno && util.message(t.message.message);
                        40035 == t.message.errno && util.message(t.message.message);
                    }
                });
                break;
            case "reside":
                $(".modal").modal("hide");
                var p = $(".tpl-province").val()
                    , m = $(".tpl-city").val()
                    , f = $(".tpl-district").val();
                a.post($scope.links.userPost, {
                    type: field,
                    province: p,
                    city: m,
                    district: f,
                    uid: $scope.user.uid
                }).success(function (t) {
                    if (0 == t.message.errno) {
                        $scope.profile.resides = p + " " + m + " " + f;
                        util.message("修改成功！");
                    } else {
                        -1 == t.message.errno && util.message(t.message.message);
                        1 == t.message.errno && util.message(t.message.message);
                        40035 == t.message.errno && util.message(t.message.message);
                    }
                })
        }
    };

    $scope.changeText = function ($event) {
        var t = $event.target.text;
        $event.target.text = "展开" == t ? "收起" : "展开";
    }
}
]);

angular.module("userProfile").controller("userBindCtrl", ["$scope", "$http", "config", "$interval", function ($scope, $http, a, $interval) {
    $scope.bindqq = a.bindqq;
    $scope.bindwechat = a.bindwechat;
    $scope.bindmobile = a.bindmobile;
    $scope.login_urls = a.login_urls;
    $scope.thirdlogin = a.thirdlogin;
    $scope.bind_sign = a.bind_sign;
    $scope.image = a.image;
    $scope.mobile = "";
    $scope.password = "";
    $scope.repassword = "";
    $scope.links = a.links;
    $scope.imagecode = "";
    $scope.smscode = "";
    $scope.expire = 120;
    $scope.text = "发送验证码";
    $scope.isDisable = false;

    /**
     * 先服务器端校验手机号没有被绑定过，然后发送手机短信校验
     * @param a
     * @returns {boolean}
     */
    $scope.sendMessage = function (a) {
        if ("" == $scope.mobile) {
            util.message("手机号不能为空");
            return false;
        }
        $http.post($scope.links.valid_mobile_link, { // 验证手机号没有被使用
            mobile: $scope.mobile,
            type: a
        }).success(function (a) { // 短信验证手机号有效
            0 != a.message.errno ? util.message(a.message.message) : $http.post($scope.links.send_code_link, {
                receiver: $scope.mobile,
                custom_sign: $scope.bind_sign
            }).success(function (t) {
                if ("success" == t) {
                    util.message("发送验证码成功", "", "success");
                    var a = $interval(function () {
                        $scope.isDisable = true;
                        $scope.expire--;
                        $scope.text = $scope.expire + "秒后重新获取";
                        if ($scope.expire <= 0) {
                            $interval.cancel(a);
                            $scope.isDisable = false;
                            $scope.text = "重新点击获取验证码";
                            $scope.expire = 120;
                        }
                    }, 1e3)
                } else
                    util.message(t, "", "error");
            })
        })
    };

    // 刷新图形验证码
    $scope.changeVerify = function () {
        $scope.image = $scope.links.img_verify_link + "r=" + Math.round((new Date).getTime());
        return false;
    };

    $scope.mobileBind = function (a, n) {
        if ("" == $scope.mobile) {
            util.message("手机号不能为空");
            return false;
        }
        if ("" == $scope.imagecode) {
            util.message("图形验证码不能为空");
            return false;
        }
        if ("" == $scope.smscode) {
            util.message("手机号验证码不能为空");
            return false;
        }
        if (null == $scope.bindmobile) {
            if ("" == $scope.password) {
                util.message("密码不能为空");
                return false;
            }
            if ("" == $scope.repassword) {
                util.message("确认密码不能为空");
                return false;
            }
            if ($scope.password != $scope.repassword) {
                util.message("两次输入的密码不一致");
                return false;
            }
        }
        null == $scope.bindmobile ? $http.post($scope.links.bind_mobile_link, {
            mobile: $scope.mobile,
            password: $scope.password,
            repassword: $scope.repassword,
            imagecode: $scope.imagecode,
            smscode: $scope.smscode,
            type: a
        }).success(function (e) {
            0 == e.message.errno ? util.message(e.message.message, e.redirect, "success") : util.message(e.message.message);
        }) : $http.post($scope.links.unbind_third_link, {
            mobile: $scope.mobile,
            password: $scope.password,
            repassword: $scope.repassword,
            imagecode: $scope.imagecode,
            smscode: $scope.smscode,
            type: a,
            bind_type: n
        }).success(function (e) {
            0 == e.message.errno ? util.message(e.message.message, e.redirect, "success") : util.message(e.message.message);
        })
    };

    $scope.unbind = function (bindType) {
        $http.post($scope.links.unbind_third_link, {
            bind_type: bindType
        }).success(function (e) {
            0 == e.message.errno ? util.message(e.message.message, e.redirect, "success") : util.message(e.message.message);
        })
    }
}
]);

angular.module("webApp", ["we7app"]);

angular.module("webApp").controller("webappModuleLinkUniacidCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.modules = a.modules;
    $scope.module = "";
    $scope.linkWxappAccounts = "";
    $scope.linkAppAccounts = "";
    $scope.selectedAccount = "";

    $scope.tabChange = function (index) {
        $scope.jurindex = index;
        1 != index || $scope.linkAppAccounts || $scope.searchLinkAccount($scope.module, "app");
        1 == $scope.jurindex && $("#account-wxapp .row").find(".item").removeClass("active");
        0 == $scope.jurindex && $("#account-app .row").find(".item").removeClass("active");
        $scope.selectedAccount = "";
    };

    $scope.searchLinkAccount = function (n, i) {
        $scope.module = n,
            $("#show-account").modal("show"),
            "wxapp" == i ? ($scope.tabChange(0),
                $scope.loadingWxappData = true) : $scope.loadingAppData = true,
            $http.post(a.links.search_link_account, {
                module_name: n,
                type: "wxapp" == i ? a.wxapp : a.app
            }).success(function (t) {
                console.log(t),
                    "wxapp" == i ? ($scope.loadingWxappData = false,
                        $scope.linkWxappAccounts = t.message.message,
                        $scope.linkAppAccounts = "") : ($scope.loadingAppData = false,
                        $scope.linkAppAccounts = t.message.message),
                    console.log($scope.linkWxappAccounts)
            })
    };

    $scope.selectLinkAccount = function (t, a) {
        $(a.target).parentsUntil(".col-sm-2").addClass("active"),
            $(a.target).parentsUntil(".col-sm-2").parent().siblings().find(".item").removeClass("active"),
            $scope.selectedAccount = t
    };

    $scope.module_unlink_uniacid = function (e) {
        $http.post(a.links.module_unlink_uniacid, {
            module_name: e
        }).success(function (e) {
            e.message.errno,
                util.message(e.message.message, e.redirect)
        })
    };

    $scope.moduleLinkUniacid = function () {
        $("#show-account").modal("hide"),
            $http.post(a.links.module_link_uniacid, {
                module_name: $scope.module,
                submit: "yes",
                token: a.token,
                uniacid: $scope.selectedAccount.uniacid
            }).success(function (e) {
                0 == e.message.errno ? util.message("关联成功", "refresh", "success") : util.message(e.message.message)
            });
        $scope.module = "";
    };
}
]);

angular.module("wxApp", ["we7app"]);

angular.module("wxApp").controller("MainCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {

    function n() {
        var a = [];
        angular.forEach($scope.wxappinfo.choose.modules, function (e) {
            a.push(e.name)
        });
        a = a.join(",");
        $http.post(bindingsUrl, {
            modules: a
        }).then(function (t) {
            if ("0" == t.data.message.errno) {
                var a = t.data.message.message
                    , n = [];
                angular.forEach(a, function (e) {
                    e.module = e.name;
                    for (var t = 0; t < e.bindings.length; t++)
                        e.bindings[t].modulename = e.title,
                            n.push(e.bindings[t])
                }),
                    $scope.module_bindings = n,
                    $scope.wxappinfo.choose.modules = a
            }
        })
    }

    $scope.module_bindings = [];
    $scope.create_type = a.create_type;
    $scope.wxappinfo = {
        name: a.wxappinfo.name,
        version: "",
        choose: {
            modules: [],
            template: 1
        },
        quickmenu: {
            show: true,
            bottom: {
                bgcolor: "#bebebe",
                boundary: "#fff",
                selectedColor: "#0f0",
                color: "#428bca"
            },
            menus: [{
                name: "首页",
                defaultImage: "./resource/images/bottom-default.png",
                selectedImage: "./resource/images/bottom-default.png",
                module: {}
            }, {
                name: "首页",
                defaultImage: "./resource/images/bottom-default.png",
                selectedImage: "./resource/images/bottom-default.png",
                module: {}
            }]
        },
        submit: "yes",
        token: a.token,
        uniacid: a.uniacid,
        modules: []
    };
    $scope.apps = [];
    $scope.createStep = 1;
    $scope.version = a.version;
    $scope.isMuti = 2 == a.create_type;
    $scope.mtype = 0 == a.create_type ? 1 : 2;
    $scope.designMethod = a.designMethod;

    if (a.isedit) {
        $scope.wxappinfo.choose.modules = a.wxappinfo.modules;
        $scope.wxappinfo.quickmenu = a.wxappinfo.quickmenu;
        $scope.wxappinfo.version = a.wxappinfo.version;
        $scope.wxappinfo.description = a.wxappinfo.description;
    }

    var bindingsUrl = a.bindingsUrl;
    $scope.moduleEntries = [];

    $scope.prevStep = function () {
        $scope.createStep <= 1 ? $scope.createStep = 1 : $scope.createStep -= 1,
        3 == $scope.createStep && 3 == $scope.designMethod && ($scope.isMuti || ($scope.createStep = 1))
    };

    $scope.nextStep = function () {
        if ($scope.createStep > 4) {
            $scope.createStep = 4
        } else {
            $scope.checkComplete() && ($scope.createStep += 1)
        }

        if (2 == $scope.createStep && 3 == $scope.designMethod) {
            if ($scope.isMuti) {
                n();
                $scope.createStep = 3;
            } else {
                $scope.createStep = 4;
            }
        }
    };

    $scope.backToStep = function (t) {
        var a = parseInt(t);
        a < $scope.createStep && (a <= 2 && ($scope.type = 0),
            $scope.createStep = a)
    };

    $scope.selectType = function (t) {
        $scope.type = parseInt(t),
            $(':hidden[name="type"]').val(t)
    };

    $scope.changeType = function (t) {
        $scope.type = parseInt(t),
            $(':hidden[name="type"]').val(t)
    };

    $scope.searchTpl = function () {
        var e = $(':text[id="searchtpl"]').val();
        "默认模版".match(e) ? ($(':hidden[name="template"]').val(1),
            $(".select-tem-list > ul").show()) : ($(':hidden[name="template"]').val(""),
            $(".select-tem-list > ul").hide())
    };

    $scope.selectTpl = function (t) {
        $scope.wxappinfo.choose.template = t
    };

    $scope.getModuleEntries = function () {
        if (0 == $scope.moduleEntries.length && $scope.wxappinfo.choose.modules)
            for (i in $scope.wxappinfo.choose.modules)
                if ($scope.wxappinfo.choose.modules[i].bindings)
                    for (j in $scope.wxappinfo.choose.modules[i].bindings)
                        $scope.moduleEntries.push({
                            title: $scope.wxappinfo.choose.modules[i].bindings[j].title,
                            url: $scope.wxappinfo.choose.modules[i].bindings[j].do,
                            module: $scope.wxappinfo.choose.modules[i].title
                        })
    };

    $scope.showMenu = function () {
        $scope.wxappinfo.quickmenu.show = !$scope.wxappinfo.quickmenu.show
    };

    $scope.addMenu = function () {
        if ($scope.wxappinfo.quickmenu.menus.length >= 5)
            return false;
        $scope.wxappinfo.quickmenu.menus.push({
            name: "首页",
            defaultImage: "./resource/images/bottom-default.png",
            selectedImage: "./resource/images/bottom-default.png",
            module: {}
        })
    };

    $scope.delMenu = function (t) {
        $scope.wxappinfo.quickmenu.menus = _.without($scope.wxappinfo.quickmenu.menus, $scope.wxappinfo.quickmenu.menus[t])
    };

    $scope.addDefaultImg = function (t) {
        require(["fileUploader"], function (a) {
            a.show(function (a) {
                $scope.wxappinfo.quickmenu.menus[t].defaultImage = a.url,
                    $scope.$apply($scope.wxappinfo)
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $scope.addSelectedImg = function (t) {
        require(["fileUploader"], function (a) {
            a.show(function (a) {
                $scope.wxappinfo.quickmenu.menus[t].selectedImage = a.url,
                    $scope.$apply($scope.wxappinfo)
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $scope.addModuleImage = function (t) {
        require(["fileUploader"], function (a) {
            a.show(function (a) {
                t.newicon = a.url,
                    $scope.$apply($scope.wxappinfo)
            }, {
                direct: true,
                multiple: false
            })
        })
    };

    $scope.checkComplete = function () {
        $scope.createStep;
        if (!$scope.wxappinfo.uniacid) {
            if (!$scope.wxappinfo.name)
                return util.message("小程序名称不可为空！"),
                    false;
            if (!$scope.wxappinfo.account)
                return util.message("小程序账号不可为空！"),
                    false;
            if (!$scope.wxappinfo.original)
                return util.message("原始ID不可为空！"),
                    false;
            if (!$scope.wxappinfo.appid)
                return util.message("AppId不可为空！"),
                    false;
            if (!$scope.wxappinfo.appsecret)
                return util.message("AppSecret不可为空！"),
                    false
        }
        return $scope.wxappinfo.description ? !(!$scope.wxappinfo.version || !/^[0-9]{1,2}\.[0-9]{1,2}(\.[0-9]{1,2})?$/.test($scope.wxappinfo.version)) || (util.message("版本号错误，只能是数字、点，数字最多2位，例如 1.1.1 或1.2"),
            false) : (util.message("请填写描述"),
            false)
    };

    $scope.wxapp_module_select = function (t, a) {
        angular.isArray(a) || (a = [a]),
            $scope.wxappinfo.choose.modules = a,
            angular.forEach($scope.wxappinfo.choose.modules, function (e, t, a) {
                e.module = e.name
            }),
            $scope.$apply()
    };

    $scope.package = function (n) {
        if (!(0 == $scope.wxappinfo.choose.modules.length && !confirm("添加小程序模块应用后才可进行打包操作，是否继续仅保存？"))) {
            $http.post(a.wxappPostUrl, $scope.wxappinfo).success(function (e) {
                e.message.errno ? util.message(e.message.message, "", "error") : util.message(e.message.message, e.redirect, "success")
            });
            return false;
        }
    };

    $("#resource_module").unbind("click").click(function () {
        require(["fileUploader"], function (t) {
            t.show(function (t) {
                $scope.wxapp_module_select("module", t)
            }, {
                direct: true,
                multiple: $scope.isMuti,
                isWechat: false,
                type: "module",
                others: {
                    user_module: 2,
                    mtype: $scope.mtype
                }
            })
        })
    })
}
]);

angular.module("wxApp").controller("WxappEditCtrl", ["$scope", "$http", "config", function (e, t, a) {
    e.uniacid = a.uniacid,
        e.multiid = a.multiid,
        e.success_url = a.success_url,
        e.account_list = [],
        e.current_module = "",
        e.category = {
            id: "",
            name: "",
            displayorder: "",
            linkurl: ""
        },
        e.wxapp = a.wxapp,
        e.slideedit = function (t) {
            e.wxapp = "slideedit",
                e.slideid = t
        }
        ,
        e.navedit = function (t) {
            e.wxapp = "navedit",
                e.navid = t
        }
        ,
        e.recommendedit = function (t, a) {
            e.wxapp = "recommendedit",
                e.recommendid = t,
                e.recommendpid = a
        }
        ,
        e.showAccount = function (n) {
            e.account_list = "",
                t.post(a.links.accountList, {
                    module: n
                }).success(function (t) {
                    e.account_list = t.message.message,
                        e.current_module = n,
                        console.dir(t)
                }),
                $("#show_account").modal("show")
        }
        ,
        e.selectAccount = function (e, n) {
            var i = window.location.href;
            t.post(a.links.saveConnection, {
                module: e,
                uniacid: n
            }).success(function (t) {
                0 == t.message.errno ? ($(".js-connection-img-" + e).attr("src", t.message.message.thumb),
                    $(".js-connection-name-" + e).text(t.message.message.name),
                    util.message("修改成功", i, "success")) : util.message(t.message.message, "", "error"),
                    $("#show_account").modal("hide")
            })
        }
        ,
        e.categoryedit = function (t, a) {
            e.wxapp = "categoryedit",
                e.categoryeditid = t,
                e.categoryparentid = a
        }
        ,
        e.get_categorys = function () {
            t.post(a.links.getCategorys, {
                uniacid: e.uniacid,
                multiid: e.multiid
            }).success(function (t) {
                e.categorys = t.message.message
            })
        }
        ,
        e.get_categorys(),
        e.edit_category = function () {
            e.categorys.push({
                name: "",
                displayorder: "",
                linkurl: ""
            })
        }
        ,
        e.del_category = function (n) {
            void 0 != e.categorys[n].id ? (t.post(a.links.delCategory, {
                id: e.categorys[n].id
            }).success(function () {
            }),
                e.get_categorys()) : e.categorys.splice(n, 1)
        }
        ,
        e.save_category = function () {
            if (e.name_exist = false,
                angular.forEach(e.categorys, function (t) {
                    "" == t.name && (util.message("请填写类名"),
                        e.name_exist = true)
                }),
            1 == e.name_exist)
                return false;
            t.post(a.links.saveCategory, {
                post: e.categorys,
                uniacid: uniacid,
                multiid: a.multiid
            }).success(function (e) {
            }),
                e.get_categorys(),
                $("#myModal").modal("hide")
        }
}
]);

angular.module("wxApp").controller("AccountManageWxappCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.wxapp_version_lists = a.wxapp_version_lists;
    $scope.wxapp_modules = a.wxapp_modules;
    $scope.version_exist = a.version_exist;
    $scope.activeVersion = {};

    $scope.showEditVersionInfoModal = function (version) {
        $("#modal_edit_versioninfo").modal("show");
        $scope.activeVersion = version || {};
        $scope.middleVersion = angular.copy($scope.activeVersion);
        !_.isEmpty($scope.activeVersion) && _.isEmpty($scope.activeVersion.modules) && $(".wxapp-module-list .add").css("display", "");
    };

    $scope.showEditModuleModal = function () {
        $("#modal_edit_module").modal("show");
        $scope.newWxModule = {};
    };

    $scope.selectedWxModule = function (t, a) {
        var n = $(a.target).parents(".select-module-wxapp");
        n.find("span").removeClass("hide"),
            n.siblings().find("span").addClass("hide"),
            $scope.newWxModule = t
    };

    $scope.changeWxModules = function () {
        $scope.newWxModule || util.message("请选择一个应用模块！"),
            $scope.activeVersion.modules && 3 != $scope.activeVersion.design_method ? _.indexOf($scope.activeVersion.modules, $scope.newWxModule) > -1 ? util.message("该应用模块已存在！") : $scope.activeVersion.modules.push($scope.newWxModule) : ($scope.activeVersion.modules = [$scope.newWxModule],
                $(".wxapp-module-list .add").css("display", "none")),
            $("#modal_edit_module").modal("hide")
    };

    $scope.editVersionInfo = function () {
        if (_.isEmpty($scope.activeVersion.modules))
            return util.message("应用模块不可为空！"),
                false;
        $http.post(a.links.edit_version, {
            version_info: $scope.activeVersion
        }).success(function (e) {
            $("#modal_edit_versioninfo").modal("hide"),
                0 == e.message.errno ? util.message(e.message.message, e.redirect, "success") : util.message(e.message.message)
        })
    };

    $scope.cancelVersionInfo = function () {
        $scope.middleVersion.modules ? $scope.activeVersion.modules = $scope.middleVersion.modules : $scope.activeVersion.modules = []
    };

    $scope.delWxappVersion = function (e) {
        var e = parseInt(e);
        $http.post(a.links.del_version, {
            versionid: e
        }).success(function (e) {
            0 == e.message.errno ? util.message(e.message.message, e.redirect, "success") : util.message(e.message.message)
        })
    };

    $scope.delModule = function (module) {
        var a = _.indexOf($scope.activeVersion.modules, module);
        a > -1 && ($scope.activeVersion.modules = _.without($scope.activeVersion.modules, $scope.activeVersion.modules[a]));
        _.isEmpty($scope.activeVersion.modules) && $(".wxapp-module-list .add").css("display", "");
    }
}
]);

angular.module("wxApp").controller("PaymentCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.config = a;
    $scope.paysetting = a.paysetting;

    $scope.saveEdit = function (a) {
        if ("wechat" == a) {
            if ("" == $scope.paysetting.wechat.mchid)
                return util.message("请填写商户号", "", "info"),
                    false;
            if ("" == $scope.paysetting.wechat.signkey)
                return util.message("请填写支付秘钥", "", "info"),
                    false
        }
        $http.post($scope.config.saveurl, {
            type: a,
            param: $scope.paysetting[a]
        }).success(function (e) {
            if (0 != e.message.errno)
                return util.message(e.message.message, "", "info"),
                    false;
            $(".modal").modal("hide"),
                util.message(e.message.message, e.redirect, "success")
        })
    };

    $(".modal").on("hide.bs.modal", function () {
        $http.post($scope.config.get_setting_url, {}).success(function (t) {
            $scope.paysetting = t.message.message;
        })
    });

    $scope.tokenGen = function (t) {
        for (var a = "", n = 0; n < 32; n++)
            a += "abcdefghijklmnopqrstuvwxyz0123456789"[parseInt(32 * Math.random())];
        "wechat.signkey" == t && ($scope.paysetting.wechat.signkey = a);
    }
}
]);

angular.module("wxApp").controller("AccountDisplayWxappCtrl", ["$scope", "$http", "$timeout", "config", function ($scope, $http, a, config) {
    $scope.wxapp_lists = config.wxapp_lists;
    $scope.links = config.links;
    $scope.alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "#", "全部"];
    $scope.activeLetter = config.activeLetter;

    $scope.showVersions = function ($event) {
        var t = $($event.target).parents(".mask").next(".cut-select");

        if ("none" == t.css("display")) {
            t.css("display", "block");
            t.parent(".wxapp-list-item").siblings().find(".cut-select").css("display", "none");
        } else {
            t.css("display", "none");
        }
    };

    $scope.hideSelect = function ($event) {
        $($event.target).css("display", "none");
    };

    $scope.searchModule = function (letter) {
        $scope.activeLetter = letter;
        a(function () {
            $(".button").click()
        }, 500);
    }
}
]);

angular.module("wxApp").controller("WxappWelcomeCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.notices = a.notices;
    $scope.loaderror = 0;
    $scope.last_modules = null;
    $scope.daily_visittrend = [];

    $http({
        method: "POST",
        url: "./index.php?c=wxapp&a=version&do=get_daily_visittrend"
    }).success(function (t) {
        0 == t.message.errno && ($scope.daily_visittrend = t.message.message);
    });

    $scope.get_last_modules = function () {
        $http.post("./index.php?c=home&a=welcome&do=get_last_modules").success(function (t) {
            if (0 == t.message.errno) {
                var a = [];
                angular.forEach(t.message.message, function (e, t) {
                    e.wxapp && a.push(e)
                });
                $scope.last_modules = a
            } else
                $scope.last_modules = null;
            $scope.loaderror = 1;
        })
    };
    $scope.get_last_modules()
}
]);

angular.module("wxApp").controller("moduleLinkUniacidCtrl", ["$scope", "$http", "config", function ($scope, $http, a) {
    $scope.versionInfo = a.version_info;
    $scope.module = "";
    $scope.linkWebappAccounts = "";
    $scope.linkAppAccounts = "";
    $scope.selectedAccount = "";

    $scope.tabChange = function (index) {
        $scope.jurindex = index;
        1 != index || $scope.linkAppAccounts || $scope.searchLinkAccount($scope.module, "app");
        1 == $scope.jurindex && $("#account-app .row").find(".item").removeClass("active");
        0 == $scope.jurindex && $("#account-webapp .row").find(".item").removeClass("active");
        $scope.selectedAccount = "";
    };

    $scope.searchLinkAccount = function (name, type) {
        $scope.module = name;
        $("#show-account").modal("show");
        if ("webapp" == type) {
            $scope.tabChange(0);
            $scope.loadingWebappData = true;
        } else {
            $scope.loadingAppData = true;
        }

        $http.post(a.links.search_link_account, {
            module_name: name,
            type: "webapp" == type ? a.webapp : a.app
        }).success(function (t) {

            if ("webapp" == type) {
                $scope.loadingWebappData = false;
                $scope.linkWebappAccounts = t.message.message;
                $scope.linkAppAccounts = "";
            } else {
                $scope.loadingAppData = false;
                $scope.linkAppAccounts = t.message.message;
            }
        })
    };

    $scope.selectLinkAccount = function (account, $event) {
        $($event.target).parentsUntil(".col-sm-2").addClass("active");
        $($event.target).parentsUntil(".col-sm-2").parent().siblings().find(".item").removeClass("active");
        $scope.selectedAccount = account;
    };

    $scope.module_unlink_uniacid = function () {
        $http.post(a.links.module_unlink_uniacid, {
            version_id: $scope.versionInfo.id
        }).success(function (e) {
            e.message.errno,
                util.message(e.message.message, e.redirect)
        })
    };

    $scope.moduleLinkUniacid = function () {
        $("#show-account").modal("hide"),
            $http.post(a.links.module_link_uniacid, {
                module_name: $scope.module,
                submit: "yes",
                token: a.token,
                uniacid: $scope.selectedAccount.uniacid,
                version_id: $scope.versionInfo.id
            }).success(function (e) {
                0 == e.message.errno ? util.message("关联成功", "refresh", "success") : util.message(e.message.message)
            }),
            $scope.module = ""
    };
}
]);

angular.module("wxApp").controller("WxappEntranceCtrl", ["$scope", "$http", "serviceCommon", "config", function ($scope, $http, serviceCommon, config) {
    $scope.moduleList = config.moduleList;
    $scope.success = function (e) {
        var e = parseInt(e),
            t = $('<span class="label label-success" style="position:absolute;z-index:10;width:90px;height:34px;line-height:28px;"><i class="fa fa-check-circle"></i> 复制成功</span>');
        serviceCommon.copySuccess(e, t);
    }
}
]);

angular.module("wxApp").directive("we7ChooseMore", ["$http", function (e) {
    return {
        restrict: "EA",
        templateUrl: "resource/js/app/templates/directive-selectmore-module-item.html",
        scope: {
            selectModules: "=we7Modules",
            selectSingle: "=we7ChooseSingle"
        },
        link: function (t) {
            t.selectMore = function () {
                t.wxappModuleList && 0 != t.wxappModuleList.length ? $("#modules-Modal").modal("show") : e({
                    method: "POST",
                    url: "./index.php?c=wxapp&a=post&do=get_wxapp_modules",
                    cache: true
                }).success(function (e, a) {
                    t.wxappModuleList = e.message.message,
                        $("#modules-Modal").modal("show")
                })
            }
                ,
                t.selectModule = function (e) {
                    if (t.selectSingle)
                        return t.selectModules = [],
                            t.selectModules.push({
                                title: e.title,
                                module: e.name,
                                icon: e.logo,
                                version: e.version,
                                bindings: e.bindings
                            }),
                            $("#modules-Modal").modal("hide"),
                            $(".app-list .select-more").css("display", "none"),
                            false;
                    t.selectModules.push({
                        title: e.title,
                        module: e.name,
                        icon: e.logo,
                        version: e.version,
                        bindings: e.bindings
                    }),
                        $("#modules-Modal").modal("hide")
                }
                ,
                t.delModule = function (e) {
                    _.indexOf(t.selectModules, e) > -1 && (t.selectModules = _.without(t.selectModules, e)),
                    _.isEmpty(t.selectModules) && $(".app-list .select-more").css("display", "")
                }
        }
    }
}
]);

angular.module("wxApp").service("serviceCommon", ["$rootScope", function (e) {
    var t = {};
    return t.copySuccess = function (e, t) {
        var e = parseInt(e)
            , t = t
            , a = $("#copy-" + e).next().html();
        (!a || a.indexOf('<span class="label label-success" style="position:absolute;z-index:10"><i class="fa fa-check-circle"></i> 复制成功</span>') < 0) && $("#copy-" + e).after(t),
            setTimeout(function () {
                t.remove()
            }, 2e3)
    }
        ,
        t
}
]);
